{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-device-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-device-list.vue","mtime":1602073176186},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Device Orders\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      orders: [],\n      devices: [],\n      orderedDevice: [],\n      DatOrder: null,\n      DatDelivery: null,\n      OrderAmount: null,\n      DelStatus: null,\n      Comment: null,\n      show: false,\n      date: null,\n      next: null,\n      error: false,\n      updateDeviceId: null,\n      updateDeviceStatus: false,\n      optionStatus: [{\n        code: null,\n        label: 'Choose Delivery Status'\n      }, {\n        code: 'Delivered',\n        label: 'Delivered'\n      }, {\n        code: 'Not Delivered',\n        label: 'Not Delivered'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Order Number\",\n      field: \"idOrder.txtOrderNumber\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Serial Number\",\n      field: \"idDevice.txtSerialNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"IMEI\",\n      field: \"idDevice.txtIMEI\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Device\",\n      field: \"idDevice.idModel.txtModelName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Order Amount\",\n      field: \"numOrderAmount\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Order Date\",\n      field: \"datOrder\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Date\",\n      field: \"datDelivery\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Status\",\n      field: \"txtDeliveryStatus\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('orderDevice_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('orderDevice_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('orderDevice_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('orderDevice_columnStats', null);\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.show1 = this.show1 ? false : true;\n    },\n    changeExternalFilter: function changeExternalFilter(val) {\n      this.extFilter = val;\n      this.gridApi.onFilterChanged();\n    },\n    isExternalFilterPresent: function isExternalFilterPresent() {\n      return this.extFilter !== null;\n    },\n    doesExternalFilterPass: function doesExternalFilterPass(node) {\n      switch (this.extFilter) {\n        case 'all':\n          return true;\n\n        case 'delivered':\n          return node.data.txtDeliveryStatus === 'Delivered';\n\n        case 'not delivered':\n          return node.data.txtDeliveryStatus === 'Not Delivered';\n\n        default:\n          return true;\n      }\n    },\n    editOrderDeviceMenu: function editOrderDeviceMenu(params) {\n      this.emptyDeviceInput();\n      var sel = params.node.data;\n      this.orderedDevice = sel.idDevice;\n      this.DatOrder = sel.datOrder;\n      this.DatDelivery = sel.datDelivery;\n      this.OrderAmount = sel.numOrderAmount;\n      this.DelStatus = sel.txtDeliveryStatus;\n      this.Comment = sel.txtComment;\n      this.updateDeviceStatus = true;\n      this.updateDeviceId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateDeviceOrder: function () {\n      var _updateDeviceOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/order-device/\".concat(this.updateDeviceId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  datOrder: this.DatOrder,\n                  datDelivery: this.DatDelivery,\n                  numOrderAmount: this.OrderAmount,\n                  txtDeliveryStatus: this.DelStatus,\n                  txtComment: this.Comment,\n                  idDevice: this.orderedDevice.id\n                }).then(function (response) {\n                  _this.getDeviceOrder();\n\n                  _this.emptyDeviceInput();\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateDeviceOrder() {\n        return _updateDeviceOrder.apply(this, arguments);\n      }\n\n      return updateDeviceOrder;\n    }(),\n    updateDeviceOrderGrid: function () {\n      var _updateDeviceOrderGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/order-device/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  datOrder: event.node.data.datOrder,\n                  datDelivery: event.node.data.datDelivery,\n                  numOrderAmount: event.node.data.numOrderAmount,\n                  txtDeliveryStatus: event.node.data.txtDeliveryStatus\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateDeviceOrderGrid(_x) {\n        return _updateDeviceOrderGrid.apply(this, arguments);\n      }\n\n      return updateDeviceOrderGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this2 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Order? => \" + params.node.data.idDevice.txtSerialNumber, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this2.deleteDeviceOrder(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteDeviceOrder: function () {\n      var _deleteDeviceOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {\n        var _this3 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/order-device/\".concat(params.node.data.id, \"/\");\n                _context3.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this3.getDeviceOrder();\n                  } else {\n                    _this3.$bvToast.toast(\"You can't delete this instance. Please check if all connections to this instance are deleted.\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteDeviceOrder(_x2) {\n        return _deleteDeviceOrder.apply(this, arguments);\n      }\n\n      return deleteDeviceOrder;\n    }(),\n    emptyDeviceInput: function emptyDeviceInput(event) {\n      this.DatOrder = this.DatDelivery = this.OrderAmount = this.DelStatus = this.Comment = null;\n      this.orderedDevice = [];\n      this.show = !this.show;\n      this.updateDeviceStatus = false;\n    },\n    getDevice: function getDevice() {\n      var _this4 = this;\n\n      if (!this.error) {\n        this.devices = [];\n        var endpoint = \"/api/device-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this4$devices;\n\n          (_this4$devices = _this4.devices).push.apply(_this4$devices, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDeviceOrder: function getDeviceOrder() {\n      var _this5 = this;\n\n      if (!this.error) {\n        this.orders = [];\n        var endpoint = \"/api/order-device-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this5$orders;\n\n          (_this5$orders = _this5.orders).push.apply(_this5$orders, _toConsumableArray(data.results));\n\n          _this5.rowData = _this5.orders;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this6 = this;\n\n      var result = [{\n        name: 'Edit Order Device',\n        action: function action() {\n          return _this6.editOrderDeviceMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Device Order',\n        action: function action() {\n          return _this6.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getDeviceOrder();\n    this.getDateToday();\n    this.getDevice();\n  }\n};",null]}