{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\common\\api.service.js","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\common\\api.service.js","mtime":1601619215390},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import { CSRF_TOKEN } from \"./csrf_token.js\";\n\nfunction handleResponse(response) {\n  if (response.status === 204) {\n    return '';\n  } else if (response.status === 404) {\n    return \"ERROR\";\n  } else if (response.status === 400) {\n    return \"ERROR\";\n  } else if (response.status === 403) {\n    return \"ERROR\";\n  } else if (response.status === 500) {\n    return \"ERROR\";\n  } else {\n    return response.json();\n  }\n}\n\nfunction apiService(endpoint, method, data) {\n  // D.R.Y. code to make HTTP requests to the REST API backend using fetch\n  var config = {\n    method: method || \"GET\",\n    body: data !== undefined ? JSON.stringify(data) : null,\n    headers: {\n      'content-type': 'application/json',\n      'X-CSRFTOKEN': CSRF_TOKEN\n    }\n  };\n  return fetch(endpoint, config).then(handleResponse).catch(function (error) {\n    return console.log(error);\n  });\n}\n\nexport { apiService };",null]}