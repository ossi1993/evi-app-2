{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\model-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\model-list.vue","mtime":1601921321500},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Model\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      suppliers: [],\n      manufacturers: [],\n      models: [],\n      unknown: [],\n      items: [],\n      selectedItems: [],\n      show: false,\n      MName: null,\n      MStatus: null,\n      Manufacturer: null,\n      Supplier: null,\n      Comment: null,\n      date: null,\n      next: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      optionSupplier: [],\n      optionManufacturer: [],\n      optionStatuses: [{\n        value: 'Active',\n        text: 'Active'\n      }, {\n        value: 'Inactive',\n        text: 'Inactive'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Model Name\",\n      field: \"txtModelName\",\n      filter: 'agTextColumnFilter',\n      cellRenderer: 'agGroupCellRenderer'\n    }, {\n      headerName: \"Model Status\",\n      field: \"txtModelStatus\",\n      filter: 'agTextColumnFilter',\n      cellEditor: 'agRichSelectCellEditor',\n      cellEditorParams: {\n        cellHeight: 50,\n        values: ['Active', 'Inactive']\n      }\n    }, {\n      headerName: \"Manufacturer\",\n      field: \"idManufacturer.txtManufacturerName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Supplier\",\n      field: \"idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: true,\n        columnDefs: [{\n          headerName: \"Article Number\",\n          field: \"txtArticlenumber\",\n          filter: 'agTextColumnFilter'\n        }, {\n          headerName: \"Item Description\",\n          field: \"txtDescription\",\n          filter: 'agTextColumnFilter'\n        }, {\n          headerName: \"Type\",\n          field: \"txtType\",\n          filter: 'agTextColumnFilter',\n          editable: true,\n          cellEditor: 'agRichSelectCellEditor',\n          cellEditorParams: {\n            cellHeight: 50,\n            values: ['Glass', 'Case', 'Frame Standard', 'Frame Eco', 'Combi']\n          }\n        }, {\n          headerName: \"Version\",\n          field: \"txtVersion\",\n          filter: 'agTextColumnFilter'\n        }, {\n          headerName: \"Cost\",\n          field: \"curCost\",\n          filter: 'agTextColumnFilter',\n          hide: true\n        }, {\n          headerName: \"GTIN / EAN\",\n          field: \"txtGtinEan\",\n          filter: 'agTextColumnFilter'\n        }, {\n          headerName: \"Item Group\",\n          field: \"txtItemGroup\",\n          filter: 'agTextColumnFilter'\n        }, {\n          headerName: \"Link\",\n          field: \"txtLink\",\n          filter: 'agTextColumnFilter',\n          editable: false\n        }, {\n          headerName: \"Memo\",\n          field: \"txtComment\",\n          filter: 'agTextColumnFilter'\n        }],\n        defaultColDef: {\n          flex: 1,\n          resizable: true\n        }\n      },\n      getDetailRowData: function getDetailRowData(params) {\n        var el = _this.items.filter(function (e) {\n          return e.idModel.some(function (d) {\n            return d.id == params.data.id;\n          });\n        });\n\n        params.successCallback(el);\n      }\n    };\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('model_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('model_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function disabled() {\n      return !this.MName ? true : !this.MStatus ? true : !this.Manufacturer ? true : !this.Supplier ? true : false;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('model_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('model_columnStats', null);\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    addModel: function addModel() {\n      var _this2 = this;\n\n      var endpoint = \"/api/model/\";\n      apiService(endpoint, \"POST\", {\n        txtModelName: this.MName,\n        txtModelStatus: this.MStatus,\n        idManufacturer: this.Manufacturer,\n        idSupplier: this.Supplier,\n        txtComment: this.Comment\n      }).then(function (response) {\n        if (response != 'ERROR') {\n          console.log(response);\n\n          if (_this2.selectedItems || _this2.selectedItems != []) {\n            var array = _this2.selectedItems.map(function (e) {\n              return e.id;\n            });\n\n            var _loop = function _loop(i) {\n              var elements = [];\n              var endpointItem = \"/api/item/\".concat(array[i], \"/\");\n              apiService(endpointItem).then(function (data) {\n                elements.push.apply(elements, _toConsumableArray(data.results));\n              });\n            };\n\n            for (var i = 0; i < array.length; i++) {\n              _loop(i);\n            }\n          }\n\n          _this2.getModels();\n\n          _this2.emptyInput();\n        } else {\n          _this2.error = true;\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    addItemMenu: function addItemMenu(params) {\n      localStorage.setItem('selModel', JSON.stringify(params.node.data));\n      this.$router.push('/app/item/item-list/');\n    },\n    editModelMenu: function editModelMenu(params) {\n      this.emptyInput();\n      var sel = params.node.data;\n      this.MName = sel.txtModelName;\n      this.MStatus = sel.txtModelStatus;\n      this.Manufacturer = sel.idManufacturer;\n      this.Supplier = sel.idSupplier;\n      this.Comment = sel.txtComment;\n      this.selectedItems = this.items.filter(function (e) {\n        return e.idModel.some(function (d) {\n          return d.id == sel.id;\n        });\n      });\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateModel: function () {\n      var _updateModel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_typeof(this.Manufacturer) == \"object\") {\n                  this.Manufacturer = this.Manufacturer.id;\n                } else {\n                  this.Manufacturer = this.Manufacturer;\n                }\n\n                if (_typeof(this.Supplier) == \"object\") {\n                  this.Supplier = this.Supplier.id;\n                } else {\n                  this.Supplier = this.Supplier;\n                }\n\n                endpoint = \"/api/model/\".concat(this.updateId, \"/\");\n                _context.next = 5;\n                return apiService(endpoint, \"PUT\", {\n                  txtModelName: this.MName,\n                  txtModelStatus: this.MStatus,\n                  txtComment: this.Comment,\n                  idManufacturer: this.Manufacturer,\n                  idSupplier: this.Supplier\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    _this3.emptyInput();\n\n                    _this3.getModels();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateModel() {\n        return _updateModel.apply(this, arguments);\n      }\n\n      return updateModel;\n    }(),\n    updateModelGrid: function () {\n      var _updateModelGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/model/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtModelName: event.node.data.txtModelName,\n                  txtModelStatus: event.node.data.txtModelStatus,\n                  txtComment: event.node.data.txtComment\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateModelGrid(_x) {\n        return _updateModelGrid.apply(this, arguments);\n      }\n\n      return updateModelGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Model? => \" + params.node.data.txtModelName, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.deleteModel(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteModel: function () {\n      var _deleteModel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {\n        var _this5 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/model/\".concat(params.node.data.id, \"/\");\n                _context3.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this5.getModels();\n                  } else {\n                    _this5.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteModel(_x2) {\n        return _deleteModel.apply(this, arguments);\n      }\n\n      return deleteModel;\n    }(),\n    emptyInput: function emptyInput(event) {\n      this.Manufacturer = [];\n      this.MName = this.MStatus = this.Comment = null;\n\n      if (event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    getManufacturer: function getManufacturer() {\n      var _this6 = this;\n\n      if (!this.error) {\n        this.manufacturers = [];\n        var endpoint = \"/api/manufacturer/\";\n        apiService(endpoint).then(function (data) {\n          var _this6$manufacturers;\n\n          (_this6$manufacturers = _this6.manufacturers).push.apply(_this6$manufacturers, _toConsumableArray(data.results));\n\n          _this6.optionManufacturer = _this6.manufacturers;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getSupplier: function getSupplier() {\n      var _this7 = this;\n\n      if (!this.error) {\n        this.suppliers = [];\n        var endpoint = \"/api/supplier/\";\n        apiService(endpoint).then(function (data) {\n          var _this7$suppliers;\n\n          (_this7$suppliers = _this7.suppliers).push.apply(_this7$suppliers, _toConsumableArray(data.results));\n\n          _this7.optionSupplier = _this7.suppliers;\n          _this7.unknown = _this7.suppliers.filter(function (e) {\n            return e.txtSupplierName == 'UNKNOWN';\n          });\n          _this7.Supplier = _this7.unknown;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getModels: function getModels() {\n      var _this8 = this;\n\n      if (!this.error) {\n        this.models = [];\n        var endpoint = \"/api/model-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this8$models;\n\n          (_this8$models = _this8.models).push.apply(_this8$models, _toConsumableArray(data.results));\n\n          _this8.rowData = _this8.models;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getItems: function getItems() {\n      var _this9 = this;\n\n      if (!this.error) {\n        this.items = [];\n        var endpoint = \"/api/item-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this9$items;\n\n          (_this9$items = _this9.items).push.apply(_this9$items, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this10 = this;\n\n      var result = [{\n        name: 'Edit Model',\n        action: function action() {\n          return _this10.editModelMenu(params);\n        }\n      }, 'separator', {\n        name: 'Add Item to Model',\n        action: function action() {\n          return _this10.addItemMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Model',\n        action: function action() {\n          return _this10.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getManufacturer();\n    this.getSupplier();\n    this.getModels();\n    this.getDateToday();\n    this.getItems();\n  }\n};",null]}