{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection-type.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection-type.vue","mtime":1601929556733},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Inspection Types\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      inspectionTypes: [],\n      InspectionType: null,\n      InspectionInitial: null,\n      date: null,\n      error: false,\n      show: false,\n      updateStatus: false,\n      updateId: null\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.columnDefs = [{\n      headerName: \"Inspection Type\",\n      field: \"txtInspectionType\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Inspection Initial\",\n      field: \"txtInspectionInitial\",\n      filter: 'agTextColumnFilter'\n    }];\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('inspectionTypes_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('inspectionTypes_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function disabled() {\n      return !this.InspectionType ? true : !this.InspectionInitial ? true : false;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('inspectionTypes_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('inspectionTypes_columnStats', null);\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    addInspectionType: function addInspectionType() {\n      var _this = this;\n\n      var endpoint = \"/api/inspection-type/\";\n      apiService(endpoint, \"POST\", {\n        txtInspectionType: this.InspectionType,\n        txtInspectionInitial: this.InspectionInitial\n      }).then(function (response) {\n        if (response != 'ERROR') {\n          _this.getInspectionTypes();\n\n          _this.emptyInput();\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    editInspectionTypeMenu: function editInspectionTypeMenu(params) {\n      this.emptyInput();\n      var sel = params.node.data;\n      this.InspectionType = sel.txtInspectionType;\n      this.InspectionInitial = sel.txtInspectionInitial;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateInspectionType: function () {\n      var _updateInspectionType = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/inspection-type/\".concat(this.updateId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PUT\", {\n                  txtInspectionType: this.InspectionType,\n                  txtInspectionInitial: this.InspectionInitial\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    _this2.emptyInput();\n\n                    _this2.getInspectionTypes();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateInspectionType() {\n        return _updateInspectionType.apply(this, arguments);\n      }\n\n      return updateInspectionType;\n    }(),\n    updateInspectionTypeGrid: function () {\n      var _updateInspectionTypeGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/inspection-type/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtInspectionType: event.node.data.txtInspectionType,\n                  txtInspectionInitial: event.node.data.txtInspectionInitial\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateInspectionTypeGrid(_x) {\n        return _updateInspectionTypeGrid.apply(this, arguments);\n      }\n\n      return updateInspectionTypeGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this3 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Inspection Type?\", {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this3.deleteInspectionType(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteInspectionType: function () {\n      var _deleteInspectionType = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {\n        var _this4 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/inspection-type/\".concat(params.node.data.id, \"/\");\n                _context3.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this4.getInspectionTypes();\n                  } else {\n                    _this4.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteInspectionType(_x2) {\n        return _deleteInspectionType.apply(this, arguments);\n      }\n\n      return deleteInspectionType;\n    }(),\n    emptyInput: function emptyInput(event) {\n      this.InspectionType = this.InspectionInitial = null;\n\n      if (event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    getInspectionTypes: function getInspectionTypes() {\n      var _this5 = this;\n\n      if (!this.error) {\n        this.inspectionTypes = [];\n        var endpoint = \"/api/inspection-type/\";\n        apiService(endpoint).then(function (data) {\n          var _this5$inspectionType;\n\n          (_this5$inspectionType = _this5.inspectionTypes).push.apply(_this5$inspectionType, _toConsumableArray(data.results));\n\n          _this5.rowData = _this5.inspectionTypes;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this6 = this;\n\n      var result = [{\n        name: 'Edit Inspection Type',\n        action: function action() {\n          return _this6.editInspectionTypeMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Inspection Type',\n        action: function action() {\n          return _this6.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getDateToday();\n    this.getInspectionTypes();\n  }\n};",{"version":3,"sources":["inspection-type.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA,SAAA,UAAA,QAAA,yBAAA;AACA,SAAA,SAAA,QAAA,wBAAA;AACA,SAAA,UAAA,QAAA,iCAAA;AAEA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAJA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA;AACA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,SAAA,EAAA,IAJA;AAKA,MAAA,UAAA,EAAA,IALA;AAMA,MAAA,OAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA,IAPA;AAQA,MAAA,aAAA,EAAA,IARA;AASA,MAAA,mBAAA,EAAA,IATA;AAUA,MAAA,SAAA,EAAA,IAVA;AAWA,MAAA,OAAA,EAAA,UAXA;AAaA;AACA,MAAA,eAAA,EAAA,EAdA;AAeA,MAAA,cAAA,EAAA,IAfA;AAgBA,MAAA,iBAAA,EAAA,IAhBA;AAiBA,MAAA,IAAA,EAAA,IAjBA;AAkBA,MAAA,KAAA,EAAA,KAlBA;AAmBA,MAAA,IAAA,EAAA,KAnBA;AAoBA,MAAA,YAAA,EAAA,KApBA;AAqBA,MAAA,QAAA,EAAA;AArBA,KAAA;AAuBA,GA/BA;AAgCA,EAAA,WAhCA,yBAgCA;AACA,SAAA,WAAA,GAAA,EAAA;AACA,SAAA,aAAA,GAAA;AAAA,MAAA,IAAA,EAAA,CAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,SAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,cAAA,EAAA;AAAA,KAAA;AACA,SAAA,YAAA,GAAA,QAAA;AACA,SAAA,SAAA,GAAA,YAAA;AACA,SAAA,kBAAA,GAAA,EAAA;AACA,SAAA,UAAA,GAAA,CACA;AAAA,MAAA,UAAA,EAAA,iBAAA;AAAA,MAAA,KAAA,EAAA,mBAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,UAAA,EAAA,oBAAA;AAAA,MAAA,KAAA,EAAA,sBAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAFA,CAAA;AAIA,GA1CA;AA2CA,EAAA,OA3CA,qBA2CA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,KAAA,IAAA,EAAA;AACA,WAAA,WAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;AACA,KAFA,MAEA;AACA,WAAA,OAAA,GAAA,KAAA,WAAA,CAAA,GAAA;AACA,WAAA,aAAA,GAAA,KAAA,WAAA,CAAA,SAAA;AACA;AACA,GAlDA;AAmDA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,aAAA,CAAA,KAAA,cAAA,GAAA,IAAA,GAAA,CAAA,KAAA,iBAAA,GAAA,IAAA,GAAA,KAAA;AACA;AAHA,GAnDA;AAwDA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,6BAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,WAAA,CAAA,SAAA,CAAA,cAAA,EAAA,CAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,6BAAA,EAAA,IAAA;AACA,KANA;AAOA,IAAA,UAPA,wBAOA;AACA,WAAA,OAAA,CAAA,iBAAA,CAAA,EAAA;AACA,KATA;AAUA,IAAA,iBAVA,6BAUA,WAVA,EAUA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,cAAA,CAAA,WAAA,EAAA,KAAA;AACA,WAAA,OAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,KAbA;AAcA,IAAA,iBAdA,+BAcA;AAAA;;AACA,UAAA,QAAA,0BAAA;AACA,MAAA,UAAA,CAAA,QAAA,EAAA,MAAA,EAAA;AACA,QAAA,iBAAA,EAAA,KAAA,cADA;AAEA,QAAA,oBAAA,EAAA,KAAA;AAFA,OAAA,CAAA,CAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,IAAA,OAAA,EAAA;AACA,UAAA,KAAA,CAAA,kBAAA;;AACA,UAAA,KAAA,CAAA,UAAA;AACA;AACA,OATA,EAUA,KAVA,CAUA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,OAVA;AAWA,KA3BA;AA4BA,IAAA,sBA5BA,kCA4BA,MA5BA,EA4BA;AACA,WAAA,UAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA,WAAA,cAAA,GAAA,GAAA,CAAA,iBAAA;AACA,WAAA,iBAAA,GAAA,GAAA,CAAA,oBAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,EAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,MAAA,QAAA,CAAA,eAAA,CAAA,SAAA,GAAA,CAAA;AACA,KArCA;AAsCA,IAAA,oBAtCA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCA,gBAAA,QAvCA,kCAuCA,KAAA,QAvCA;AAAA;AAAA,uBAwCA,UAAA,CAAA,QAAA,EAAA,KAAA,EAAA;AACA,kBAAA,iBAAA,EAAA,KAAA,cADA;AAEA,kBAAA,oBAAA,EAAA,KAAA;AAFA,iBAAA,CAAA,CAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,sBAAA,QAAA,IAAA,OAAA,EAAA;AACA,oBAAA,MAAA,CAAA,UAAA;;AACA,oBAAA,MAAA,CAAA,kBAAA;AACA;AACA,iBATA,EAUA,KAVA,CAUA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAVA,CAxCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoDA,IAAA,wBApDA;AAAA,gHAoDA,KApDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDA,gBAAA,QArDA,kCAqDA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EArDA;AAAA;AAAA;AAAA,uBAuDA,UAAA,CAAA,QAAA,EAAA,OAAA,EAAA;AACA,kBAAA,iBAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,iBADA;AAEA,kBAAA,oBAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAFA,iBAAA,CAAA,CAIA,KAJA,CAIA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAJA,CAvDA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8DA,gBAAA,OAAA,CAAA,GAAA;;AA9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiEA,IAAA,SAjEA,qBAiEA,MAjEA,EAiEA;AAAA;;AACA,WAAA,QAAA,CACA,aADA,CACA,+DADA,EACA;AACA,QAAA,KAAA,EAAA,gBADA;AAEA,QAAA,IAAA,EAAA,GAFA;AAGA,QAAA,UAAA,EAAA,IAHA;AAIA,QAAA,SAAA,EAAA,QAJA;AAKA,QAAA,OAAA,EAAA,KALA;AAMA,QAAA,WAAA,EAAA,IANA;AAOA,QAAA,WAAA,EAAA,KAPA;AAQA,QAAA,eAAA,EAAA,KARA;AASA,QAAA,QAAA,EAAA;AATA,OADA,EAYA,IAZA,CAYA,UAAA,KAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA,UAAA,MAAA,CAAA,oBAAA,CAAA,MAAA;AAAA;AAAA,OAZA,EAaA,KAbA,CAaA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,OAbA;AAcA,KAhFA;AAiFA,IAAA,oBAjFA;AAAA,4GAiFA,MAjFA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAkFA,gBAAA,QAlFA,kCAkFA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAlFA;AAAA;AAAA,uBAmFA,UAAA,CAAA,QAAA,EAAA,QAAA,CAAA,CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,sBAAA,QAAA,IAAA,OAAA,EAAA;AACA,oBAAA,MAAA,CAAA,kBAAA;AACA,mBAFA,MAEA;AACA,oBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,qGAAA;AACA,sBAAA,KAAA,EAAA,gBADA;AAEA,sBAAA,OAAA,EAAA,QAFA;AAGA,sBAAA,aAAA,EAAA,IAHA;AAIA,sBAAA,WAAA,EAAA;AAJA,qBAAA;AAMA;AACA,iBAZA,CAnFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiGA,IAAA,UAjGA,sBAiGA,KAjGA,EAiGA;AACA,WAAA,cAAA,GAAA,KAAA,iBAAA,GAAA,IAAA;;AACA,UAAA,KAAA,IAAA,KAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,GAAA,KAAA;AACA,aAAA,IAAA,GAAA,CAAA,KAAA,IAAA;AACA;AACA,KAzGA;AA0GA,IAAA,kBA1GA,gCA0GA;AAAA;;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,aAAA,eAAA,GAAA,EAAA;AACA,YAAA,QAAA,0BAAA;AACA,QAAA,UAAA,CAAA,QAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AAAA;;AACA,mCAAA,MAAA,CAAA,eAAA,EAAA,IAAA,iDAAA,IAAA,CAAA,OAAA;;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,eAAA;AACA,SAJA,EAKA,KALA,CAKA,UAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,SALA;AAMA;AACA,KArHA;AAsHA,IAAA,YAtHA,0BAsHA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,WAAA,IAAA,GAAA,KAAA,CAAA,OAAA,KAAA,KAAA,IAAA,KAAA,CAAA,QAAA,KAAA,CAAA,IAAA,KAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,KAzHA;AA0HA,IAAA,cA1HA,0BA0HA,MA1HA,EA0HA;AAAA;;AACA,UAAA,MAAA,GAAA,CACA;AACA,QAAA,IAAA,EAAA,sBADA;AAEA,QAAA,MAAA,EAAA;AAAA,iBAAA,MAAA,CAAA,sBAAA,CAAA,MAAA,CAAA;AAAA;AAFA,OADA,EAKA,WALA,EAMA;AACA,QAAA,IAAA,EAAA,wBADA;AAEA,QAAA,MAAA,EAAA;AAAA,iBAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA;AAAA;AAFA,OANA,EAUA,QAVA,CAAA;AAYA,aAAA,MAAA;AACA;AAxIA,GAxDA;AAkMA,EAAA,OAlMA,qBAkMA;AACA,SAAA,YAAA;AACA,SAAA,kBAAA;AACA;AArMA,CAAA","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Inspection Type'\" :folder=\"'Inspection'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Check\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Types</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.inspectionTypes.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" id=\"new-attribute-section\" @click=\"emptyInput('add')\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Inspection Type</h5>\n            </b-row>\n            <div class=\"ml-3 mr-3\" v-show=\"show\">\n              <b-row class=\"ml-3 mr-3 mt-3\">\n                <b-col md=\"6\">\n                  <b-form-input id=\"input-1\" v-model=\"InspectionType\" type=\"text\" placeholder=\"Inspection Type\" ></b-form-input>\n                </b-col>\n                <b-col md=\"6\">\n                  <b-form-input id=\"input-2\" v-model=\"InspectionInitial\" type=\"text\" placeholder=\"Inspection Initial\" ></b-form-input>\n                </b-col>\n              </b-row>\n\n              <!-- NEW INSPECTION TYPE / UPDATE INSPECTION TYPE BUTTONS -->\n              <b-row class=\"ml-3 mr-3 mt-5\">\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-info\">Cancel</b-button>\n                </b-col>\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"addInspectionType\" block variant=\"success\" :disabled=\"disabled\">Add Inspection Type</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"updateInspectionType\" block variant=\"warning\" :disabled=\"disabled\">Update Inspection Type</b-button>\n                </b-col>\n              </b-row>\n\n              <!-- ERROR MESSAGE -->\n              <b-row class=\"ml-3 mr-3\">\n                <b-col md=\"12\" class=\"mt-3\">\n                  <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                    <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                  </b-alert>\n                </b-col>\n              </b-row>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridInspectionType\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @cellValueChanged=\"updateInspectionTypeGrid\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :getContextMenuItems=\"getContextMenu\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Inspection Types\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n\n      // VUE VARIABLES\n      inspectionTypes: [],\n      InspectionType: null,\n      InspectionInitial: null,\n      date: null,\n      error: false,\n      show: false,\n      updateStatus: false,\n      updateId: null,\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.columnDefs = [\n      {headerName: \"Inspection Type\", field: \"txtInspectionType\", filter: 'agTextColumnFilter', },\n      {headerName: \"Inspection Initial\", field: \"txtInspectionInitial\", filter: 'agTextColumnFilter', },\n      ]\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('inspectionTypes_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('inspectionTypes_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function () {\n      return !this.InspectionType ? true : !this.InspectionInitial ? true : false; \n    },\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('inspectionTypes_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('inspectionTypes_columnStats', null);\n    },\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    addInspectionType() {\n      let endpoint = `/api/inspection-type/`;\n      apiService(endpoint, \"POST\", { \n        txtInspectionType: this.InspectionType, \n        txtInspectionInitial: this.InspectionInitial, \n        })\n        .then(response => {\n          if (response != 'ERROR'){\n            this.getInspectionTypes();\n            this.emptyInput();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    editInspectionTypeMenu(params) {\n      this.emptyInput();\n      let sel = params.node.data;\n      this.InspectionType = sel.txtInspectionType;\n      this.InspectionInitial = sel.txtInspectionInitial;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateInspectionType() {\n      let endpoint = `/api/inspection-type/${this.updateId}/`;\n      await apiService(endpoint, \"PUT\", { \n        txtInspectionType: this.InspectionType, \n        txtInspectionInitial: this.InspectionInitial, \n        })\n        .then(response => {\n          if (response != 'ERROR'){\n            this.emptyInput();\n            this.getInspectionTypes();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    async updateInspectionTypeGrid(event) {     \n      let endpoint = `/api/inspection-type/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtInspectionType: event.node.data.txtInspectionType, \n          txtInspectionInitial: event.node.data.txtInspectionInitial, \n          })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Inspection Type?\", {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => { if (value) { this.deleteInspectionType(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteInspectionType(params) {\n      let endpoint = `/api/inspection-type/${params.node.data.id}/`;\n      await apiService(endpoint, \"DELETE\")\n        .then(response => {\n          if (response != 'ERROR') {\n            this.getInspectionTypes();\n          } else {\n            this.$bvToast.toast(`Can't delete this entry. Please check if there are dependent entries. Please delete those first!`, {\n              title: 'DELETE WARNING',\n              variant: 'danger',\n              autoHideDelay: 6000,\n              appendToast: false\n            })\n          }\n        })\n    },\n    emptyInput(event) {\n      this.InspectionType = this.InspectionInitial = null;\n      if(event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    getInspectionTypes() {\n      if (!this.error) {\n        this.inspectionTypes = [];\n        let endpoint = `/api/inspection-type/`;\n        apiService(endpoint)\n          .then(data => {\n            this.inspectionTypes.push(...data.results);\n            this.rowData = this.inspectionTypes\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Inspection Type',\n          action: () => this.editInspectionTypeMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Inspection Type',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getDateToday();\n    this.getInspectionTypes();\n  },\n};\n\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  #new-attribute-section {\n    cursor: pointer;\n    outline: none;\n  }\n</style>\n"],"sourceRoot":"src/views/app/inspection"}]}