{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\common\\api.service.js","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\common\\api.service.js","mtime":1601619215390},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import { CSRF_TOKEN } from \"./csrf_token.js\";\n\nfunction handleResponse(response) {\n  if (response.status === 204) {\n    return '';\n  } else if (response.status === 404) {\n    return \"ERROR\";\n  } else if (response.status === 400) {\n    return \"ERROR\";\n  } else if (response.status === 403) {\n    return \"ERROR\";\n  } else if (response.status === 500) {\n    return \"ERROR\";\n  } else {\n    return response.json();\n  }\n}\n\nfunction apiService(endpoint, method, data) {\n  // D.R.Y. code to make HTTP requests to the REST API backend using fetch\n  var config = {\n    method: method || \"GET\",\n    body: data !== undefined ? JSON.stringify(data) : null,\n    headers: {\n      'content-type': 'application/json',\n      'X-CSRFTOKEN': CSRF_TOKEN\n    }\n  };\n  return fetch(endpoint, config).then(handleResponse).catch(function (error) {\n    return console.log(error);\n  });\n}\n\nexport { apiService };",{"version":3,"sources":["C:/Users/Anwender/SJO/evi/evi/frontend/src/common/api.service.js"],"names":["CSRF_TOKEN","handleResponse","response","status","json","apiService","endpoint","method","data","config","body","undefined","JSON","stringify","headers","fetch","then","catch","error","console","log"],"mappings":"AAAA,SAASA,UAAT;;AAGA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAO,EAAP;AACD,GAFD,MAEO,IAAID,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,WAAO,OAAP;AACD,GAFM,MAEA,IAAID,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,WAAO,OAAP;AACD,GAFM,MAEA,IAAID,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,WAAO,OAAP;AACD,GAFM,MAEA,IAAID,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,WAAO,OAAP;AACD,GAFM,MAEA;AACL,WAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF;;AAED,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AAC1C;AACA,MAAMC,MAAM,GAAG;AACbF,IAAAA,MAAM,EAAEA,MAAM,IAAI,KADL;AAEbG,IAAAA,IAAI,EAAEF,IAAI,KAAKG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB,GAA4C,IAFrC;AAGbM,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,qBAAed;AAFR;AAHI,GAAf;AAQA,SAAOe,KAAK,CAACT,QAAD,EAAWG,MAAX,CAAL,CACGO,IADH,CACQf,cADR,EAEGgB,KAFH,CAES,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFd,CAAP;AAGD;;AAED,SAASb,UAAT","sourcesContent":["import { CSRF_TOKEN } from \"./csrf_token.js\"\r\n\r\n\r\nfunction handleResponse(response) {\r\n  if (response.status === 204) {\r\n    return '';\r\n  } else if (response.status === 404) {\r\n    return \"ERROR\";\r\n  } else if (response.status === 400) {\r\n    return \"ERROR\";\r\n  } else if (response.status === 403) {\r\n    return \"ERROR\";\r\n  } else if (response.status === 500) {\r\n    return \"ERROR\";\r\n  } else {\r\n    return response.json();\r\n  }\r\n}\r\n\r\nfunction apiService(endpoint, method, data) {\r\n  // D.R.Y. code to make HTTP requests to the REST API backend using fetch\r\n  const config = {\r\n    method: method || \"GET\",\r\n    body: data !== undefined ? JSON.stringify(data) : null,\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'X-CSRFTOKEN': CSRF_TOKEN\r\n    }\r\n  };\r\n  return fetch(endpoint, config)\r\n           .then(handleResponse)\r\n           .catch(error => console.log(error))\r\n}\r\n\r\nexport { apiService };\r\n"]}]}