{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\supplier\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\supplier\\list.vue","mtime":1602158921215},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Supplier\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      gridColumnApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      suppliers: [],\n      itemTypes: [],\n      selectedItemTypes: [],\n      SName: null,\n      SType: null,\n      Street1: null,\n      Street2: null,\n      Street3: null,\n      Zip: null,\n      City: null,\n      Province: null,\n      Land: null,\n      CPerson: null,\n      Phone: null,\n      Mail: null,\n      Skype: null,\n      WhatsApp: null,\n      WeChat: null,\n      Comment: null,\n      date: null,\n      error: false,\n      show: false,\n      updateStatus: false,\n      updateId: null\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Supplier Name\",\n      field: \"txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      cellRenderer: 'agGroupCellRenderer'\n    }, {\n      headerName: \"Street 1\",\n      field: \"txtStreet1\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Street 2\",\n      field: \"txtStreet2\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Street 3\",\n      field: \"txtStreet3\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"ZIP\",\n      field: \"txtZip\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"City\",\n      field: \"txtCity\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Province\",\n      field: \"txtProvince\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Land\",\n      field: \"txtLand\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Contact Person\",\n      field: \"txtContactPerson\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Phone\",\n      field: \"txtCpPhone\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"E-Mail\",\n      field: \"txtCpMail\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Skype\",\n      field: \"txtCpSkype\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"WhatsApp\",\n      field: \"txtCpWhatsApp\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"WeChat\",\n      field: \"txtCpWeChat\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n      minWidth: 100\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: true,\n        columnDefs: [{\n          field: 'txtItemType',\n          headerName: 'Item Type'\n        }],\n        defaultColDef: {\n          flex: 1,\n          resizable: true,\n          editable: false\n        }\n      },\n      getDetailRowData: function getDetailRowData(params) {\n        params.successCallback(params.data.idItemType);\n      }\n    };\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('supplier_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('supplier_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function disabled() {\n      return !this.Land ? true : !this.SName ? true : false;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('supplier_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('supplier_columnStats', null);\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onSubmit: function onSubmit() {\n      if (!this.updateStatus) {\n        this.addSup();\n      } else {\n        this.updateSupplier();\n      }\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    addSup: function addSup() {\n      var _this = this;\n\n      var endpoint = \"/api/supplier/\";\n      apiService(endpoint, \"POST\", {\n        txtSupplierName: this.SName,\n        txtStreet1: this.Street1,\n        txtStreet2: this.Street2,\n        txtStreet3: this.Street3,\n        txtZip: this.Zip,\n        txtCity: this.City,\n        txtProvince: this.Province,\n        txtLand: this.Land,\n        txtContactPerson: this.CPerson,\n        txtCpPhone: this.Phone,\n        txtCpMail: this.Mail,\n        txtCpSkype: this.Skype,\n        txtCpWhatsApp: this.WhatsApp,\n        txtCpWeChat: this.WeChat,\n        idItemType: this.selectedItemTypes.map(function (e) {\n          return e.id;\n        }),\n        txtComment: this.Comment\n      }).then(function (response) {\n        if (response != 'ERROR') {\n          _this.getSupplier();\n\n          _this.emptyInput();\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    editSupplierMenu: function editSupplierMenu(params) {\n      this.emptyInput();\n      var sel = params.node.data;\n      this.SName = sel.txtSupplierName;\n      this.Street1 = sel.txtStreet1;\n      this.Street2 = sel.txtStreet2;\n      this.Street3 = sel.txtStreet3;\n      this.Zip = sel.txtZip;\n      this.City = sel.txtCity;\n      this.Province = sel.txtProvince;\n      this.Land = sel.txtLand;\n      this.CPerson = sel.txtContactPerson;\n      this.Phone = sel.txtCpPhone;\n      this.Mail = sel.txtCpMail;\n      this.Skype = sel.txtCpSkype;\n      this.WhatsApp = sel.txtCpWhatsApp;\n      this.WeChat = sel.txtCpWeChat;\n      this.selectedItemTypes = sel.idItemType;\n      this.Comment = sel.txtComment;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateSupplier: function () {\n      var _updateSupplier = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/supplier/\".concat(this.updateId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  txtSupplierName: this.SName,\n                  txtStreet1: this.Street1,\n                  txtStreet2: this.Street2,\n                  txtStreet3: this.Street3,\n                  txtZip: this.Zip,\n                  txtCity: this.City,\n                  txtProvince: this.Province,\n                  txtLand: this.Land,\n                  txtContactPerson: this.CPerson,\n                  txtCpPhone: this.Phone,\n                  txtCpMail: this.Mail,\n                  txtCpSkype: this.Skype,\n                  txtCpWhatsApp: this.WhatsApp,\n                  txtCpWeChat: this.WeChat,\n                  idItemType: this.selectedItemTypes.map(function (e) {\n                    return e.id;\n                  }),\n                  txtComment: this.Comment\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    _this2.emptyInput();\n\n                    _this2.getSupplier();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateSupplier() {\n        return _updateSupplier.apply(this, arguments);\n      }\n\n      return updateSupplier;\n    }(),\n    updateSupplierGrid: function () {\n      var _updateSupplierGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/supplier/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtSupplierName: event.node.data.txtSupplierName,\n                  txtStreet1: event.node.data.txtStreet1,\n                  txtStreet2: event.node.data.txtStreet2,\n                  txtStreet3: event.node.data.txtStreet3,\n                  txtZip: event.node.data.txtZip,\n                  txtCity: event.node.data.txtCity,\n                  txtProvince: event.node.data.txtProvince,\n                  txtLand: event.node.data.txtLand,\n                  txtContactPerson: event.node.data.txtContactPerson,\n                  txtCpPhone: event.node.data.txtCpPhone,\n                  txtCpMail: event.node.data.txtCpMail,\n                  txtCpSkype: event.node.data.txtCpSkype,\n                  txtCpWhatsApp: event.node.data.txtCpWhatsApp,\n                  txtCpWeChat: event.node.data.txtCpWeChat,\n                  txtComment: event.node.data.txtComment\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateSupplierGrid(_x) {\n        return _updateSupplierGrid.apply(this, arguments);\n      }\n\n      return updateSupplierGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this3 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Supplier? => \" + params.node.data.txtSupplierName, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this3.deleteSup(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteSup: function () {\n      var _deleteSup = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {\n        var _this4 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/supplier/\".concat(params.node.data.id, \"/\");\n                _context3.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this4.getSupplier();\n                  } else {\n                    _this4.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteSup(_x2) {\n        return _deleteSup.apply(this, arguments);\n      }\n\n      return deleteSup;\n    }(),\n    emptyInput: function emptyInput(event) {\n      this.selectedItemTypes = [];\n      this.SName = this.Street1 = this.Street2 = this.Street3 = this.Zip = this.City = this.Province = null;\n      this.Land = this.CPerson = this.Phone = this.Mail = this.Skype = this.WhatsApp = this.WeChat = this.Comment = null;\n\n      if (event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    getSupplier: function getSupplier() {\n      var _this5 = this;\n\n      if (!this.error) {\n        this.suppliers = [];\n        var endpoint = \"/api/supplier-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this5$suppliers;\n\n          (_this5$suppliers = _this5.suppliers).push.apply(_this5$suppliers, _toConsumableArray(data.results));\n\n          _this5.rowData = _this5.suppliers;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getItemTypes: function getItemTypes() {\n      var _this6 = this;\n\n      if (!this.error) {\n        this.itemTypes = [];\n        var endpoint = \"/api/item-type/\";\n        apiService(endpoint).then(function (data) {\n          var _this6$itemTypes;\n\n          (_this6$itemTypes = _this6.itemTypes).push.apply(_this6$itemTypes, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this7 = this;\n\n      var result = [{\n        name: 'Edit Supplier',\n        action: function action() {\n          return _this7.editSupplierMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Supplier',\n        action: function action() {\n          return _this7.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getSupplier();\n    this.getDateToday();\n    this.getItemTypes();\n  }\n};",null]}