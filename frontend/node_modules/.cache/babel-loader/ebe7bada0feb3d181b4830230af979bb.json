{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue","mtime":1602172457493},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Topnav from \"./TopNav\";\nimport { isMobile } from \"mobile-device-detect\";\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  components: {\n    Topnav: Topnav\n  },\n  data: function data() {\n    return {\n      isDisplay: true,\n      isMenuOver: false,\n      isStyle: true,\n      selectedParentMenu: \"\",\n      isMobile: isMobile,\n      show: false\n    };\n  },\n  mounted: function mounted() {\n    this.toggleSelectedParentMenu();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    document.addEventListener(\"click\", this.returnSelectedParentMenu);\n    this.handleWindowResize();\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener(\"click\", this.returnSelectedParentMenu);\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n  },\n  computed: _objectSpread({}, mapGetters([\"getSideBarToggleProperties\"])),\n  methods: _objectSpread(_objectSpread({}, mapActions([\"changeSecondarySidebarProperties\", \"changeSecondarySidebarPropertiesViaMenuItem\", \"changeSecondarySidebarPropertiesViaOverlay\", \"changeSidebarProperties\"])), {}, {\n    handleWindowResize: function handleWindowResize() {\n      //  console.log('not working is Mobile');\n      if (window.innerWidth <= 1200) {\n        if (this.getSideBarToggleProperties.isSideNavOpen) {\n          this.changeSidebarProperties();\n        }\n\n        if (this.getSideBarToggleProperties.isSecondarySideNavOpen) {\n          this.changeSecondarySidebarProperties();\n        }\n      } else {\n        if (!this.getSideBarToggleProperties.isSideNavOpen) {\n          this.changeSidebarProperties();\n        }\n      }\n    },\n    toggleSelectedParentMenu: function toggleSelectedParentMenu() {\n      var currentParentUrl = this.$route.path.split(\"/\").filter(function (x) {\n        return x !== \"\";\n      })[1];\n\n      if (currentParentUrl !== undefined || currentParentUrl !== null) {\n        this.selectedParentMenu = currentParentUrl.toLowerCase();\n      } else {\n        this.selectedParentMenu = \"dashboards\";\n      }\n    },\n    toggleSubMenu: function toggleSubMenu(e) {\n      var childrens = this.$refs.sidebarChild.children;\n      var parent = e.target.dataset.item;\n      this.selectedParentMenu = parent;\n      this.changeSecondarySidebarPropertiesViaMenuItem(true);\n    },\n    toggleTriangle: function toggleTriangle(e) {\n      var parent = e.target.dataset.item;\n      this.selectedParentMenu = parent;\n      this.changeSecondarySidebarPropertiesViaMenuItem(false);\n    },\n    toggleTriangleReset: function toggleTriangleReset(e) {\n      this.toggleSelectedParentMenu();\n    },\n    removeOverlay: function removeOverlay() {\n      this.changeSecondarySidebarPropertiesViaOverlay();\n\n      if (window.innerWidth <= 1200) {\n        this.changeSidebarProperties();\n      }\n\n      this.toggleSelectedParentMenu();\n    },\n    returnSelectedParentMenu: function returnSelectedParentMenu() {\n      if (!this.isMenuOver) {\n        this.toggleSelectedParentMenu();\n      }\n    },\n    toggleSidebarDropdwon: function toggleSidebarDropdwon(event) {\n      var dropdownMenus = this.$el.querySelectorAll(\".dropdown-sidemenu.open\");\n      event.currentTarget.classList.toggle(\"open\");\n      dropdownMenus.forEach(function (dropdown) {\n        dropdown.classList.remove(\"open\");\n      });\n    }\n  })\n};",null]}