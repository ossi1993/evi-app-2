{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\templates.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\templates.vue","mtime":1603265381992},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Template\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      excelStyles: null,\n      modules: AllModules,\n      // VUE VARIABLES INSPECTION\n      orderItems: [],\n      orderDevices: [],\n      orderItemAttributes: [],\n      selInspectionName: null,\n      selInspectionType: null,\n      selInspectionInitial: null,\n      selInspectionTemplate: null,\n      selOrderItems: [],\n      selOrderDevice: [],\n      templateAttributes: [],\n      tempAtts: [],\n      orderAtts: [],\n      inspections: [],\n      inspectNumber: null,\n      // VUE VARIABLES\n      templates: [],\n      attributes: [],\n      filteredAttributes: [],\n      selectedAttributes: [],\n      selectedInspectionType: [],\n      selectedItemTypes: [],\n      show: false,\n      show1: false,\n      show2: false,\n      TempName: null,\n      date: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      optionItemTypes: [],\n      optionInspectionTypes: []\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Template Name\",\n      field: \"txtInspectionName\",\n      filter: 'agTextColumnFilter',\n      cellRenderer: 'agGroupCellRenderer',\n      checkboxSelection: true\n    }, {\n      headerName: \"Template Type\",\n      field: \"idInspectionType.txtInspectionType\",\n      filter: 'agTextColumnFilter',\n      cellEditor: 'agRichSelectCellEditor'\n    }, {\n      headerName: \"Template Initial\",\n      field: \"idInspectionType.txtInspectionInitial\",\n      filter: 'agTextColumnFilter',\n      cellEditor: 'agRichSelectCellEditor'\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: false,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: 20,\n        columnDefs: [{\n          headerName: \"Item Type\",\n          field: \"idItemType.txtItemType\"\n        }, {\n          headerName: \"Attribute Key\",\n          field: \"txtKeyAttribute\"\n        }, {\n          headerName: \"Attribute Name\",\n          field: \"txtNameAttribute\"\n        }, {\n          headerName: \"Default Value\",\n          field: \"txtValueDefault\"\n        }, {\n          headerName: \"Value Type\",\n          field: \"txtValueType\"\n        }, {\n          headerName: \"Parameter\",\n          field: \"txtParameter\"\n        }],\n        defaultColDef: {\n          flex: 1,\n          editable: false,\n          resizable: true\n        }\n      },\n      getDetailRowData: function getDetailRowData(params) {\n        params.successCallback(params.data.idInspectionTemplateAttribute);\n      }\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted: function mounted() {\n    if (window.InspectionTemplateColState) this.gridOptions.columnApi.setColumnState(window.InspectionTemplateColState);else this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  computed: {\n    disabled: function disabled() {\n      return !this.TempName ? true : !this.selectedInspectionType ? true : !this.selectedItemTypes ? true : false;\n    }\n  },\n  methods: {\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    saveState: function saveState() {\n      window.InspectionTemplateColState = this.gridOptions.columnApi.getColumnState();\n    },\n    restoreState: function restoreState() {\n      window.InspectionTemplateColState = null;\n    },\n    onSubmit: function onSubmit() {\n      console.log('inspection created!');\n    },\n    onChange: function onChange(itemTypes) {\n      var _this = this;\n\n      this.selectedAttributes = null;\n      this.filteredAttributes = [];\n\n      var _loop = function _loop(i) {\n        var el = itemTypes[i];\n        var element = {\n          type: null,\n          attributes: []\n        };\n        element['type'] = el.txtItemType;\n        element['attributes'].push(_this.attributes.filter(function (e) {\n          return e.idItemType.txtItemType == el.txtItemType;\n        }));\n        _this.filteredAttributes[i] = element;\n      };\n\n      for (var i = 0; i < itemTypes.length; i++) {\n        _loop(i);\n      }\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.getOrderItems();\n      this.getOrderDevices();\n      this.selInspectionName = event.node.data.txtInspectionName;\n      this.selInspectionType = event.node.data.idInspectionType.txtInspectionType;\n      this.selInspectionInitial = event.node.data.idInspectionType;\n      this.selInspectionTemplate = event.node.data.id;\n      this.getSelectedTemplateAttributes(event.node.data.id);\n      this.getInspectionTemplateAttributes();\n      this.getInspectionNumber(event.node.data.idInspectionType.txtInspectionInitial);\n      this.show1 = this.show1 ? false : true;\n      document.documentElement.scrollTop = 0;\n    },\n    addInspection: function addInspection() {\n      var _this2 = this;\n\n      var today = new Date();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      var endpoint = \"/api/inspection/\";\n      apiService(endpoint, \"POST\", {\n        idOrderDevice: this.selOrderDevice.id,\n        txtInspectionStatus: 'Work In Progress',\n        idInspectionType: this.selInspectionInitial,\n        txtInspectionNumber: this.inspectNumber\n      }).then(function (response) {\n        if (response != 'ERROR') {\n          for (var i = 0; i < _this2.selOrderItems.length; i++) {\n            for (var t = 0; t < _this2.selOrderItems[i].testAmount; t++) {\n              _this2.addSample(response.id, _this2.selOrderItems[i]);\n            }\n          }\n\n          _this2.emptyInspectionInput();\n\n          localStorage.setItem('InspectionID', response.id);\n\n          _this2.$router.push('inspection/');\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    addSample: function addSample(InspectId, OrderItem) {\n      var _this3 = this;\n\n      var endpoint = \"/api/sample/\";\n      apiService(endpoint, \"POST\", {\n        idInspection: InspectId,\n        idOrderItem: OrderItem.id,\n        txtSampleStatus: 'Not Approved'\n      }).then(function (response) {\n        if (response != 'ERROR') {\n          var el = _this3.tempAtts.filter(function (e) {\n            return this.indexOf(e.id) != -1;\n          }, _this3.templateAttributes);\n\n          var atts = el.filter(function (e) {\n            return e.idItemType === OrderItem.idItem.idItemType;\n          });\n\n          _this3.getSelectedOrderItemAttributes(OrderItem, atts);\n\n          _this3.addSampleAttribute(response.id, atts);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    addSampleAttribute: function addSampleAttribute(SampleId, atts) {\n      var endpoint = \"/api/sample-attribute/\";\n\n      for (var i = 0; i < atts.length; i++) {\n        apiService(endpoint, \"POST\", {\n          txtKeyAttribute: atts[i].txtKeyAttribute,\n          txtNameAttribute: atts[i].txtNameAttribute,\n          txtValueAttribute: atts[i].txtValueDefault,\n          txtValueType: atts[i].txtValueType,\n          txtParameter: atts[i].txtParameter,\n          txtValueMin: atts[i].txtValueMin,\n          txtValueMax: atts[i].txtValueMax,\n          txtValueTolerance: atts[i].txtValueTolerance,\n          idSample: SampleId\n        });\n      }\n    },\n    getOrderItemLabel: function getOrderItemLabel(e) {\n      return \"\".concat(e.idOrder.txtOrderNumber, \"  |  \").concat(e.idItem.txtDescription, \" - \").concat(e.idItem.txtArticleNumber);\n    },\n    getOrderDeviceLabel: function getOrderDeviceLabel(e) {\n      return \"\".concat(e.idOrder.txtOrderNumber, \"  |  \").concat(e.idDevice.idModel.txtModelName, \" - \").concat(e.idDevice.txtSerialNumber);\n    },\n    addTemplate: function addTemplate() {\n      var _this4 = this;\n\n      var endpoint = \"/api/inspection-template/\";\n      apiService(endpoint, \"POST\", {\n        txtInspectionName: this.TempName,\n        idInspectionType: this.selectedInspectionType.id,\n        idInspectionTemplateAttribute: this.selectedAttributes\n      }).then(function (response) {\n        if (response) {\n          _this4.getTemplates();\n\n          _this4.emptyInput();\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    editTemplateMenu: function editTemplateMenu(params) {\n      this.emptyInput();\n      var sel = params.node.data;\n      this.TempName = sel.txtInspectionName;\n      this.selectedInspectionType = sel.idInspectionType;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateTemplate: function () {\n      var _updateTemplate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this5 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/inspection-template/\".concat(this.updateId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  txtInspectionName: this.TempName,\n                  idInspectionType: this.selectedInspectionType.id\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    _this5.emptyInput();\n\n                    _this5.getTemplates();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateTemplate() {\n        return _updateTemplate.apply(this, arguments);\n      }\n\n      return updateTemplate;\n    }(),\n    openModal: function openModal(params) {\n      var _this6 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Template?\", {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this6.deleteTemplate(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    openModalInspection: function openModalInspection(params) {\n      var _this7 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to create the Inspection? Please make sure you have checked your selected Items as well as the inspection type and Device.\", {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"Yes, create the Inspection.\",\n        cancelTitle: \"No, cancel it!\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          console.log('Inspection created');\n        } else {\n          console.log('Inspection cancelled');\n\n          _this7.emptyInspectionInput();\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteTemplate: function () {\n      var _deleteTemplate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(params) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/inspection-template/\".concat(params.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"DELETE\");\n\n              case 4:\n                this.getTemplates();\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 7]]);\n      }));\n\n      function deleteTemplate(_x) {\n        return _deleteTemplate.apply(this, arguments);\n      }\n\n      return deleteTemplate;\n    }(),\n    emptyInput: function emptyInput(event) {\n      this.selectedInspectionType = this.selectedItemTypes = this.ParameterTags = [];\n      this.TempName = null;\n      this.selectedAttributes = null;\n\n      if (event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    emptyInspectionInput: function emptyInspectionInput() {\n      this.show1 = false;\n      this.selInspection = null;\n      this.selOrderItems = this.selOrderDevice = [];\n      this.getTemplates();\n    },\n    getTemplates: function getTemplates() {\n      var _this8 = this;\n\n      if (!this.error) {\n        this.templates = [];\n        var endpoint = \"/api/inspection-template-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this8$templates;\n\n          (_this8$templates = _this8.templates).push.apply(_this8$templates, _toConsumableArray(data.results));\n\n          _this8.rowData = _this8.templates;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getAttributes: function getAttributes() {\n      var _this9 = this;\n\n      if (!this.error) {\n        this.attributes = [];\n        var endpoint = \"/api/inspection-template-attribute-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this9$attributes;\n\n          (_this9$attributes = _this9.attributes).push.apply(_this9$attributes, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    showTempAtts: function showTempAtts() {// this.getSelectedTemplateAttributes(2);\n      // console.log(this.templateAttributes)\n    },\n    getSelectedTemplateAttributes: function getSelectedTemplateAttributes(id) {\n      var _this10 = this;\n\n      var endpoint = \"/api/inspection-template/\".concat(id, \"/\");\n      apiService(endpoint).then(function (data) {\n        var _this10$templateAttri;\n\n        (_this10$templateAttri = _this10.templateAttributes).push.apply(_this10$templateAttri, _toConsumableArray(data.idInspectionTemplateAttribute));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getInspectionTemplateAttributes: function getInspectionTemplateAttributes() {\n      var _this11 = this;\n\n      var endpoint = \"/api/inspection-template-attribute/\";\n      apiService(endpoint).then(function (data) {\n        var _this11$tempAtts;\n\n        (_this11$tempAtts = _this11.tempAtts).push.apply(_this11$tempAtts, _toConsumableArray(data.results));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getSelectedOrderItemAttributes: function getSelectedOrderItemAttributes(OrderItem, atts) {\n      var _this12 = this;\n\n      this.orderAtts = this.orderItemAttributes.filter(function (e) {\n        return e.idOrderItem === OrderItem.id;\n      });\n\n      if (this.orderAtts.length >= 1) {\n        var el = atts.map(function (x) {\n          var item = _this12.orderAtts.find(function (_ref) {\n            var txtKeyAttribute = _ref.txtKeyAttribute;\n            return txtKeyAttribute === x.txtKeyAttribute;\n          });\n\n          if (item != undefined) {\n            x.txtValueDefault = item.txtValueAttribute;\n            x.txtParameter = item.txtParameter;\n            return x;\n          } else {\n            return x;\n          }\n        });\n      }\n\n      return atts;\n    },\n    getItemTypes: function getItemTypes() {\n      var _this13 = this;\n\n      if (!this.error) {\n        this.optionItemTypes = [];\n        var endpoint = \"/api/item-type/\";\n        apiService(endpoint).then(function (data) {\n          var _this13$optionItemTyp;\n\n          (_this13$optionItemTyp = _this13.optionItemTypes).push.apply(_this13$optionItemTyp, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getInspectionTypes: function getInspectionTypes() {\n      var _this14 = this;\n\n      if (!this.error) {\n        this.optionInspectionTypes = [];\n        var endpoint = \"/api/inspection-type/\";\n        apiService(endpoint).then(function (data) {\n          var _this14$optionInspect;\n\n          (_this14$optionInspect = _this14.optionInspectionTypes).push.apply(_this14$optionInspect, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getOrderItems: function getOrderItems() {\n      var _this15 = this;\n\n      this.orderItems = [];\n      var endpoint = \"/api/order-item-list/\";\n      apiService(endpoint).then(function (data) {\n        var _this15$orderItems;\n\n        (_this15$orderItems = _this15.orderItems).push.apply(_this15$orderItems, _toConsumableArray(data.results));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getOrderItemAttributes: function getOrderItemAttributes() {\n      var _this16 = this;\n\n      this.orderItemAttributes = [];\n      var endpoint = \"/api/order-item-attribute/\";\n      apiService(endpoint).then(function (data) {\n        var _this16$orderItemAttr;\n\n        (_this16$orderItemAttr = _this16.orderItemAttributes).push.apply(_this16$orderItemAttr, _toConsumableArray(data.results));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getOrderDevices: function getOrderDevices() {\n      var _this17 = this;\n\n      this.orderDevices = [];\n      var endpoint = \"/api/order-device-list/\";\n      apiService(endpoint).then(function (data) {\n        var _this17$orderDevices;\n\n        (_this17$orderDevices = _this17.orderDevices).push.apply(_this17$orderDevices, _toConsumableArray(data.results));\n\n        _this17.orderDevices = _this17.orderDevices.filter(function (e) {\n          return e.txtDeliveryStatus === 'Delivered';\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getInspectionNumber: function getInspectionNumber(type) {\n      var _this18 = this;\n\n      var endpoint = \"/api/inspection/\";\n      apiService(endpoint).then(function (data) {\n        var _this18$inspections;\n\n        (_this18$inspections = _this18.inspections).push.apply(_this18$inspections, _toConsumableArray(data.results));\n\n        var d = new Date();\n        var y = d.getFullYear();\n        var pn = [];\n        var value = null;\n\n        for (var i = 0; i < _this18.inspections.length; i++) {\n          var el = _this18.inspections[i].txtInspectionNumber.split('-');\n\n          var arr = {\n            label: el[0],\n            type: el[1],\n            year: el[2],\n            number: el[3]\n          };\n\n          if (arr.year == y) {\n            pn.push(arr);\n          }\n        }\n\n        pn.sort(function (a, b) {\n          var keyA = a.number;\n          var keyB = b.number;\n          if (keyA < keyB) return -1;\n          if (keyA > keyB) return 1;\n          return 0;\n        });\n        var sequence = String(parseInt(pn[pn.length - 1].number) + 1);\n\n        for (var e = sequence.length; e < 4; e++) {\n          sequence = '0' + sequence;\n        }\n\n        if (parseInt(pn[pn.length - 1][2] != y)) {\n          value = {\n            label: 'IN',\n            year: y,\n            number: '0001',\n            type: type\n          };\n        } else {\n          value = {\n            label: 'IN',\n            year: y,\n            number: sequence,\n            type: type\n          };\n        }\n\n        _this18.inspectNumber = value.label + '-' + value.type + '-' + value.year + '-' + value.number;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this19 = this;\n\n      var result = [{\n        name: 'Edit Template',\n        action: function action() {\n          return _this19.editTemplateMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Template',\n        action: function action() {\n          return _this19.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getDateToday();\n    this.getInspectionTypes();\n    this.getItemTypes();\n    this.getOrderItemAttributes();\n  }\n};",{"version":3,"sources":["templates.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Templates'\" :folder=\"'Inspection'\" />\n    <!-- ICON BG -->\n    <b-row>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-File\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Templates</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.templates.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n\n    <!-- ######################################## -->\n    <!-- ########### TEMPLATES SECTION ########## -->\n    <!-- ######################################## -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" id=\"new-template-section\" @click=\"emptyInput('add')\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Template</h5>\n            </b-row>\n            <div class=\"ml-3 mr-3\" v-show=\"show\">\n              <b-form>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <b-form-input id=\"input-1\" v-model=\"TempName\" type=\"text\" required placeholder=\"Template Name\" ></b-form-input>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\" v-if=\"updateStatus\">\n                    <multiselect\n                        v-model=\"selectedInspectionType\" tag-placeholder=\"Choose Inspection Type\" placeholder=\"Search inspection type\" label=\"txtInspectionType\" \n                        track-by=\"id\" :options=\"optionInspectionTypes\" :multiple=\"false\" :taggable=\"false\" :close-on-select=\"true\"\n                        :searchable=\"true\" open-direction=\"bottom\">\n                    </multiselect>\n                  </b-col>\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <multiselect\n                        v-model=\"selectedInspectionType\" tag-placeholder=\"Choose Inspection Type\" placeholder=\"Search inspection type\" label=\"txtInspectionType\" \n                        track-by=\"id\" :options=\"optionInspectionTypes\" :multiple=\"false\" :taggable=\"false\" :close-on-select=\"true\"\n                        :searchable=\"true\" open-direction=\"bottom\">\n                    </multiselect>\n                  </b-col>\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <multiselect\n                        v-model=\"selectedItemTypes\" tag-placeholder=\"Choose Item Type\" placeholder=\"Search item type\" label=\"txtItemType\" \n                        track-by=\"id\" :options=\"optionItemTypes\" :multiple=\"true\" :taggable=\"false\" :close-on-select=\"false\"\n                        :searchable=\"true\" open-direction=\"bottom\" @input=\"onChange($event)\" @remove=\"onChange($event)\">\n                    </multiselect>\n                  </b-col>\n                </b-row>\n\n                <!-- ATTRIBUTES -->\n                <div v-if=\"selectedItemTypes != ''\">\n                  <b-row md=\"12\" class=\"ml-5 mr-5 mt-3 mb-3\" v-for=\"element in filteredAttributes\" :key=\"element.id\">\n                    <h5 class=\"mb-1\">{{ element.type }}</h5>\n                    <b-col md=\"12\" v-for=\"atts in element.attributes\" :key=\"atts.id\">\n                      <b-form-checkbox-group v-model=\"selectedAttributes\" :options=\"atts\" multiple\n                        value-field=\"id\" text-field=\"txtNameAttribute\"></b-form-checkbox-group>\n                    </b-col>\n                  </b-row>\n                </div>\n\n              <!-- NEW TEMPLATE / UPDATE TEMPLATE BUTTONS -->\n              <b-row class=\"ml-3 mt-5 mr-3\">\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-info\">Cancel</b-button>\n                </b-col>\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"addTemplate\" block variant=\"success\" :disabled=\"disabled\">Add Template</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"updateTemplate\" block variant=\"warning\" :disabled=\"disabled\">Update Template</b-button>\n                </b-col>\n              </b-row>\n              \n              <!-- ERROR MESSAGE -->\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- ################################################ -->\n    <!-- ########### CREATE INSPECTION SECTION ########## -->\n    <!-- ################################################ -->\n    <div class=\"row\" v-if=\"show1\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">Create Inspection</h5>\n            </b-row>\n            <div class=\"ml-3 mr-3\">\n              <b-form @submit.prevent=\"$bvModal.show('modal-inspection')\">\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"4\">\n                    <b-form-group label=\"Name:\" label-size=\"sm\">\n                      <b-form-input v-model=\"selInspectionName\" type=\"text\" required :disabled=\"true\"></b-form-input>\n                    </b-form-group>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-group label=\"Type:\" label-size=\"sm\">\n                      <b-form-input v-model=\"selInspectionType\" type=\"text\" required :disabled=\"true\"></b-form-input>\n                    </b-form-group>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-group label=\"Initial:\" label-size=\"sm\">\n                      <b-form-input v-model=\"selInspectionInitial\" type=\"text\" required :disabled=\"true\"></b-form-input>\n                    </b-form-group>\n                  </b-col>\n                </b-row>\n                <!-- DEVICE -->\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                     <label class=\"typo__label\">Order Device:</label>\n                    <multiselect\n                        v-model=\"selOrderDevice\" placeholder=\"Choose Order Device\" track-by=\"id\" \n                        :options=\"orderDevices\" :multiple=\"false\" :taggable=\"true\" :close-on-select=\"true\" :searchable=\"true\" \n                        open-direction=\"bottom\" :custom-label=\"getOrderDeviceLabel\">\n                    </multiselect>\n                  </b-col>\n                </b-row>\n                <!-- ORDER ITEMS -->\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                     <label class=\"typo__label\">Order Items:</label>\n                    <multiselect\n                        v-model=\"selOrderItems\" placeholder=\"Choose Order Item\" track-by=\"id\" \n                        :options=\"orderItems\" :multiple=\"true\" :taggable=\"true\" :close-on-select=\"false\" :searchable=\"true\" \n                        open-direction=\"bottom\" :custom-label=\"getOrderItemLabel\">\n                    </multiselect>\n                  </b-col>\n                </b-row>\n                <div class=\"ml-3 mr-3 mt-3\" v-show=\"selOrderItems.length >= 1\">\n                  <h5 class=\"mt-4 ml-4 mr-3\">Amount of Samples</h5>\n                  <b-row class=\"ml-3 mr-3 mt-2\" v-for=\"item in selOrderItems\" :key=\"item.id\">\n                    <b-input-group class=\"mt-2 ml-3 mr-3\" :prepend=\"`${item.idOrder.txtOrderNumber}  |  ${item.idItem.txtDescription} - ${item.idItem.txtArticleNumber}`\" >\n                      <b-form-input v-model=\"item.testAmount\" type=\"number\" min=1 required></b-form-input>\n                    </b-input-group>\n                  </b-row>\n                </div>\n\n                <!-- SAMPLES -->\n                <div v-if=\"selectedItemTypes != ''\">\n                  <b-row md=\"12\" class=\"ml-5 mr-5 mt-3 mb-3\" v-for=\"element in filteredAttributes\" :key=\"element.id\">\n                    <h5 class=\"mb-1\">{{ element.type }}</h5>\n                    <b-col md=\"12\" v-for=\"atts in element.attributes\" :key=\"atts.id\">\n                      <b-form-checkbox-group v-model=\"selectedAttributes\" :options=\"atts\" multiple\n                        value-field=\"id\" text-field=\"txtNameAttribute\"></b-form-checkbox-group>\n                    </b-col>\n                  </b-row>\n                </div>\n\n              <!-- NEW INSPECTION BUTTONS -->\n              <b-row class=\"ml-3 mt-5 mr-3\">\n                <b-col md=\"6\">\n                  <b-button @click=\"emptyInspectionInput\" block variant=\"outline-info\">Cancel</b-button>\n                </b-col>\n                <b-col md=\"6\">\n                  <b-button type=\"submit\" block variant=\"success\" :disabled=\"selOrderItems.length <= 0\">Create Inspection</b-button>\n                </b-col>\n              </b-row>\n              \n              <!-- ERROR MESSAGE -->\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- <b-button size=\"m\" variant=\"warning\" block @click=\"showTempAtts\">Show Template Attributes</b-button> -->\n\n    <!-- INSPECTION MODAL -->\n    <b-modal id=\"modal-inspection\" hide-footer title=\"Please Confirm\">\n      <div class=\"d-block text-center mt-3 mb-4\">\n        <p>Are you sure you want to create the Inspection? Please make sure you have checked your selected Items and Device as well as the chosen Inspection Template.</p>\n      </div>\n      <b-row class=\"mt-3\" >\n        <b-col md=\"6\">\n          <b-button size=\"sm\" variant=\"danger\" block @click=\"emptyInspectionInput(); $bvModal.hide('modal-inspection')\">No, cancel it!</b-button>\n        </b-col>\n        <b-col md=\"6\">\n          <b-button size=\"sm\" variant=\"success\" block @click=\"addInspection(); $bvModal.hide('modal-inspection')\">Yes, create the inspection.</b-button>\n        </b-col>\n      </b-row>\n    </b-modal>\n\n    <!-- GRID TEMPLATES -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridItems\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                :excelStyles=\"excelStyles\"\n                @row-selected=\"onRowSelected\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :getContextMenuItems=\"getContextMenu\"\n                :pagination=\"true\"\n                :paginationPageSize=\"10\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Template\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      excelStyles: null,\n      modules: AllModules,\n\n      // VUE VARIABLES INSPECTION\n      orderItems: [],\n      orderDevices: [],\n      orderItemAttributes: [],\n      selInspectionName: null,\n      selInspectionType: null,\n      selInspectionInitial: null,\n      selInspectionTemplate: null,\n      selOrderItems: [],\n      selOrderDevice: [],\n      templateAttributes: [],\n      tempAtts: [],\n      orderAtts: [],\n      inspections: [],\n      inspectNumber: null,\n\n      // VUE VARIABLES\n      templates: [],\n      attributes: [],\n      filteredAttributes: [],\n      selectedAttributes: [],\n      selectedInspectionType: [],\n      selectedItemTypes: [],\n      show: false,\n      show1: false,\n      show2: false,\n      TempName: null,\n      date: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      optionItemTypes: [],\n      optionInspectionTypes: [],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Template Name\", field: \"txtInspectionName\", filter: 'agTextColumnFilter', cellRenderer: 'agGroupCellRenderer', checkboxSelection: true,},\n      {headerName: \"Template Type\", field: \"idInspectionType.txtInspectionType\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', },\n      {headerName: \"Template Initial\", field: \"idInspectionType.txtInspectionInitial\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', },\n    ],\n    this.defaultColDef = { flex: 1, editable: false, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: 20,\n        columnDefs: [\n          {headerName: \"Item Type\", field: \"idItemType.txtItemType\",},\n          {headerName: \"Attribute Key\", field: \"txtKeyAttribute\",},\n          {headerName: \"Attribute Name\", field: \"txtNameAttribute\",},\n          {headerName: \"Default Value\", field: \"txtValueDefault\",},\n          {headerName: \"Value Type\", field: \"txtValueType\",},\n          {headerName: \"Parameter\", field: \"txtParameter\",},\n        ],\n        defaultColDef: { flex: 1, editable: false, resizable: true, },\n      },\n      getDetailRowData: params => {\n        params.successCallback(params.data.idInspectionTemplateAttribute);\n      },\n    }\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    if (window.InspectionTemplateColState)\n       this.gridOptions.columnApi.setColumnState(window.InspectionTemplateColState);\n    else\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  computed: {\n    disabled: function () {\n      return !this.TempName ? true : !this.selectedInspectionType ? true : !this.selectedItemTypes ? true : false; \n    },\n  },\n  methods: {\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    saveState() {\n      window.InspectionTemplateColState = this.gridOptions.columnApi.getColumnState();\n    },\n    restoreState() {\n      window.InspectionTemplateColState = null;\n    },\n    onSubmit() {\n      console.log('inspection created!')\n    },\n    onChange(itemTypes) {\n      this.selectedAttributes = null;\n      this.filteredAttributes = []\n      for (let i = 0; i < itemTypes.length; i++) {\n        let el = itemTypes[i];\n        let element = { type: null, attributes: [], }\n        element['type'] = el.txtItemType;\n        element['attributes'].push(this.attributes.filter(e => e.idItemType.txtItemType == el.txtItemType))\n        this.filteredAttributes[i] = element;\n      }\n    },\n    onRowSelected(event) {\n      this.getOrderItems();\n      this.getOrderDevices();\n      this.selInspectionName = event.node.data.txtInspectionName;\n      this.selInspectionType = event.node.data.idInspectionType.txtInspectionType;\n      this.selInspectionInitial = event.node.data.idInspectionType;\n      this.selInspectionTemplate = event.node.data.id;\n      this.getSelectedTemplateAttributes(event.node.data.id);\n      this.getInspectionTemplateAttributes();\n      this.getInspectionNumber(event.node.data.idInspectionType.txtInspectionInitial);\n      this.show1 = this.show1 ? false : true;\n      document.documentElement.scrollTop = 0;\n    },\n    addInspection() {\n      let today = new Date();\n      let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n      let endpoint = `/api/inspection/`;\n      apiService(endpoint, \"POST\", {\n        idOrderDevice: this.selOrderDevice.id, \n        txtInspectionStatus: 'Work In Progress', \n        idInspectionType: this.selInspectionInitial,\n        txtInspectionNumber: this.inspectNumber,\n      })\n      .then(response => {\n        if(response != 'ERROR') {\n          for (let i = 0; i < this.selOrderItems.length; i++) {\n            for (let t = 0; t < this.selOrderItems[i].testAmount; t++) {\n              this.addSample(response.id, this.selOrderItems[i])\n            }\n          }\n          this.emptyInspectionInput();\n          localStorage.setItem('InspectionID', response.id);\n          this.$router.push('inspection/');\n        }\n      })\n      .catch(err => console.log(err));\n    },\n    addSample(InspectId, OrderItem) {\n      let endpoint = `/api/sample/`;\n      apiService(endpoint, \"POST\", { \n        idInspection: InspectId, \n        idOrderItem: OrderItem.id, \n        txtSampleStatus: 'Not Approved', \n      })\n      .then(response => {\n        if(response != 'ERROR') {\n          let el = this.tempAtts.filter(function(e) {return this.indexOf(e.id) != -1}, this.templateAttributes);\n          let atts = el.filter(e => e.idItemType === OrderItem.idItem.idItemType);\n          this.getSelectedOrderItemAttributes(OrderItem, atts);\n          this.addSampleAttribute(response.id, atts)\n        }\n      })\n      .catch(err => console.log(err));\n    },\n    addSampleAttribute(SampleId, atts) {\n      let endpoint = `/api/sample-attribute/`;\n      for (let i = 0; i < atts.length; i++) {\n        apiService(endpoint, \"POST\", { \n          txtKeyAttribute: atts[i].txtKeyAttribute, \n          txtNameAttribute: atts[i].txtNameAttribute, \n          txtValueAttribute: atts[i].txtValueDefault, \n          txtValueType: atts[i].txtValueType, \n          txtParameter: atts[i].txtParameter, \n          txtValueMin: atts[i].txtValueMin, \n          txtValueMax: atts[i].txtValueMax, \n          txtValueTolerance: atts[i].txtValueTolerance, \n          idSample: SampleId, \n        })\n      }\n    },\n    getOrderItemLabel(e) {\n      return `${e.idOrder.txtOrderNumber}  |  ${e.idItem.txtDescription} - ${e.idItem.txtArticleNumber}`\n    },\n    getOrderDeviceLabel(e) {\n      return `${e.idOrder.txtOrderNumber}  |  ${e.idDevice.idModel.txtModelName} - ${e.idDevice.txtSerialNumber}`\n    },\n    addTemplate() {\n      let endpoint = `/api/inspection-template/`;\n      apiService(endpoint, \"POST\", { \n        txtInspectionName: this.TempName,\n        idInspectionType: this.selectedInspectionType.id,\n        idInspectionTemplateAttribute: this.selectedAttributes, \n        })\n        .then(response => {\n          if (response){\n            this.getTemplates();\n            this.emptyInput();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    editTemplateMenu(params) {\n      this.emptyInput();\n      let sel = params.node.data;\n      this.TempName = sel.txtInspectionName;\n      this.selectedInspectionType = sel.idInspectionType;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateTemplate() {\n      let endpoint = `/api/inspection-template/${this.updateId}/`;\n      await apiService(endpoint, \"PATCH\", { \n        txtInspectionName: this.TempName,\n        idInspectionType: this.selectedInspectionType.id })\n        .then(response => {\n          if (response != 'ERROR'){\n            this.emptyInput();\n            this.getTemplates();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Template?\", {\n          title: \"Please Confirm\", size: \"m\", buttonSize: \"sm\", okVariant: \"danger\", okTitle: \"YES\",\n          cancelTitle: \"NO\", footerClass: \"p-2\", hideHeaderClose: false, centered: true })\n        .then(value => { if (value) { this.deleteTemplate(params); } })\n        .catch(err => console.log(err));\n    },\n    openModalInspection(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to create the Inspection? Please make sure you have checked your selected Items as well as the inspection type and Device.\", {\n          title: \"Please Confirm\", size: \"m\", buttonSize: \"sm\", okVariant: \"danger\", okTitle: \"Yes, create the Inspection.\",\n          cancelTitle: \"No, cancel it!\", footerClass: \"p-2\", hideHeaderClose: false, centered: true })\n        .then(value => { \n          if (value) { \n            console.log('Inspection created')\n          } else {\n            console.log('Inspection cancelled')\n            this.emptyInspectionInput();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    async deleteTemplate(params) {\n      let endpoint = `/api/inspection-template/${params.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\");\n        this.getTemplates();\n      }\n      catch (err) {\n        console.log(err);\n      }\n    },\n    emptyInput(event) {\n      this.selectedInspectionType = this.selectedItemTypes = this.ParameterTags = [];\n      this.TempName = null;\n      this.selectedAttributes = null;\n      if(event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    emptyInspectionInput() {\n      this.show1 = false;\n      this.selInspection = null;\n      this.selOrderItems = this.selOrderDevice = [];\n      this.getTemplates();\n    },\n    getTemplates() {\n      if (!this.error) {\n        this.templates = [];\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n            this.rowData = this.templates\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        this.attributes = [];\n        let endpoint = `/api/inspection-template-attribute-list/`;\n        apiService(endpoint)\n          .then(data => { this.attributes.push(...data.results); })\n          .catch(err => console.log(err));\n      }\n    },\n    showTempAtts() {\n      // this.getSelectedTemplateAttributes(2);\n      // console.log(this.templateAttributes)\n    },\n    getSelectedTemplateAttributes(id) {\n      let endpoint = `/api/inspection-template/${id}/`;\n      apiService(endpoint)\n        .then(data => {\n          this.templateAttributes.push(...data.idInspectionTemplateAttribute);\n        })\n        .catch(err => console.log(err));\n    },\n    getInspectionTemplateAttributes() {\n      let endpoint = `/api/inspection-template-attribute/`;\n      apiService(endpoint)\n        .then(data => {\n          this.tempAtts.push(...data.results)\n        })\n        .catch(err => console.log(err));\n    },\n    getSelectedOrderItemAttributes(OrderItem, atts) {\n      this.orderAtts = this.orderItemAttributes.filter(e => e.idOrderItem === OrderItem.id)\n      if(this.orderAtts.length >= 1) {\n        let el = atts.map(x => {\n          const item = this.orderAtts.find(({ txtKeyAttribute }) => txtKeyAttribute === x.txtKeyAttribute);\n          if(item != undefined) {\n            x.txtValueDefault = item.txtValueAttribute;\n            x.txtParameter = item.txtParameter;\n            return x;\n          } else {\n            return x;\n          }\n        })\n      }\n      return atts;\n    },\n    getItemTypes() {\n      if (!this.error) {\n        this.optionItemTypes = [];\n        let endpoint = `/api/item-type/`;\n        apiService(endpoint)\n          .then(data => {\n            this.optionItemTypes.push(...data.results);\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getInspectionTypes() {\n      if (!this.error) {\n        this.optionInspectionTypes = [];\n        let endpoint = `/api/inspection-type/`;\n        apiService(endpoint)\n          .then(data => {\n            this.optionInspectionTypes.push(...data.results);\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getOrderItems() {\n      this.orderItems = [];\n      let endpoint = `/api/order-item-list/`;\n      apiService(endpoint)\n        .then(data => { this.orderItems.push(...data.results); })\n        .catch(err => console.log(err));\n    },\n    getOrderItemAttributes() {\n      this.orderItemAttributes = [];\n      let endpoint = `/api/order-item-attribute/`;\n      apiService(endpoint)\n        .then(data => { this.orderItemAttributes.push(...data.results); })\n        .catch(err => console.log(err));\n    },\n    getOrderDevices() {\n      this.orderDevices = [];\n      let endpoint = `/api/order-device-list/`;\n      apiService(endpoint)\n        .then(data => { \n          this.orderDevices.push(...data.results); \n          this.orderDevices = this.orderDevices.filter(e => e.txtDeliveryStatus === 'Delivered')\n          })\n        .catch(err => console.log(err));\n    },\n    getInspectionNumber(type) {\n      let endpoint = `/api/inspection/`;\n      apiService(endpoint)\n        .then(data => {\n          this.inspections.push(...data.results);\n          let d = new Date();\n          let y = d.getFullYear();\n          let pn = [];\n          let value = null;\n          for (let i = 0; i < this.inspections.length; i++) {\n            let el = this.inspections[i].txtInspectionNumber.split('-');\n            let arr = { label: el[0], type: el[1], year: el[2], number: el[3] };\n            if(arr.year == y) {\n              pn.push(arr);\n            }\n          }\n          pn.sort(function(a, b) {\n            const keyA = a.number;\n            const keyB = b.number;\n            if (keyA < keyB) return -1;\n            if (keyA > keyB) return 1;\n            return 0;\n          });\n          let sequence = String(parseInt(pn[pn.length-1].number) + 1);\n          for (let e = sequence.length; e < 4; e++) {\n            sequence = '0' + sequence;\n          }\n          if(parseInt(pn[pn.length-1][2] != y)) {\n            value = { label: 'IN', year: y, number: '0001', type: type };\n          } else {\n            value = { label: 'IN', year: y, number: sequence, type: type };\n          }\n          this.inspectNumber = value.label + '-' + value.type + '-' + value.year + '-' + value.number;\n        })\n        .catch(err => console.log(err));\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Template',\n          action: () => this.editTemplateMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Template',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getDateToday();\n    this.getInspectionTypes();\n    this.getItemTypes();\n    this.getOrderItemAttributes();\n  },\n};\n</script>\n\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  #new-template-section {\n    cursor: pointer;\n    outline: none;\n  }\n</style>\n"],"sourceRoot":"src/views/app/inspection"}]}