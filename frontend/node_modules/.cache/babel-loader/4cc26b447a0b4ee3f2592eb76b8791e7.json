{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-device-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-device-list.vue","mtime":1602073176186},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Device Orders\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      orders: [],\n      devices: [],\n      orderedDevice: [],\n      DatOrder: null,\n      DatDelivery: null,\n      OrderAmount: null,\n      DelStatus: null,\n      Comment: null,\n      show: false,\n      date: null,\n      next: null,\n      error: false,\n      updateDeviceId: null,\n      updateDeviceStatus: false,\n      optionStatus: [{\n        code: null,\n        label: 'Choose Delivery Status'\n      }, {\n        code: 'Delivered',\n        label: 'Delivered'\n      }, {\n        code: 'Not Delivered',\n        label: 'Not Delivered'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Order Number\",\n      field: \"idOrder.txtOrderNumber\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Serial Number\",\n      field: \"idDevice.txtSerialNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"IMEI\",\n      field: \"idDevice.txtIMEI\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Device\",\n      field: \"idDevice.idModel.txtModelName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Order Amount\",\n      field: \"numOrderAmount\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Order Date\",\n      field: \"datOrder\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Date\",\n      field: \"datDelivery\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Status\",\n      field: \"txtDeliveryStatus\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('orderDevice_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('orderDevice_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('orderDevice_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('orderDevice_columnStats', null);\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.show1 = this.show1 ? false : true;\n    },\n    changeExternalFilter: function changeExternalFilter(val) {\n      this.extFilter = val;\n      this.gridApi.onFilterChanged();\n    },\n    isExternalFilterPresent: function isExternalFilterPresent() {\n      return this.extFilter !== null;\n    },\n    doesExternalFilterPass: function doesExternalFilterPass(node) {\n      switch (this.extFilter) {\n        case 'all':\n          return true;\n\n        case 'delivered':\n          return node.data.txtDeliveryStatus === 'Delivered';\n\n        case 'not delivered':\n          return node.data.txtDeliveryStatus === 'Not Delivered';\n\n        default:\n          return true;\n      }\n    },\n    editOrderDeviceMenu: function editOrderDeviceMenu(params) {\n      this.emptyDeviceInput();\n      var sel = params.node.data;\n      this.orderedDevice = sel.idDevice;\n      this.DatOrder = sel.datOrder;\n      this.DatDelivery = sel.datDelivery;\n      this.OrderAmount = sel.numOrderAmount;\n      this.DelStatus = sel.txtDeliveryStatus;\n      this.Comment = sel.txtComment;\n      this.updateDeviceStatus = true;\n      this.updateDeviceId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateDeviceOrder: function () {\n      var _updateDeviceOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/order-device/\".concat(this.updateDeviceId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  datOrder: this.DatOrder,\n                  datDelivery: this.DatDelivery,\n                  numOrderAmount: this.OrderAmount,\n                  txtDeliveryStatus: this.DelStatus,\n                  txtComment: this.Comment,\n                  idDevice: this.orderedDevice.id\n                }).then(function (response) {\n                  _this.getDeviceOrder();\n\n                  _this.emptyDeviceInput();\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateDeviceOrder() {\n        return _updateDeviceOrder.apply(this, arguments);\n      }\n\n      return updateDeviceOrder;\n    }(),\n    updateDeviceOrderGrid: function () {\n      var _updateDeviceOrderGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/order-device/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  datOrder: event.node.data.datOrder,\n                  datDelivery: event.node.data.datDelivery,\n                  numOrderAmount: event.node.data.numOrderAmount,\n                  txtDeliveryStatus: event.node.data.txtDeliveryStatus\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateDeviceOrderGrid(_x) {\n        return _updateDeviceOrderGrid.apply(this, arguments);\n      }\n\n      return updateDeviceOrderGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this2 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Order? => \" + params.node.data.idDevice.txtSerialNumber, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this2.deleteDeviceOrder(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteDeviceOrder: function () {\n      var _deleteDeviceOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {\n        var _this3 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/order-device/\".concat(params.node.data.id, \"/\");\n                _context3.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this3.getDeviceOrder();\n                  } else {\n                    _this3.$bvToast.toast(\"You can't delete this instance. Please check if all connections to this instance are deleted.\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteDeviceOrder(_x2) {\n        return _deleteDeviceOrder.apply(this, arguments);\n      }\n\n      return deleteDeviceOrder;\n    }(),\n    emptyDeviceInput: function emptyDeviceInput(event) {\n      this.DatOrder = this.DatDelivery = this.OrderAmount = this.DelStatus = this.Comment = null;\n      this.orderedDevice = [];\n      this.show = !this.show;\n      this.updateDeviceStatus = false;\n    },\n    getDevice: function getDevice() {\n      var _this4 = this;\n\n      if (!this.error) {\n        this.devices = [];\n        var endpoint = \"/api/device-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this4$devices;\n\n          (_this4$devices = _this4.devices).push.apply(_this4$devices, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDeviceOrder: function getDeviceOrder() {\n      var _this5 = this;\n\n      if (!this.error) {\n        this.orders = [];\n        var endpoint = \"/api/order-device-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this5$orders;\n\n          (_this5$orders = _this5.orders).push.apply(_this5$orders, _toConsumableArray(data.results));\n\n          _this5.rowData = _this5.orders;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this6 = this;\n\n      var result = [{\n        name: 'Edit Order Device',\n        action: function action() {\n          return _this6.editOrderDeviceMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Device Order',\n        action: function action() {\n          return _this6.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getDeviceOrder();\n    this.getDateToday();\n    this.getDevice();\n  }\n};",{"version":3,"sources":["order-device-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'List Order Devices'\" :folder=\"'Order'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\" >\n          <i class=\"i-Add-Cart\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Orders</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.orders.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\" >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n\n    <!-- ########################################### -->\n    <!-- ########### ORDER DEVICE SECTION ########## -->\n    <!-- ########################################### -->\n    <div class=\"row\" v-if=\"updateDeviceStatus\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">Update Device Order</h5>\n            </b-row>\n            <div class=\"mt-3\" v-show=\"show\">\n              <b-form @submit.prevent=\"updateDeviceOrder\">\n                <!-- ORDER INPUT -->\n                <b-row class=\"mt-4 ml-3 mr-3\">\n                  <b-col md=\"4\">\n                    <v-select v-model=\"orderedDevice\" :options=\"devices\" required placeholder=\"Choose Device\"\n                      :get-option-label=\"label => label.idModel.txtModelName + ' - ' + label.txtSerialNumber\"></v-select>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-datepicker v-model=\"DatOrder\" placeholder=\"Order Date\" required disabled></b-form-datepicker >\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-datepicker v-model=\"DatDelivery\" placeholder=\"Delivery Date\" ></b-form-datepicker >\n                  </b-col>\n                </b-row>\n                <b-row class=\"mt-3 ml-3 mr-3\">\n                  <b-col md=\"6\">\n                    <b-form-input v-model=\"OrderAmount\" type=\"number\" min=1 required></b-form-input>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-form-select v-model=\"DelStatus\" :options=\"optionStatus\" text-field=\"label\" value-field=\"code\"></b-form-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <b-form-textarea v-model=\"Comment\" placeholder=\"Enter memo ...\" rows=\"3\" max-rows=\"6\"></b-form-textarea>\n                  </b-col>\n                </b-row>\n                <!-- UPDATE DEVICE BUTTONS -->\n                <b-row class=\"ml-3 mr-3 mt-5\">\n                  <b-col md=\"6\">\n                    <b-button @click=\"emptyDeviceInput\" block variant=\"outline-info\">Cancel</b-button>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-button block variant=\"warning\" type=\"submit\">Update Device Order</b-button>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID DEVICES -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridOrders\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                :excelStyles=\"excelStyles\"\n                @cellValueChanged=\"updateDeviceOrderGrid\"\n                @row-selected=\"onRowSelected\"\n                :getContextMenuItems=\"getContextMenu\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\"\n                :animateRows=\"true\"\n                :isExternalFilterPresent=\"isExternalFilterPresent\"\n                :doesExternalFilterPass=\"doesExternalFilterPass\" >\n            </AgGridVue>\n            <!-- GRID BUTTONS -->\n            <b-row>\n              <b-col md=\"6\">\n                <div class=\"ml-3 fmr-3 mt-2 mb-2 text-left\">\n                  <b-button @click=\"changeExternalFilter('all')\" size=\"sm\" variant=\"outline-info\">Show All</b-button>\n                  <b-button @click=\"changeExternalFilter('delivered')\" class=\"ml-3\" size=\"sm\" variant=\"outline-info\">Show Delivered</b-button>\n                  <b-button @click=\"changeExternalFilter('not delivered')\" class=\"ml-3\" size=\"sm\" variant=\"outline-info\">Show Not Delivered</b-button>\n                </div>\n              </b-col>\n              <b-col md=\"6\">\n                <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                    Page Size:\n                    <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                        <option value=\"10\" selected=\"\">10</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                        <option value=\"200\">200</option>\n                    </select>\n                    <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n                </div>\n              </b-col>\n            </b-row>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- AG-GRID STATE -->\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Device Orders\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n\n      // VUE VARIABLES\n      orders: [],\n      devices: [],\n      orderedDevice: [],\n      DatOrder: null,\n      DatDelivery: null,\n      OrderAmount: null,\n      DelStatus: null,\n      Comment: null,\n      show: false,\n      date: null,\n      next: null,\n      error: false,\n      updateDeviceId: null,\n      updateDeviceStatus: false,\n      optionStatus: [\n        { code: null, label: 'Choose Delivery Status' },\n        { code: 'Delivered', label: 'Delivered' },\n        { code: 'Not Delivered', label: 'Not Delivered' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Order Number\", field: \"idOrder.txtOrderNumber\", filter: 'agTextColumnFilter', editable: false,},\n      {headerName: \"Serial Number\", field: \"idDevice.txtSerialNumber\", filter: 'agTextColumnFilter', },\n      {headerName: \"IMEI\", field: \"idDevice.txtIMEI\", filter: 'agTextColumnFilter', },\n      {headerName: \"Device\", field: \"idDevice.idModel.txtModelName\", filter: 'agTextColumnFilter', editable: false,},\n      {headerName: \"Order Amount\", field: \"numOrderAmount\", filter: 'agTextColumnFilter',},\n      {headerName: \"Order Date\", field: \"datOrder\", filter: 'agTextColumnFilter',},\n      {headerName: \"Delivery Date\", field: \"datDelivery\", filter: 'agTextColumnFilter',} ,\n      {headerName: \"Delivery Status\", field: \"txtDeliveryStatus\", filter: 'agTextColumnFilter', editable: false,},\n      {headerName: \"Memo\", field: \"txtComment\", filter: 'agTextColumnFilter', },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('orderDevice_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('orderDevice_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('orderDevice_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('orderDevice_columnStats', null);\n    },\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected(event) {\n      this.show1 = this.show1 ? false : true\n    },\n    changeExternalFilter(val) {\n      this.extFilter = val;\n      this.gridApi.onFilterChanged();\n    },\n    isExternalFilterPresent() {\n      return this.extFilter !== null;\n    },\n    doesExternalFilterPass(node) {\n      switch (this.extFilter) {\n        case 'all':\n          return true;\n        case 'delivered':\n          return node.data.txtDeliveryStatus === 'Delivered';\n        case 'not delivered':\n          return node.data.txtDeliveryStatus === 'Not Delivered';\n        default:\n          return true;\n      }\n    },\n    editOrderDeviceMenu(params) {\n      this.emptyDeviceInput();\n      let sel = params.node.data;\n      this.orderedDevice = sel.idDevice;\n      this.DatOrder = sel.datOrder;\n      this.DatDelivery = sel.datDelivery;\n      this.OrderAmount = sel.numOrderAmount;\n      this.DelStatus = sel.txtDeliveryStatus;\n      this.Comment = sel.txtComment;\n      this.updateDeviceStatus = true;\n      this.updateDeviceId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateDeviceOrder() {\n      let endpoint = `/api/order-device/${this.updateDeviceId}/`;\n      await apiService(endpoint, \"PATCH\", {\n        datOrder: this.DatOrder,\n        datDelivery: this.DatDelivery,\n        numOrderAmount: this.OrderAmount,\n        txtDeliveryStatus: this.DelStatus,\n        txtComment: this.Comment, \n        idDevice: this.orderedDevice.id })\n          .then(response => {\n            this.getDeviceOrder();\n            this.emptyDeviceInput();\n          })\n    },\n    async updateDeviceOrderGrid(event) {     \n      let endpoint = `/api/order-device/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", {\n          datOrder: event.node.data.datOrder,\n          datDelivery: event.node.data.datDelivery,\n          numOrderAmount: event.node.data.numOrderAmount,\n          txtDeliveryStatus: event.node.data.txtDeliveryStatus,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) { console.log(err) }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Order? => \" + params.node.data.idDevice.txtSerialNumber, {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => { if (value) { this.deleteDeviceOrder(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteDeviceOrder(params) {\n      let endpoint = `/api/order-device/${params.node.data.id}/`;\n      await apiService(endpoint, \"DELETE\")\n        .then(response => {\n          if (response != 'ERROR') {\n            this.getDeviceOrder();\n          } else {\n            this.$bvToast.toast(`You can't delete this instance. Please check if all connections to this instance are deleted.`, {\n              title: 'DELETE WARNING', variant: 'danger', autoHideDelay: 6000, appendToast: false\n            })\n          }\n        })\n    },\n    emptyDeviceInput(event) {\n      this.DatOrder = this.DatDelivery = this.OrderAmount = this.DelStatus = this.Comment = null;\n      this.orderedDevice = [];\n      this.show = !this.show;\n      this.updateDeviceStatus = false;\n    },\n    getDevice() {\n      if (!this.error) {\n        this.devices = [];\n        let endpoint = `/api/device-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.devices.push(...data.results);\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDeviceOrder() {\n      if (!this.error) {\n        this.orders = [];\n        let endpoint = `/api/order-device-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.orders.push(...data.results);\n            this.rowData = this.orders\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Order Device',\n          action: () => this.editOrderDeviceMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Device Order',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getDeviceOrder();\n    this.getDateToday();\n    this.getDevice();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"],"sourceRoot":"src/views/app/order"}]}