{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\store\\modules\\authData.js","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\store\\modules\\authData.js","mtime":1600449264146},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { apiService } from \"@/common/api.service.js\";\nexport default {\n  state: {\n    loggedInUser: localStorage.getItem(\"userInfo\") != null ? JSON.parse(localStorage.getItem(\"userInfo\")) : null,\n    loading: false,\n    error: null\n  },\n  getters: {\n    loggedInUser: function loggedInUser(state) {\n      return state.loggedInUser;\n    },\n    loading: function loading(state) {\n      return state.loading;\n    },\n    error: function error(state) {\n      return state.error;\n    }\n  },\n  mutations: {\n    setUser: function setUser(state, data) {\n      state.loggedInUser = data;\n      state.loading = false;\n      state.error = null;\n    },\n    setLogout: function setLogout(state) {\n      state.loggedInUser = null;\n      state.loading = false;\n      state.error = null; // this.$router.go(\"/\");\n    },\n    setLoading: function setLoading(state, data) {\n      state.loading = data;\n      state.error = null;\n    },\n    setError: function setError(state, data) {\n      state.error = data;\n      state.loggedInUser = null;\n      state.loading = false;\n    },\n    clearError: function clearError(state) {\n      state.error = null;\n    }\n  },\n  actions: {\n    loginDjango: function loginDjango(_ref, data) {\n      var commit = _ref.commit;\n      commit(\"clearError\");\n      commit(\"setLoading\", true);\n      var username = data.username;\n      var password = data.password;\n      var endpoint = \"/api/rest-auth/login/\";\n      apiService(endpoint, \"POST\", {\n        username: username,\n        password: password\n      }).then(function (response) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(username));\n        commit(\"setUser\", {\n          uid: username\n        });\n        console.log(\"response\");\n      }).catch(function (error) {\n        localStorage.removeItem(\"userInfo\");\n        commit(\"setError\", error);\n      });\n    },\n    login: function login(_ref2, data) {\n      var commit = _ref2.commit;\n      commit(\"clearError\");\n      commit(\"setLoading\", true);\n      firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(function (user) {\n        var newUser = {\n          uid: user.user.uid\n        };\n        localStorage.setItem(\"userInfo\", JSON.stringify(newUser));\n        commit(\"setUser\", {\n          uid: user.user.uid\n        });\n        console.log(\"user\");\n      }).catch(function (error) {\n        // Handle Errors here.\n        // var errorCode = error.code;\n        // var errorMessage = error.message;\n        // console.log(error);\n        localStorage.removeItem(\"userInfo\");\n        commit(\"setError\", error); // ...\n      });\n    },\n    signUserUp: function signUserUp(_ref3, data) {\n      var commit = _ref3.commit;\n      commit(\"setLoading\", true);\n      commit(\"clearError\");\n      firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(function (user) {\n        commit(\"setLoading\", false);\n        var newUser = {\n          uid: user.user.uid\n        };\n        console.log(newUser);\n        localStorage.setItem(\"userInfo\", JSON.stringify(newUser));\n        commit(\"setUser\", newUser);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setError\", error);\n        localStorage.removeItem(\"userInfo\");\n        console.log(error);\n      });\n    },\n    signOut: function signOut(_ref4) {\n      var commit = _ref4.commit;\n      firebase.auth().signOut().then(function () {\n        localStorage.removeItem(\"userInfo\");\n        commit(\"setLogout\");\n      }, function (_error) {});\n    }\n  }\n};",null]}