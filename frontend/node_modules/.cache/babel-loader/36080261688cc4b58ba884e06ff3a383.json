{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection-list.vue","mtime":1603878576233},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Inspection\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID INSPECTION VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      modules: AllModules,\n      domLayout: null,\n      paginationPageSize: 0,\n      // AG-GRID SAMPLE VARIABLES\n      gridOptions1: null,\n      gridApi1: null,\n      columnApi1: null,\n      columnDefs1: null,\n      rowData1: null,\n      defaultColDef1: null,\n      paginationPageSize1: 0,\n      // AG-GRID ATTRIBUTES VARIABLES\n      gridOptions2: null,\n      gridApi2: null,\n      columnApi2: null,\n      columnDefs2: null,\n      rowData2: null,\n      defaultColDef2: null,\n      paginationPageSize2: 0,\n      // VUE SAMPLE VARIABLES\n      Inspection: [],\n      OrderItem: [],\n      Comment: null,\n      SampleStatus: null,\n      updateSampleStatus: false,\n      updateSampleId: null,\n      optionStatus: [{\n        value: null,\n        text: 'Choose Sample Status'\n      }, {\n        value: 'Approved',\n        text: 'Approved'\n      }, {\n        value: 'Not Approved',\n        text: 'Not Approved'\n      }, {\n        value: 'Conditionally',\n        text: 'Conditionally'\n      }, {\n        value: 'Canceled',\n        text: 'Canceled'\n      }],\n      // VUE ATTRIBUTE VARIABLES\n      updateAttributeStatus: false,\n      updateAttributeId: null,\n      IType: null,\n      KeyAtt: null,\n      NameAtt: null,\n      ValueAtt: null,\n      ValueType: null,\n      Parameter: null,\n      ParameterTags: [],\n      ValueMin: null,\n      ValueMax: null,\n      ValueTol: null,\n      // VUE VARIABLES\n      inspections: [],\n      samples: [],\n      attributes: [],\n      date: null,\n      error: false,\n      Superuser: false,\n      selectedSample: false,\n      selectedInspection: false,\n      optionsInspectionStatus: [{\n        value: 'Work In Progress',\n        text: 'Work In Progress'\n      }, {\n        value: 'On Hold',\n        text: 'On Hold'\n      }, {\n        value: 'Complete',\n        text: 'Complete'\n      }, {\n        value: 'Declined',\n        text: 'Declined'\n      }],\n      optionsTypes: [{\n        value: 'Integer',\n        text: 'Counter'\n      }, {\n        value: 'Float',\n        text: 'Measure'\n      }, {\n        value: 'String',\n        text: 'Text'\n      }, {\n        value: 'Boolean',\n        text: 'True/False'\n      }, {\n        value: 'Select',\n        text: 'Select'\n      }],\n      optionsUnits: [{\n        value: 'µm',\n        text: 'µm'\n      }, {\n        value: 'mm',\n        text: 'mm'\n      }, {\n        value: 'cm',\n        text: 'cm'\n      }, {\n        value: 'mg',\n        text: 'mg'\n      }, {\n        value: 'g',\n        text: 'g'\n      }, {\n        value: 'ml',\n        text: 'ml'\n      }, {\n        value: 'inch',\n        text: 'inch'\n      }, {\n        value: 'oz',\n        text: 'oz'\n      }],\n      optionsBoolean: [{\n        value: 'true',\n        text: 'True'\n      }, {\n        value: 'false',\n        text: 'False'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.gridOptions1 = {};\n    this.gridOptions2 = {};\n    this.columnDefs = [{\n      headerName: \"Inspection Number\",\n      field: \"txtInspectionNumber\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true\n    }, {\n      headerName: \"Inspection Status\",\n      field: \"txtInspectionStatus\",\n      filter: 'agTextColumnFilter',\n      cellEditor: 'agRichSelectCellEditor',\n      cellEditorParams: {\n        cellHeight: 50,\n        values: ['Work In Progress', 'On Hold', 'Complete', 'Declined']\n      }\n    }, {\n      headerName: \"Inspection Type\",\n      field: \"idInspectionType.txtInspectionInitial\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Inspector\",\n      field: \"txtInspector\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Inspection Date\",\n      field: \"datInspection\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivered On\",\n      field: \"datDeliveredOn\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Requested On\",\n      field: \"datRequestedOn\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Link\",\n      field: \"txtLink\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.columnDefs1 = [{\n      headerName: \"Sample ID\",\n      field: \"id\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true\n    }, {\n      headerName: \"Inspection Number\",\n      field: \"idInspection.txtInspectionNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Order Number\",\n      field: \"idOrderItem.idOrder.txtOrderNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Item Description\",\n      field: \"idOrderItem.idItem.txtDescription\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Article Number\",\n      field: \"idOrderItem.idItem.txtArticleNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Sample Status\",\n      field: \"txtSampleStatus\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.columnDefs2 = [{\n      headerName: \"Key Attribute\",\n      field: \"txtKeyAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Name Attribute\",\n      field: \"txtNameAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Attribute\",\n      field: \"txtValueAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Type\",\n      field: \"txtValueType\",\n      filter: 'agTextColumnFilter',\n      editable: false,\n      valueGetter: ValueTypeGetter\n    }, {\n      headerName: \"Parameter\",\n      field: \"txtParameter\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Min\",\n      field: \"txtValueMin\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Max\",\n      field: \"txtValueMax\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Tolerance\",\n      field: \"txtValueTolerance\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.defaultColDef1 = {\n      flex: 1,\n      editable: false,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.defaultColDef2 = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.paginationPageSize1 = 10;\n    this.paginationPageSize2 = 10;\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('inspectionList_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('inspectionList_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('inspectionList_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('inspectionList_columnStats', null);\n    },\n    excelExportInspection: function excelExportInspection() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    changeExternalFilter: function changeExternalFilter(val) {\n      this.extFilter = val;\n      this.gridApi.onFilterChanged();\n    },\n    isExternalFilterPresent: function isExternalFilterPresent() {\n      return this.extFilter !== null;\n    },\n    doesExternalFilterPass: function doesExternalFilterPass(node) {\n      switch (this.extFilter) {\n        case 'all':\n          return true;\n\n        case 'work in progress':\n          return node.data.txtInspectionStatus === 'Work In Progress';\n\n        case 'on hold':\n          return node.data.txtInspectionStatus === 'On Hold';\n\n        case 'complete':\n          return node.data.txtInspectionStatus === 'Complete';\n\n        case 'declined':\n          return node.data.txtInspectionStatus === 'Declined';\n\n        default:\n          return true;\n      }\n    },\n    onGridReady: function onGridReady(params) {\n      var _this = this;\n\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n      setTimeout(function () {\n        _this.getSelectedInspection(params);\n      }, 500);\n    },\n    onGridReady1: function onGridReady1(params) {\n      this.gridApi1 = params.api;\n      this.gridColumnApi1 = params.columnApi;\n    },\n    onGridReady2: function onGridReady2(params) {\n      this.gridApi2 = params.api;\n      this.gridColumnApi2 = params.columnApi;\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridOptions.paginationSetPageSize(Number(value));\n    },\n    onPageSizeChanged1: function onPageSizeChanged1(newPageSize) {\n      var value = document.getElementById('page-size-1').value;\n      this.gridOptions1.paginationSetPageSize(Number(value));\n    },\n    onPageSizeChanged2: function onPageSizeChanged2(newPageSize) {\n      var value = document.getElementById('page-size-2').value;\n      this.gridOptions2.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.rowData1 = null;\n      this.rowData2 = null;\n      this.selectedInspection = this.selectedInspection ? false : true;\n      this.selectedSample = false;\n\n      if (event.node.selected == true) {\n        this.getSamples(event.data.id);\n      } else {\n        this.samples = [];\n        this.attributes = [];\n      }\n    },\n    onRowSelected1: function onRowSelected1(event) {\n      this.selectedSample = this.selectedSample ? false : true;\n\n      if (event.node.selected == true) {\n        this.getAttributes(event.data.id);\n      }\n    },\n    getParameter: function getParameter(params) {\n      if (params.node.data.txtValueType == 'Select') {\n        this.ParameterTags = params.node.data.txtParameter.split(',');\n      } else {\n        this.Parameter = params.node.data.txtParameter;\n      }\n    },\n    setParameter: function setParameter() {\n      var val;\n\n      if (this.ValueType == 'Select') {\n        return val = this.ParameterTags.toString();\n      } else if (this.ValueType == 'Integer' || this.ValueType == 'String' || this.ValueType == 'Boolean') {\n        return val = null;\n      } else if (this.ValueType == 'Float') {\n        return val = this.Parameter.toString();\n      }\n    },\n    editInspection: function editInspection(params) {\n      localStorage.setItem('InspectionID', params.node.data.id);\n      this.$router.push('inspection/');\n    },\n    editSampleMenu: function editSampleMenu(params) {\n      this.emptySampleInput();\n      var sel = params.node.data;\n      this.Inspection = sel.idInspection.id;\n      this.OrderItem = sel.idOrderItem.id;\n      this.SampleStatus = sel.txtSampleStatus;\n      this.Comment = sel.txtComment;\n      this.updateSampleStatus = true;\n      this.updateSampleId = sel.id;\n      document.documentElement.scrollTop = 0;\n    },\n    editAttributeMenu: function editAttributeMenu(params) {\n      this.emptyAttributeInput();\n      var sel = params.node.data;\n      this.getParameter(params);\n      this.KeyAtt = sel.txtKeyAttribute;\n      this.NameAtt = sel.txtNameAttribute;\n      this.ValueType = sel.txtValueType;\n      this.ValueAtt = sel.txtValueAttribute;\n      this.ValueMin = sel.txtValueMin;\n      this.ValueMax = sel.txtValueMax;\n      this.ValueTol = sel.txtValueTolerance;\n      this.updateAttributeId = sel.id;\n      this.updateAttributeStatus = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateSample: function () {\n      var _updateSample = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/sample/\".concat(this.updateSampleId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  idInspection: this.Inspection,\n                  idOrderItem: this.OrderItem,\n                  txtSampleStatus: this.SampleStatus,\n                  txtComment: this.Comment\n                }).then(function (response) {\n                  _this2.rowData1 = null;\n                  _this2.rowData2 = null;\n\n                  _this2.getInspections();\n\n                  _this2.emptySampleInput();\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateSample() {\n        return _updateSample.apply(this, arguments);\n      }\n\n      return updateSample;\n    }(),\n    updateAttribute: function () {\n      var _updateAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/sample-attribute/\".concat(this.updateAttributeId, \"/\");\n                _context2.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  txtKeyAttribute: this.KeyAtt,\n                  txtNameAttribute: this.NameAtt,\n                  txtValueType: this.ValueType,\n                  txtParameter: this.setParameter(),\n                  txtValueAttribute: this.ValueAtt,\n                  txtValueMin: this.ValueMin,\n                  txtValueMax: this.ValueMax,\n                  txtValueTolerance: this.ValueTol\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    _this3.rowData1 = null;\n                    _this3.rowData2 = null;\n\n                    _this3.getInspections();\n\n                    _this3.emptyAttributeInput();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateAttribute() {\n        return _updateAttribute.apply(this, arguments);\n      }\n\n      return updateAttribute;\n    }(),\n    updateInspectionGrid: function () {\n      var _updateInspectionGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/inspection/\".concat(event.node.data.id, \"/\");\n                _context3.prev = 1;\n                _context3.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtInspectionNumber: event.node.data.txtInspectionNumber,\n                  txtInspectionStatus: event.node.data.txtInspectionStatus,\n                  txtInspectionType: event.node.data.txtInspectionType,\n                  txtInspector: event.node.data.txtInspector,\n                  datInspection: event.node.data.datInspection,\n                  datDeliveredOn: event.node.data.datDeliveredOn,\n                  datRequestedOn: event.node.data.datRequestedOn,\n                  txtRequestedBy: event.node.data.txtRequestedBy,\n                  txtLink: event.node.data.txtLink,\n                  txtComment: event.node.data.txtComment\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 6]]);\n      }));\n\n      function updateInspectionGrid(_x) {\n        return _updateInspectionGrid.apply(this, arguments);\n      }\n\n      return updateInspectionGrid;\n    }(),\n    updateAttributesGrid: function () {\n      var _updateAttributesGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                endpoint = \"/api/sample-attribute/\".concat(event.node.data.id, \"/\");\n                _context4.prev = 1;\n                _context4.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtKeyAttribute: event.node.data.txtKeyAttribute,\n                  txtNameAttribute: event.node.data.txtNameAttribute,\n                  txtValueAttribute: event.node.data.txtValueAttribute,\n                  txtValueType: event.node.data.txtValueType,\n                  txtParameter: event.node.data.txtParameter,\n                  txtValueMin: event.node.data.txtValueMin,\n                  txtValueMax: event.node.data.txtValueMax,\n                  txtValueTolerance: event.node.data.txtValueTolerance\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context4.next = 9;\n                break;\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 6]]);\n      }));\n\n      function updateAttributesGrid(_x2) {\n        return _updateAttributesGrid.apply(this, arguments);\n      }\n\n      return updateAttributesGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Inspection? => \" + params.node.data.txtInspectionNumber, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.deleteInspection(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    openModal1: function openModal1(params) {\n      var _this5 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Sample?\", {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this5.deleteSample(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    openModal2: function openModal2(params) {\n      var _this6 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Do you really want to delete the Attribute? => \" + params.node.data.txtNameAttribute, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this6.deleteAttribute(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteInspection: function () {\n      var _deleteInspection = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(params) {\n        var _this7 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                endpoint = \"/api/inspection/\".concat(params.node.data.id, \"/\");\n                _context5.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this7.getInspections();\n\n                    _this7.rowData1 = null;\n                  } else {\n                    _this7.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function deleteInspection(_x3) {\n        return _deleteInspection.apply(this, arguments);\n      }\n\n      return deleteInspection;\n    }(),\n    deleteSample: function () {\n      var _deleteSample = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(params) {\n        var _this8 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                endpoint = \"/api/sample/\".concat(params.node.data.id, \"/\");\n                _context6.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this8.getSamples(params.node.data.idInspection.id);\n\n                    _this8.rowData2 = null;\n                  } else {\n                    _this8.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deleteSample(_x4) {\n        return _deleteSample.apply(this, arguments);\n      }\n\n      return deleteSample;\n    }(),\n    deleteAttribute: function () {\n      var _deleteAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(params) {\n        var _this9 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                endpoint = \"/api/sample-attribute/\".concat(params.node.data.id, \"/\");\n                _context7.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this9.getAttributes(params.node.data.idSample);\n                  } else {\n                    _this9.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function deleteAttribute(_x5) {\n        return _deleteAttribute.apply(this, arguments);\n      }\n\n      return deleteAttribute;\n    }(),\n    emptySampleInput: function emptySampleInput(event) {\n      this.SampleStatus = this.Comment = null;\n      this.Inspection = this.OrderItem = [];\n      this.updateSampleStatus = false;\n    },\n    emptyAttributeInput: function emptyAttributeInput(event) {\n      this.IType = this.ParameterTags = [];\n      this.KeyAtt = this.NameAtt = this.ValueType = this.ValueDef = this.Parameter = this.ValueMin = this.ValueMax = this.ValueTol = null;\n      this.updateAttributeStatus = false;\n    },\n    emptyLastValueType: function emptyLastValueType(event) {\n      this.ValueAtt = this.Parameter = this.ValueMin = this.ValueMax = this.ValueTol = null;\n      this.ParameterTags = [];\n    },\n    getInspections: function getInspections() {\n      var _this10 = this;\n\n      this.inspections = [];\n      var endpointInspection = \"/api/inspection-list/\";\n      apiService(endpointInspection).then(function (data) {\n        var _this10$inspections;\n\n        (_this10$inspections = _this10.inspections).push.apply(_this10$inspections, _toConsumableArray(data.results));\n\n        _this10.rowData = _this10.inspections;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getSamples: function getSamples(id) {\n      var _this11 = this;\n\n      this.samples = [];\n      var endpointSample = \"/api/sample-list/\";\n      apiService(endpointSample).then(function (data) {\n        var _this11$samples;\n\n        (_this11$samples = _this11.samples).push.apply(_this11$samples, _toConsumableArray(data.results));\n\n        var el = _this11.samples.filter(function (e) {\n          return e.idInspection.id == id;\n        });\n\n        _this11.rowData1 = el;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getOrderItems: function getOrderItems() {\n      var _this12 = this;\n\n      this.orderItems = [];\n      var endpoint = \"/api/order-item-list/\";\n      apiService(endpoint).then(function (data) {\n        var _this12$orderItems;\n\n        (_this12$orderItems = _this12.orderItems).push.apply(_this12$orderItems, _toConsumableArray(data.results));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getAttributes: function getAttributes(id) {\n      var _this13 = this;\n\n      this.attributes = [];\n      var endpointAttributes = \"/api/sample-attribute/\";\n      apiService(endpointAttributes).then(function (data) {\n        var _this13$attributes;\n\n        (_this13$attributes = _this13.attributes).push.apply(_this13$attributes, _toConsumableArray(data.results));\n\n        var el = _this13.attributes.filter(function (e) {\n          return e.idSample === id;\n        });\n\n        _this13.rowData2 = el;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getSelectedInspection: function getSelectedInspection(event) {\n      if (window.localStorage.getItem('selInspect') != null) {\n        var el = parseInt(localStorage.getItem('selInspect'));\n        event.api.forEachNode(function (rowNode) {\n          rowNode.setSelected(rowNode.data.id === el);\n        });\n      }\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this14 = this;\n\n      var result = [{\n        name: 'Edit Inspection',\n        action: function action() {\n          return _this14.editInspection(params);\n        }\n      }, 'separator', {\n        name: 'Delete Inspection',\n        action: function action() {\n          return _this14.openModal(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    },\n    getContextMenu1: function getContextMenu1(params) {\n      var _this15 = this;\n\n      var result = [{\n        name: 'Edit Sample',\n        action: function action() {\n          return _this15.editSampleMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Sample',\n        action: function action() {\n          return _this15.openModal1(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    },\n    getContextMenu2: function getContextMenu2(params) {\n      var _this16 = this;\n\n      var result = [{\n        name: 'Edit Attribute',\n        action: function action() {\n          return _this16.editAttributeMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Attribute',\n        action: function action() {\n          return _this16.openModal2(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    },\n    getSuperuser: function getSuperuser() {\n      var el = localStorage.getItem(\"superuser\");\n\n      if (el == 'true') {\n        this.Superuser = true;\n      } else {\n        this.Superuser = false;\n      }\n    }\n  },\n  created: function created() {\n    this.getInspections();\n    this.getDateToday();\n    this.getSuperuser();\n    this.getOrderItems();\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    window.localStorage.removeItem('selInspect');\n    next();\n  }\n};\n\nwindow.ValueTypeGetter = function (params) {\n  if (params.data.txtValueType == 'String') {\n    return 'Text';\n  } else if (params.data.txtValueType == 'Integer') {\n    return 'Counter';\n  } else if (params.data.txtValueType == 'Float') {\n    return 'Measure';\n  } else if (params.data.txtValueType == 'Boolean') {\n    return 'True/False';\n  } else if (params.data.txtValueType == 'Select') {\n    return 'Select';\n  }\n};",null]}