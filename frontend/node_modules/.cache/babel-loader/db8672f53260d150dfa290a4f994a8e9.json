{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\template-attributes.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\template-attributes.vue","mtime":1602146596655},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport InputTag from 'vue-input-tag';\nexport default {\n  metaInfo: {\n    title: \"Inspection Attributes\"\n  },\n  components: {\n    AgGridVue: AgGridVue,\n    InputTag: InputTag\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      attributes: [],\n      show: false,\n      IType: null,\n      KeyAtt: null,\n      NameAtt: null,\n      ValueDef: null,\n      ValueType: null,\n      Parameter: null,\n      ParameterTags: [],\n      ValueMin: null,\n      ValueMax: null,\n      ValueTol: null,\n      date: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      itemTypes: [],\n      optionsTypes: [{\n        value: 'Integer',\n        text: 'Counter'\n      }, {\n        value: 'Float',\n        text: 'Measure'\n      }, {\n        value: 'String',\n        text: 'Text'\n      }, {\n        value: 'Boolean',\n        text: 'True/False'\n      }, {\n        value: 'Select',\n        text: 'Select'\n      }],\n      optionsUnits: [{\n        value: 'µm',\n        text: 'µm'\n      }, {\n        value: 'mm',\n        text: 'mm'\n      }, {\n        value: 'cm',\n        text: 'cm'\n      }, {\n        value: 'mg',\n        text: 'mg'\n      }, {\n        value: 'g',\n        text: 'g'\n      }, {\n        value: 'ml',\n        text: 'ml'\n      }, {\n        value: 'inch',\n        text: 'inch'\n      }, {\n        value: 'oz',\n        text: 'oz'\n      }],\n      optionsBoolean: [{\n        value: 'true',\n        text: 'True'\n      }, {\n        value: 'false',\n        text: 'False'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.columnDefs = [{\n      headerName: \"Item Type\",\n      field: \"idItemType.txtItemType\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Key Attribute\",\n      field: \"txtKeyAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Name Attribute\",\n      field: \"txtNameAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Default\",\n      field: \"txtValueDefault\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Value Type\",\n      field: \"txtValueType\",\n      filter: 'agTextColumnFilter',\n      editable: false,\n      valueGetter: ValueTypeGetter\n    }, {\n      headerName: \"Parameter\",\n      field: \"txtParameter\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Value Min\",\n      field: \"txtValueMin\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Max\",\n      field: \"txtValueMax\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Tolerance\",\n      field: \"txtValueTolerance\",\n      filter: 'agTextColumnFilter'\n    }];\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('inspectionAttributeTemp_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('inspectionAttributeTemp_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function disabled() {\n      if (this.ValueType == 'Boolean') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false;\n      } else if (this.ValueType == 'Integer') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false;\n      } else if (this.ValueType == 'Float') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false;\n      } else if (this.ValueType == 'String') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false;\n      } else if (this.ValueType == 'Select') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false;\n      } else {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : false;\n      }\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('inspectionAttributeTemp_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('inspectionAttributeTemp_columnStats', null);\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    onSubmit: function onSubmit() {\n      if (!this.updateStatus) {\n        this.addAtt();\n      } else {\n        this.updateAttribute();\n      }\n    },\n    autoSizeAll: function autoSizeAll(skipHeader) {\n      var allColumnIds = [];\n      this.gridColumnApi.getAllColumns().forEach(function (column) {\n        allColumnIds.push(column.colId);\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    },\n    getParameter: function getParameter(params) {\n      if (params.node.data.txtValueType == 'Select') {\n        this.ParameterTags = params.node.data.txtParameter.split(',');\n      } else {\n        this.Parameter = params.node.data.txtParameter;\n      }\n    },\n    setParameter: function setParameter() {\n      var val;\n\n      if (this.ValueType == 'Select') {\n        return val = this.ParameterTags.toString();\n      } else if (this.ValueType == 'Integer' || this.ValueType == 'String' || this.ValueType == 'Boolean') {\n        return val = null;\n      } else if (this.ValueType == 'Float') {\n        return val = this.Parameter.toString();\n      }\n    },\n    addAtt: function addAtt() {\n      var _this = this;\n\n      var endpoint = \"/api/inspection-template-attribute/\";\n      apiService(endpoint, \"POST\", {\n        txtParameter: this.setParameter(),\n        idItemType: this.IType.id,\n        txtKeyAttribute: this.KeyAtt,\n        txtNameAttribute: this.NameAtt,\n        txtValueType: this.ValueType,\n        txtValueMin: this.ValueMin,\n        txtValueMax: this.ValueMax,\n        txtValueTolerance: this.ValueTol,\n        txtValueDefault: this.ValueDef\n      }).then(function (response) {\n        if (response != 'ERROR') {\n          _this.getAtt();\n\n          _this.emptyInput();\n\n          _this.error = false;\n        } else {\n          _this.error = true;\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    editAttributeMenu: function editAttributeMenu(params) {\n      this.emptyInput();\n      var sel = params.node.data;\n      this.getParameter(params);\n      this.IType = sel.idItemType;\n      this.KeyAtt = sel.txtKeyAttribute;\n      this.NameAtt = sel.txtNameAttribute;\n      this.ValueType = sel.txtValueType;\n      this.ValueDef = sel.txtValueDefault;\n      this.ValueMin = sel.txtValueMin;\n      this.ValueMax = sel.txtValueMax;\n      this.ValueTol = sel.txtValueTolerance;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateAttribute: function () {\n      var _updateAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/inspection-template-attribute/\".concat(this.updateId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PUT\", {\n                  idItemType: this.IType.id,\n                  txtKeyAttribute: this.KeyAtt,\n                  txtNameAttribute: this.NameAtt,\n                  txtValueType: this.ValueType,\n                  txtParameter: this.setParameter(),\n                  txtValueDefault: this.ValueDef,\n                  txtValueMin: this.ValueMin,\n                  txtValueMax: this.ValueMax,\n                  txtValueTolerance: this.ValueTol\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    _this2.emptyInput();\n\n                    _this2.getAtt();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateAttribute() {\n        return _updateAttribute.apply(this, arguments);\n      }\n\n      return updateAttribute;\n    }(),\n    updateAttributeGrid: function () {\n      var _updateAttributeGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/inspection-template-attribute/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  idItemType: event.node.data.idItemType,\n                  txtKeyAttribute: event.node.data.txtKeyAttribute,\n                  txtNameAttribute: event.node.data.txtNameAttribute,\n                  txtValueDefault: event.node.data.txtValueDefault,\n                  txtValueType: event.node.data.txtValueType,\n                  txtParameter: event.node.data.txtParameter,\n                  txtValueMin: event.node.data.txtValueMin,\n                  txtValueMax: event.node.data.txtValueMax,\n                  txtValueTolerance: event.node.data.txtValueTolerance\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateAttributeGrid(_x) {\n        return _updateAttributeGrid.apply(this, arguments);\n      }\n\n      return updateAttributeGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this3 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Attribute? => \" + params.node.data.txtNameAttribute, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this3.deleteAttribute(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteAttribute: function () {\n      var _deleteAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {\n        var _this4 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/inspection-template-attribute/\".concat(params.node.data.id, \"/\");\n                _context3.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this4.getAtt();\n                  } else {\n                    _this4.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteAttribute(_x2) {\n        return _deleteAttribute.apply(this, arguments);\n      }\n\n      return deleteAttribute;\n    }(),\n    emptyInput: function emptyInput(event) {\n      this.IType = this.ParameterTags = [];\n      this.KeyAtt = this.NameAtt = this.ValueType = this.ValueDef = this.Parameter = this.ValueMin = this.ValueMax = this.ValueTol = null;\n\n      if (event != 'add') {\n        this.show = false;\n      } else {\n        this.show = !this.show;\n      }\n    },\n    emptyLastValueType: function emptyLastValueType(event) {\n      this.ValueDef = this.Parameter = this.ValueMin = this.ValueMax = this.ValueTol = null;\n      this.ParameterTags = [];\n    },\n    getAtt: function getAtt() {\n      var _this5 = this;\n\n      if (!this.error) {\n        this.attributes = [];\n        var endpoint = \"/api/inspection-template-attribute-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this5$attributes;\n\n          (_this5$attributes = _this5.attributes).push.apply(_this5$attributes, _toConsumableArray(data.results));\n\n          _this5.rowData = _this5.attributes;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getItemTypes: function getItemTypes() {\n      var _this6 = this;\n\n      if (!this.error) {\n        this.itemTypes = [];\n        var endpoint = \"/api/item-type/\";\n        apiService(endpoint).then(function (data) {\n          var _this6$itemTypes;\n\n          (_this6$itemTypes = _this6.itemTypes).push.apply(_this6$itemTypes, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this7 = this;\n\n      var result = [{\n        name: 'Edit Attribute',\n        action: function action() {\n          return _this7.editAttributeMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Attribute',\n        action: function action() {\n          return _this7.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getAtt();\n    this.getDateToday();\n    this.getItemTypes();\n  }\n};\n\nwindow.ValueTypeGetter = function (params) {\n  if (params.data.txtValueType == 'String') {\n    return 'Text';\n  } else if (params.data.txtValueType == 'Integer') {\n    return 'Counter';\n  } else if (params.data.txtValueType == 'Float') {\n    return 'Measure';\n  } else if (params.data.txtValueType == 'Boolean') {\n    return 'True/False';\n  } else if (params.data.txtValueType == 'Select') {\n    return 'Select';\n  }\n};",{"version":3,"sources":["template-attributes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA,SAAA,UAAA,QAAA,yBAAA;AACA,SAAA,SAAA,QAAA,wBAAA;AACA,SAAA,UAAA,QAAA,iCAAA;AACA,OAAA,QAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AACA,IAAA,QAAA,EAAA;AADA,GAJA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA;AACA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,SAAA,EAAA,IAJA;AAKA,MAAA,UAAA,EAAA,IALA;AAMA,MAAA,OAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA,IAPA;AAQA,MAAA,aAAA,EAAA,IARA;AASA,MAAA,mBAAA,EAAA,IATA;AAUA,MAAA,SAAA,EAAA,IAVA;AAWA,MAAA,OAAA,EAAA,UAXA;AAaA;AACA,MAAA,UAAA,EAAA,EAdA;AAeA,MAAA,IAAA,EAAA,KAfA;AAgBA,MAAA,KAAA,EAAA,IAhBA;AAiBA,MAAA,MAAA,EAAA,IAjBA;AAkBA,MAAA,OAAA,EAAA,IAlBA;AAmBA,MAAA,QAAA,EAAA,IAnBA;AAoBA,MAAA,SAAA,EAAA,IApBA;AAqBA,MAAA,SAAA,EAAA,IArBA;AAsBA,MAAA,aAAA,EAAA,EAtBA;AAuBA,MAAA,QAAA,EAAA,IAvBA;AAwBA,MAAA,QAAA,EAAA,IAxBA;AAyBA,MAAA,QAAA,EAAA,IAzBA;AA0BA,MAAA,IAAA,EAAA,IA1BA;AA2BA,MAAA,KAAA,EAAA,KA3BA;AA4BA,MAAA,YAAA,EAAA,KA5BA;AA6BA,MAAA,QAAA,EAAA,IA7BA;AA8BA,MAAA,SAAA,EAAA,EA9BA;AA+BA,MAAA,YAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OALA,CA/BA;AAsCA,MAAA,YAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,KAAA,EAAA,GAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAPA,EAQA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OARA,CAtCA;AAgDA,MAAA,cAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA;AAhDA,KAAA;AAqDA,GA7DA;AA8DA,EAAA,WA9DA,yBA8DA;AACA,SAAA,WAAA,GAAA,EAAA;AACA,SAAA,aAAA,GAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,SAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,cAAA,EAAA;AAAA,KAAA;AACA,SAAA,YAAA,GAAA,QAAA;AACA,SAAA,SAAA,GAAA,YAAA;AACA,SAAA,kBAAA,GAAA,EAAA;AACA,SAAA,UAAA,GAAA,CACA;AAAA,MAAA,UAAA,EAAA,WAAA;AAAA,MAAA,KAAA,EAAA,wBAAA;AAAA,MAAA,MAAA,EAAA,oBAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,UAAA,EAAA,eAAA;AAAA,MAAA,KAAA,EAAA,iBAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAFA,EAGA;AAAA,MAAA,UAAA,EAAA,gBAAA;AAAA,MAAA,KAAA,EAAA,kBAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAHA,EAIA;AAAA,MAAA,UAAA,EAAA,eAAA;AAAA,MAAA,KAAA,EAAA,iBAAA;AAAA,MAAA,MAAA,EAAA,oBAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAJA,EAKA;AAAA,MAAA,UAAA,EAAA,YAAA;AAAA,MAAA,KAAA,EAAA,cAAA;AAAA,MAAA,MAAA,EAAA,oBAAA;AAAA,MAAA,QAAA,EAAA,KAAA;AAAA,MAAA,WAAA,EAAA;AAAA,KALA,EAMA;AAAA,MAAA,UAAA,EAAA,WAAA;AAAA,MAAA,KAAA,EAAA,cAAA;AAAA,MAAA,MAAA,EAAA,oBAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KANA,EAOA;AAAA,MAAA,UAAA,EAAA,WAAA;AAAA,MAAA,KAAA,EAAA,aAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAPA,EAQA;AAAA,MAAA,UAAA,EAAA,WAAA;AAAA,MAAA,KAAA,EAAA,aAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KARA,EASA;AAAA,MAAA,UAAA,EAAA,iBAAA;AAAA,MAAA,KAAA,EAAA,mBAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KATA,CAAA;AAWA,GA/EA;AAgFA,EAAA,OAhFA,qBAgFA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,KAAA,IAAA,EAAA;AACA,WAAA,WAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAAA;AACA,KAFA,MAEA;AACA,WAAA,OAAA,GAAA,KAAA,WAAA,CAAA,GAAA;AACA,WAAA,aAAA,GAAA,KAAA,WAAA,CAAA,SAAA;AACA;AACA,GAvFA;AAwFA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,UAAA,KAAA,SAAA,IAAA,SAAA,EAAA;AACA,eAAA,CAAA,KAAA,KAAA,GAAA,IAAA,GAAA,CAAA,KAAA,MAAA,GAAA,IAAA,GAAA,CAAA,KAAA,OAAA,GAAA,IAAA,GAAA,CAAA,KAAA,SAAA,GAAA,IAAA,GAAA,CAAA,KAAA,QAAA,GAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA,IAAA,KAAA,SAAA,IAAA,SAAA,EAAA;AACA,eAAA,CAAA,KAAA,KAAA,GAAA,IAAA,GAAA,CAAA,KAAA,MAAA,GAAA,IAAA,GAAA,CAAA,KAAA,OAAA,GAAA,IAAA,GAAA,CAAA,KAAA,SAAA,GAAA,IAAA,GAAA,CAAA,KAAA,QAAA,GAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA,IAAA,KAAA,SAAA,IAAA,OAAA,EAAA;AACA,eAAA,CAAA,KAAA,KAAA,GAAA,IAAA,GAAA,CAAA,KAAA,MAAA,GAAA,IAAA,GAAA,CAAA,KAAA,OAAA,GAAA,IAAA,GAAA,CAAA,KAAA,SAAA,GAAA,IAAA,GAAA,CAAA,KAAA,QAAA,GAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA,IAAA,KAAA,SAAA,IAAA,QAAA,EAAA;AACA,eAAA,CAAA,KAAA,KAAA,GAAA,IAAA,GAAA,CAAA,KAAA,MAAA,GAAA,IAAA,GAAA,CAAA,KAAA,OAAA,GAAA,IAAA,GAAA,CAAA,KAAA,SAAA,GAAA,IAAA,GAAA,CAAA,KAAA,QAAA,GAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA,IAAA,KAAA,SAAA,IAAA,QAAA,EAAA;AACA,eAAA,CAAA,KAAA,KAAA,GAAA,IAAA,GAAA,CAAA,KAAA,MAAA,GAAA,IAAA,GAAA,CAAA,KAAA,OAAA,GAAA,IAAA,GAAA,CAAA,KAAA,SAAA,GAAA,IAAA,GAAA,CAAA,KAAA,QAAA,GAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,eAAA,CAAA,KAAA,KAAA,GAAA,IAAA,GAAA,CAAA,KAAA,MAAA,GAAA,IAAA,GAAA,CAAA,KAAA,OAAA,GAAA,IAAA,GAAA,CAAA,KAAA,SAAA,GAAA,IAAA,GAAA,KAAA;AACA;AACA;AAfA,GAxFA;AAyGA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,qCAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,WAAA,CAAA,SAAA,CAAA,cAAA,EAAA,CAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,qCAAA,EAAA,IAAA;AACA,KANA;AAOA,IAAA,iBAPA,6BAOA,WAPA,EAOA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,cAAA,CAAA,WAAA,EAAA,KAAA;AACA,WAAA,OAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,KAVA;AAWA,IAAA,aAXA,yBAWA,KAXA,EAWA;AACA,WAAA,IAAA,GAAA,KAAA,IAAA,GAAA,KAAA,GAAA,IAAA;AACA,KAbA;AAcA,IAAA,QAdA,sBAcA;AACA,UAAA,CAAA,KAAA,YAAA,EAAA;AAAA,aAAA,MAAA;AACA,OADA,MACA;AAAA,aAAA,eAAA;AAAA;AACA,KAjBA;AAkBA,IAAA,WAlBA,uBAkBA,UAlBA,EAkBA;AACA,UAAA,YAAA,GAAA,EAAA;AACA,WAAA,aAAA,CAAA,aAAA,GAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,YAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA;AACA,OAFA;AAGA,WAAA,aAAA,CAAA,eAAA,CAAA,YAAA,EAAA,UAAA;AACA,KAxBA;AAyBA,IAAA,YAzBA,wBAyBA,MAzBA,EAyBA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA,IAAA,QAAA,EAAA;AACA,aAAA,aAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA;AACA;AACA,KA/BA;AAgCA,IAAA,YAhCA,0BAgCA;AACA,UAAA,GAAA;;AACA,UAAA,KAAA,SAAA,IAAA,QAAA,EAAA;AACA,eAAA,GAAA,GAAA,KAAA,aAAA,CAAA,QAAA,EAAA;AACA,OAFA,MAEA,IAAA,KAAA,SAAA,IAAA,SAAA,IAAA,KAAA,SAAA,IAAA,QAAA,IAAA,KAAA,SAAA,IAAA,SAAA,EAAA;AACA,eAAA,GAAA,GAAA,IAAA;AACA,OAFA,MAEA,IAAA,KAAA,SAAA,IAAA,OAAA,EAAA;AACA,eAAA,GAAA,GAAA,KAAA,SAAA,CAAA,QAAA,EAAA;AACA;AACA,KAzCA;AA0CA,IAAA,MA1CA,oBA0CA;AAAA;;AACA,UAAA,QAAA,wCAAA;AACA,MAAA,UAAA,CAAA,QAAA,EAAA,MAAA,EAAA;AACA,QAAA,YAAA,EAAA,KAAA,YAAA,EADA;AAEA,QAAA,UAAA,EAAA,KAAA,KAAA,CAAA,EAFA;AAGA,QAAA,eAAA,EAAA,KAAA,MAHA;AAIA,QAAA,gBAAA,EAAA,KAAA,OAJA;AAKA,QAAA,YAAA,EAAA,KAAA,SALA;AAMA,QAAA,WAAA,EAAA,KAAA,QANA;AAOA,QAAA,WAAA,EAAA,KAAA,QAPA;AAQA,QAAA,iBAAA,EAAA,KAAA,QARA;AASA,QAAA,eAAA,EAAA,KAAA;AATA,OAAA,CAAA,CAWA,IAXA,CAWA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,IAAA,OAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA;;AACA,UAAA,KAAA,CAAA,UAAA;;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,SAJA,MAIA;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,OAnBA,EAoBA,KApBA,CAoBA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,OApBA;AAqBA,KAjEA;AAkEA,IAAA,iBAlEA,6BAkEA,MAlEA,EAkEA;AACA,WAAA,UAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA,WAAA,YAAA,CAAA,MAAA;AACA,WAAA,KAAA,GAAA,GAAA,CAAA,UAAA;AACA,WAAA,MAAA,GAAA,GAAA,CAAA,eAAA;AACA,WAAA,OAAA,GAAA,GAAA,CAAA,gBAAA;AACA,WAAA,SAAA,GAAA,GAAA,CAAA,YAAA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,eAAA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,WAAA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,WAAA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,iBAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,EAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,MAAA,QAAA,CAAA,eAAA,CAAA,SAAA,GAAA,CAAA;AACA,KAlFA;AAmFA,IAAA,eAnFA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAoFA,gBAAA,QApFA,gDAoFA,KAAA,QApFA;AAAA;AAAA,uBAqFA,UAAA,CAAA,QAAA,EAAA,KAAA,EAAA;AACA,kBAAA,UAAA,EAAA,KAAA,KAAA,CAAA,EADA;AAEA,kBAAA,eAAA,EAAA,KAAA,MAFA;AAGA,kBAAA,gBAAA,EAAA,KAAA,OAHA;AAIA,kBAAA,YAAA,EAAA,KAAA,SAJA;AAKA,kBAAA,YAAA,EAAA,KAAA,YAAA,EALA;AAMA,kBAAA,eAAA,EAAA,KAAA,QANA;AAOA,kBAAA,WAAA,EAAA,KAAA,QAPA;AAQA,kBAAA,WAAA,EAAA,KAAA,QARA;AASA,kBAAA,iBAAA,EAAA,KAAA;AATA,iBAAA,CAAA,CAWA,IAXA,CAWA,UAAA,QAAA,EAAA;AACA,sBAAA,QAAA,IAAA,OAAA,EAAA;AACA,oBAAA,MAAA,CAAA,UAAA;;AACA,oBAAA,MAAA,CAAA,MAAA;AACA;AACA,iBAhBA,EAiBA,KAjBA,CAiBA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAjBA,CArFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwGA,IAAA,mBAxGA;AAAA,2GAwGA,KAxGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyGA,gBAAA,QAzGA,gDAyGA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAzGA;AAAA;AAAA;AAAA,uBA2GA,UAAA,CAAA,QAAA,EAAA,OAAA,EAAA;AACA,kBAAA,UAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UADA;AAEA,kBAAA,eAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,eAFA;AAGA,kBAAA,gBAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,gBAHA;AAIA,kBAAA,eAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,eAJA;AAKA,kBAAA,YAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YALA;AAMA,kBAAA,YAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YANA;AAOA,kBAAA,WAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAPA;AAQA,kBAAA,WAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WARA;AASA,kBAAA,iBAAA,EAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AATA,iBAAA,CAAA,CAWA,KAXA,CAWA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAXA,CA3GA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyHA,gBAAA,OAAA,CAAA,GAAA;;AAzHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4HA,IAAA,SA5HA,qBA4HA,MA5HA,EA4HA;AAAA;;AACA,WAAA,QAAA,CACA,aADA,CACA,gEAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,gBADA,EACA;AACA,QAAA,KAAA,EAAA,gBADA;AACA,QAAA,IAAA,EAAA,GADA;AACA,QAAA,UAAA,EAAA,IADA;AACA,QAAA,SAAA,EAAA,QADA;AACA,QAAA,OAAA,EAAA,KADA;AAEA,QAAA,WAAA,EAAA,IAFA;AAEA,QAAA,WAAA,EAAA,KAFA;AAEA,QAAA,eAAA,EAAA,KAFA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA,EAKA,IALA,CAKA,UAAA,KAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA,UAAA,MAAA,CAAA,eAAA,CAAA,MAAA;AAAA;AAAA,OALA,EAMA,KANA,CAMA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,OANA;AAOA,KApIA;AAqIA,IAAA,eArIA;AAAA,uGAqIA,MArIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAsIA,gBAAA,QAtIA,gDAsIA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAtIA;AAAA;AAAA,uBAuIA,UAAA,CAAA,QAAA,EAAA,QAAA,CAAA,CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,sBAAA,QAAA,IAAA,OAAA,EAAA;AACA,oBAAA,MAAA,CAAA,MAAA;AACA,mBAFA,MAEA;AACA,oBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,qGAAA;AACA,sBAAA,KAAA,EAAA,gBADA;AACA,sBAAA,OAAA,EAAA,QADA;AACA,sBAAA,aAAA,EAAA,IADA;AACA,sBAAA,WAAA,EAAA;AADA,qBAAA;AAGA;AACA,iBATA,CAvIA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkJA,IAAA,UAlJA,sBAkJA,KAlJA,EAkJA;AACA,WAAA,KAAA,GAAA,KAAA,aAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,KAAA,OAAA,GAAA,KAAA,SAAA,GAAA,KAAA,QAAA,GAAA,KAAA,SAAA,GAAA,KAAA,QAAA,GAAA,KAAA,QAAA,GAAA,KAAA,QAAA,GAAA,IAAA;;AACA,UAAA,KAAA,IAAA,KAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,IAAA,GAAA,CAAA,KAAA,IAAA;AACA;AACA,KA1JA;AA2JA,IAAA,kBA3JA,8BA2JA,KA3JA,EA2JA;AACA,WAAA,QAAA,GAAA,KAAA,SAAA,GAAA,KAAA,QAAA,GAAA,KAAA,QAAA,GAAA,KAAA,QAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,KA9JA;AA+JA,IAAA,MA/JA,oBA+JA;AAAA;;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,aAAA,UAAA,GAAA,EAAA;AACA,YAAA,QAAA,6CAAA;AACA,QAAA,UAAA,CAAA,QAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AAAA;;AACA,+BAAA,MAAA,CAAA,UAAA,EAAA,IAAA,6CAAA,IAAA,CAAA,OAAA;;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,UAAA;AACA,SAJA,EAKA,KALA,CAKA,UAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,SALA;AAMA;AACA,KA1KA;AA2KA,IAAA,YA3KA,0BA2KA;AAAA;;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,aAAA,SAAA,GAAA,EAAA;AACA,YAAA,QAAA,oBAAA;AACA,QAAA,UAAA,CAAA,QAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AAAA;;AAAA,8BAAA,MAAA,CAAA,SAAA,EAAA,IAAA,4CAAA,IAAA,CAAA,OAAA;AAAA,SADA,EAEA,KAFA,CAEA,UAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,SAFA;AAGA;AACA,KAnLA;AAoLA,IAAA,YApLA,0BAoLA;AACA,UAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,WAAA,IAAA,GAAA,KAAA,CAAA,OAAA,KAAA,KAAA,IAAA,KAAA,CAAA,QAAA,KAAA,CAAA,IAAA,KAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,KAvLA;AAwLA,IAAA,cAxLA,0BAwLA,MAxLA,EAwLA;AAAA;;AACA,UAAA,MAAA,GAAA,CACA;AACA,QAAA,IAAA,EAAA,gBADA;AAEA,QAAA,MAAA,EAAA;AAAA,iBAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA;AAAA;AAFA,OADA,EAKA,WALA,EAMA;AACA,QAAA,IAAA,EAAA,kBADA;AAEA,QAAA,MAAA,EAAA;AAAA,iBAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA;AAAA;AAFA,OANA,EAUA,QAVA,CAAA;AAYA,aAAA,MAAA;AACA;AAtMA,GAzGA;AAiTA,EAAA,OAjTA,qBAiTA;AACA,SAAA,MAAA;AACA,SAAA,YAAA;AACA,SAAA,YAAA;AACA;AArTA,CAAA;;AAwTA,MAAA,CAAA,eAAA,GAAA,UAAA,MAAA,EAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,YAAA,IAAA,QAAA,EAAA;AACA,WAAA,MAAA;AACA,GAFA,MAEA,IAAA,MAAA,CAAA,IAAA,CAAA,YAAA,IAAA,SAAA,EAAA;AACA,WAAA,SAAA;AACA,GAFA,MAEA,IAAA,MAAA,CAAA,IAAA,CAAA,YAAA,IAAA,OAAA,EAAA;AACA,WAAA,SAAA;AACA,GAFA,MAEA,IAAA,MAAA,CAAA,IAAA,CAAA,YAAA,IAAA,SAAA,EAAA;AACA,WAAA,YAAA;AACA,GAFA,MAEA,IAAA,MAAA,CAAA,IAAA,CAAA,YAAA,IAAA,QAAA,EAAA;AACA,WAAA,QAAA;AACA;AACA,CAZA","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Inspection Template Attributes'\" :folder=\"'Inspection'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Atom\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Attributes</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.attributes.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n\n    <!-- ######################################## -->\n    <!-- ########### ATTRIBUTE SECTION ########## -->\n    <!-- ######################################## -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" id=\"new-attribute-section\" @click=\"emptyInput('add')\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Inspection Attribute</h5>\n            </b-row>\n            <div class=\"mt-3\" v-show=\"show\">\n              <b-form @submit.prevent=\"onSubmit\">\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <v-select v-model=\"IType\" :options=\"itemTypes\" required placeholder=\"Choose Item Type\" label=\"txtItemType\"></v-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"6\">\n                    <b-form-input id=\"input-1\" v-model=\"KeyAtt\" type=\"text\" required placeholder=\"Key Attribute\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-form-input id=\"input-2\" v-model=\"NameAtt\" type=\"text\" required placeholder=\"Name Attribute\" ></b-form-input>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <v-select  id=\"select-2\" v-model=\"ValueType\" :options=\"optionsTypes\" required placeholder=\"Choose Value Type\" \n                    label=\"text\" :reduce=\"Value => Value.value\" @input=\"emptyLastValueType($event)\" ></v-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"this.ValueType == 'Integer' || this.ValueType == 'Float' || this.ValueType == 'String'\">\n                  <b-col md=\"12\">\n                    <b-form-input id=\"input-3\" v-model=\"ValueDef\" type=\"text\" required placeholder=\"Value Default\" ></b-form-input>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"this.ValueType == 'Float'\">\n                  <b-col md=\"12\">\n                    <v-select  id=\"select-4\" v-model=\"Parameter\" :options=\"optionsUnits\" required placeholder=\"Choose Parameter Unit\" \n                    label=\"text\" :reduce=\"Unit => Unit.value\"></v-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"this.ValueType == 'Boolean'\">\n                  <b-col md=\"12\">\n                    <v-select  id=\"select-5\" v-model=\"ValueDef\" :options=\"optionsBoolean\" required placeholder=\"Choose Default Parameter\" \n                    label=\"text\" :reduce=\"Boolean => Boolean.value\"></v-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"this.ValueType == 'Select'\">\n                  <b-col md=\"12\">\n                    <input-tag class=\"input-group-text\" v-model=\"ParameterTags\" placeholder=\"[+] Add Parameter\" :add-tag-on-keys='[13, 188, 9]'></input-tag>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"this.ValueType == 'Select'\">\n                  <b-col md=\"12\">\n                    <v-select  id=\"select-6\" v-model=\"ValueDef\" :options=\"ParameterTags\" required placeholder=\"Choose Default Parameter\" \n                    label=\"text\" ></v-select>\n                  </b-col>\n                </b-row>\n\n                <!-- MIN / MAX / TOLERANCE -->\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"this.ValueType == 'Integer' || this.ValueType == 'Float'\">\n                  <b-col md=\"4\">\n                    <b-form-input id=\"input-4\" v-model=\"ValueMin\" type=\"number\" required placeholder=\"Value MIN\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-input id=\"input-5\" v-model=\"ValueMax\" type=\"number\" required placeholder=\"Value MAX\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-input id=\"input-6\" v-model=\"ValueTol\" type=\"number\" required placeholder=\"Value Tolerance\" ></b-form-input>\n                  </b-col>\n                </b-row>\n\n                <!-- NEW ATTRIBUTE / UPDATE ATTRIBUTE BUTTONS -->\n                <b-row class=\"ml-3 mt-5 mr-3\">\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-else-if=\"updateStatus\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-info\">Cancel</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <b-button type=\"submit\" block variant=\"success\" :disabled=\"disabled\">Add Attribute</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-else-if=\"updateStatus\">\n                    <b-button type=\"submit\" block variant=\"warning\" :disabled=\"disabled\">Update Attribute</b-button>\n                  </b-col>\n                </b-row>\n\n                <!-- ERROR MESSAGE -->\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid! Please make sure that the key attribute is unique and no special symbols are used.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID ATTRIBUTES -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridAttributes\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @cellValueChanged=\"updateAttributeGrid\"\n                @row-selected=\"onRowSelected\"\n                :getContextMenuItems=\"getContextMenu\"\n                :pagination=\"true\"\n                :paginationPageSize=\"10\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID STATS -->\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport InputTag from 'vue-input-tag'\n\nexport default {\n  metaInfo: {    \n    title: \"Inspection Attributes\"\n  },\n  components: {\n    AgGridVue, InputTag\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n\n      // VUE VARIABLES\n      attributes: [],\n      show: false,\n      IType: null,\n      KeyAtt: null,\n      NameAtt: null,\n      ValueDef: null,\n      ValueType: null,\n      Parameter: null,\n      ParameterTags: [],\n      ValueMin: null,\n      ValueMax: null,\n      ValueTol: null,\n      date: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      itemTypes: [],\n      optionsTypes: [\n        { value: 'Integer', text: 'Counter' },\n        { value: 'Float', text: 'Measure' },\n        { value: 'String', text: 'Text' },\n        { value: 'Boolean', text: 'True/False' },\n        { value: 'Select', text: 'Select' },\n      ],\n      optionsUnits: [\n        { value: 'µm', text: 'µm' },\n        { value: 'mm', text: 'mm' },\n        { value: 'cm', text: 'cm' },\n        { value: 'mg', text: 'mg' },\n        { value: 'g', text: 'g' },\n        { value: 'ml', text: 'ml' },\n        { value: 'inch', text: 'inch' },\n        { value: 'oz', text: 'oz' },\n      ],\n      optionsBoolean: [\n        { value: 'true', text: 'True' },\n        { value: 'false', text: 'False' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.defaultColDef = { editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.columnDefs = [\n      {headerName: \"Item Type\", field: \"idItemType.txtItemType\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Key Attribute\", field: \"txtKeyAttribute\", filter: 'agTextColumnFilter',},\n      {headerName: \"Name Attribute\", field: \"txtNameAttribute\", filter: 'agTextColumnFilter', },\n      {headerName: \"Value Default\", field: \"txtValueDefault\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Value Type\", field: \"txtValueType\", filter: 'agTextColumnFilter', editable: false, valueGetter: ValueTypeGetter, },\n      {headerName: \"Parameter\", field: \"txtParameter\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Value Min\", field: \"txtValueMin\", filter: 'agTextColumnFilter', },\n      {headerName: \"Value Max\", field: \"txtValueMax\", filter: 'agTextColumnFilter', },\n      {headerName: \"Value Tolerance\", field: \"txtValueTolerance\", filter: 'agTextColumnFilter', },\n    ]\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('inspectionAttributeTemp_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('inspectionAttributeTemp_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function () {\n      if(this.ValueType == 'Boolean') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false; \n      } else if(this.ValueType == 'Integer') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false ; \n      } else if(this.ValueType == 'Float') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false; \n      } else if(this.ValueType == 'String') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false; \n      } else if(this.ValueType == 'Select') {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : !this.ValueDef ? true : false; \n      } else {\n        return !this.IType ? true : !this.KeyAtt ? true : !this.NameAtt ? true : !this.ValueType ? true : false; \n      }\n    },\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('inspectionAttributeTemp_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('inspectionAttributeTemp_columnStats', null);\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    onSubmit() {\n      if(!this.updateStatus) { this.addAtt();\n      } else { this.updateAttribute(); }\n    },\n    autoSizeAll(skipHeader) {\n      var allColumnIds = [];\n      this.gridColumnApi.getAllColumns().forEach(function(column) {\n        allColumnIds.push(column.colId);\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    },\n    getParameter(params) {\n      if(params.node.data.txtValueType == 'Select') {\n        this.ParameterTags = params.node.data.txtParameter.split(',');\n      } else {\n        this.Parameter = params.node.data.txtParameter;\n      }\n    },\n    setParameter() {\n      let val;\n      if(this.ValueType == 'Select') {\n        return val = this.ParameterTags.toString();\n      } else if(this.ValueType == 'Integer' || this.ValueType == 'String' || this.ValueType == 'Boolean') {\n        return val = null;\n      } else if(this.ValueType == 'Float' ) {\n        return val = this.Parameter.toString();\n      }\n    },\n    addAtt() {\n      let endpoint = `/api/inspection-template-attribute/`;\n      apiService(endpoint, \"POST\", { \n        txtParameter: this.setParameter(),\n        idItemType: this.IType.id,\n        txtKeyAttribute: this.KeyAtt,\n        txtNameAttribute: this.NameAtt,\n        txtValueType: this.ValueType,\n        txtValueMin: this.ValueMin,\n        txtValueMax: this.ValueMax,\n        txtValueTolerance: this.ValueTol,\n        txtValueDefault: this.ValueDef,\n        })\n        .then(response => {\n          if (response != 'ERROR'){\n            this.getAtt();\n            this.emptyInput();\n            this.error = false;\n          } else {\n            this.error = true;\n          }\n        })\n        .catch(err => console.log(err));\n   },\n    editAttributeMenu(params) {\n      this.emptyInput();\n      let sel = params.node.data;\n      this.getParameter(params);\n      this.IType = sel.idItemType;\n      this.KeyAtt = sel.txtKeyAttribute;\n      this.NameAtt = sel.txtNameAttribute;\n      this.ValueType = sel.txtValueType;\n      this.ValueDef = sel.txtValueDefault;\n      this.ValueMin = sel.txtValueMin;\n      this.ValueMax = sel.txtValueMax;\n      this.ValueTol = sel.txtValueTolerance;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateAttribute() {\n      let endpoint = `/api/inspection-template-attribute/${this.updateId}/`;\n      await apiService(endpoint, \"PUT\", { \n        idItemType: this.IType.id,\n        txtKeyAttribute: this.KeyAtt,\n        txtNameAttribute: this.NameAtt,\n        txtValueType: this.ValueType,\n        txtParameter: this.setParameter(),\n        txtValueDefault: this.ValueDef,\n        txtValueMin: this.ValueMin,\n        txtValueMax: this.ValueMax,\n        txtValueTolerance: this.ValueTol,\n        })\n        .then(response => {\n          if (response != 'ERROR'){\n            this.emptyInput();\n            this.getAtt();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    async updateAttributeGrid(event) {     \n      let endpoint = `/api/inspection-template-attribute/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          idItemType: event.node.data.idItemType,\n          txtKeyAttribute: event.node.data.txtKeyAttribute,\n          txtNameAttribute: event.node.data.txtNameAttribute,\n          txtValueDefault: event.node.data.txtValueDefault,\n          txtValueType: event.node.data.txtValueType,\n          txtParameter: event.node.data.txtParameter,\n          txtValueMin: event.node.data.txtValueMin,\n          txtValueMax: event.node.data.txtValueMax,\n          txtValueTolerance: event.node.data.txtValueTolerance,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Attribute? => \" + params.node.data.txtNameAttribute, {\n          title: \"Please Confirm\", size: \"m\", buttonSize: \"sm\", okVariant: \"danger\", okTitle: \"YES\",\n          cancelTitle: \"NO\", footerClass: \"p-2\", hideHeaderClose: false, centered: true\n        })\n        .then(value => { if (value) { this.deleteAttribute(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteAttribute(params) {\n      let endpoint = `/api/inspection-template-attribute/${params.node.data.id}/`;\n      await apiService(endpoint, \"DELETE\")\n        .then(response => {\n          if (response != 'ERROR') {\n            this.getAtt();\n          } else {\n            this.$bvToast.toast(`Can't delete this entry. Please check if there are dependent entries. Please delete those first!`, {\n              title: 'DELETE WARNING', variant: 'danger', autoHideDelay: 6000, appendToast: false\n            })\n          }\n        })\n    },\n    emptyInput(event) {\n      this.IType = this.ParameterTags = [];\n      this.KeyAtt = this.NameAtt = this.ValueType = this.ValueDef = this.Parameter = this.ValueMin = this.ValueMax = this.ValueTol = null;\n      if(event != 'add') {\n        this.show = false;\n      } else {\n        this.show = !this.show;\n      }\n    },\n    emptyLastValueType(event) {\n      this.ValueDef = this.Parameter = this.ValueMin = this.ValueMax = this.ValueTol = null;\n      this.ParameterTags = [];\n    },\n    getAtt() {\n      if (!this.error) {\n        this.attributes = [];\n        let endpoint = `/api/inspection-template-attribute-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            this.rowData = this.attributes\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getItemTypes() {\n      if (!this.error) {\n        this.itemTypes = [];\n        let endpoint = `/api/item-type/`;\n        apiService(endpoint)\n          .then(data => { this.itemTypes.push(...data.results); })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Attribute',\n          action: () => this.editAttributeMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Attribute',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getAtt();\n    this.getDateToday();\n    this.getItemTypes();\n  },\n};\n\nwindow.ValueTypeGetter = function(params) {\n  if(params.data.txtValueType == 'String') {\n    return 'Text'\n  } else if(params.data.txtValueType == 'Integer') {\n    return 'Counter'\n  } else if(params.data.txtValueType == 'Float') {\n    return 'Measure'\n  } else if(params.data.txtValueType == 'Boolean') {\n    return 'True/False'\n  } else if(params.data.txtValueType == 'Select') {\n    return 'Select'\n  }\n}\n\n</script>\n\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  #new-attribute-section {\n    cursor: pointer;\n    outline: none;\n  }\n  .input-tag {\n    background-color:#003473!important;\n    color: #fff!important;\n    border: 1px solid #003473!important;\n  }\n  .vue-input-tag-wrapper {\n    vertical-align: baseline!important;\n    height: calc(1.9695rem + 8px);\n    background: #f8f9fa;\n    border: 1px solid #ced4da;\n  }\n  .remove:empty:before {\n    color: #fff\n  }\n</style>\n"],"sourceRoot":"src/views/app/inspection"}]}