{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-list.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-list.vue","mtime":1602163669575},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ni:focus,\ninput:focus,\nselect:focus,\ntextarea:focus,\nbutton:focus {\n    outline: none;\n}\n#new-device-section {\n  cursor: pointer;\n  outline: none;\n}\n",{"version":3,"sources":["device-list.vue"],"names":[],"mappingskoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"device-list.vue","sourceRoot":"src/views/app/device","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Device List'\" :folder=\"'Device'\" />\n    <!-- ICON BG -->\n    <b-row>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Computer-2\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Devices</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.devices.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n\n    <!-- ##################################### -->\n    <!-- ########### DEVICE SECTION ########## -->\n    <!-- ##################################### -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\" >\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" id=\"new-device-section\" @click=\"emptyInput('add')\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Device</h5>\n            </b-row>\n            <div class=\"mt-3\" v-show=\"show\">\n              <b-form @submit.prevent=\"onSubmit\">\n                <b-row class=\"ml-3 mt-3 mr-3\">\n                  <b-col md=\"6\">\n                    <b-form-input v-model=\"SNumber\" type=\"text\" placeholder=\"Serial Number\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-form-input v-model=\"IMEI\" type=\"text\" placeholder=\"IMEI\" ></b-form-input>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mt-3 mr-3\">\n                  <b-col md=\"6\">\n                    <v-select  id=\"select-1\" v-model=\"Model\" :options=\"optionsModels\" required placeholder=\"Choose Model\" \n                    label=\"txtModelName\" :reduce=\"Model => Model.id\"></v-select>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <v-select v-model=\"DPosition\" :options=\"positions\" required placeholder=\"Choose Device Position\" label=\"txtDevicePosition\"></v-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <b-form-textarea id=\"area-1\" v-model=\"Comment\" placeholder=\"Enter memo ...\" rows=\"3\" max-rows=\"6\"></b-form-textarea>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <multiselect\n                        v-model=\"selectedAttributes\" placeholder=\"Choose Attributes\" label=\"txtNameAttribute\" \n                        track-by=\"id\" :options=\"optionAttributes\" :multiple=\"true\" :taggable=\"true\" :close-on-select=\"false\"\n                        :searchable=\"true\" open-direction=\"bottom\">\n                    </multiselect>\n                  </b-col>\n                </b-row>\n\n                <!-- TEMPLATE ATTRIBUTES -->\n                <b-row class=\"mt-3 ml-3 mr-3\">\n                  <b-col md=\"12\">\n                    <h5 class=\"mt-4\" v-show=\"selectedAttributes.length != 0\">Device Attributes</h5>\n                    <b-row class=\"mb-3\" v-for=\"att in selectedAttributes\" :key=\"att.id\">\n                      <b-input-group v-if=\"att.txtValueType == 'Select'\" class=\"ml-3 mr-3\" :prepend=\"att.txtNameAttribute\">\n                        <b-form-select v-model=\"att.txtValueDefault\" :options=\"getParameterTags(att.txtParameter)\"></b-form-select>\n                      </b-input-group>\n                        <b-input-group v-else-if=\"att.txtValueType == 'Boolean'\" class=\"ml-3 mr-3\" :prepend=\"att.txtNameAttribute\">\n                          <b-form-select v-model=\"att.txtValueDefault\" :options=\"optionBoolean\"></b-form-select>\n                        </b-input-group>\n                      <b-input-group v-else class=\"ml-3 mr-3\" :prepend=\"att.txtNameAttribute\" :append=\"att.txtParameter\">\n                        <b-form-input v-model=\"att.txtValueDefault\" type=\"text\"></b-form-input>\n                      </b-input-group>\n                    </b-row>\n                  </b-col>\n                </b-row>\n\n                <!-- UPDATE ATTRIBUTES -->\n                <b-row class=\"mt-4 ml-3 mr-3\" v-if=\"filteredAttributes.length != 0 && updateStatus\">\n                  <b-col md=\"12\">\n                    <h5 class=\"typo__label mb-3\">Attributes of Item</h5>\n                    <b-row class=\"mb-3\" v-for=\"att in filteredAttributes\" :key=\"att.id\">\n                      <b-input-group v-if=\"att.txtValueType == 'Select'\" class=\"ml-3 mr-3\" :prepend=\"att.txtNameAttribute\">\n                        <b-form-select v-model=\"att.txtValueAttribute\" :options=\"getParameterTags(att.txtParameter)\"></b-form-select>\n                      </b-input-group>\n                      <b-input-group v-else-if=\"att.txtValueType == 'Boolean'\" class=\"ml-3 mr-3\" :prepend=\"att.txtNameAttribute\">\n                        <b-form-select v-model=\"att.txtValueAttribute\" :options=\"optionBoolean\"></b-form-select>\n                      </b-input-group>\n                      <b-input-group v-else class=\"ml-3 mr-3\" :prepend=\"att.txtNameAttribute\" :append=\"att.txtParameter\">\n                        <b-form-input v-model=\"att.txtValueAttribute\" type=\"text\"></b-form-input>\n                      </b-input-group>\n                    </b-row>\n                  </b-col>\n                </b-row>\n                \n                <!-- NEW DEVICE / UPDATE DEVICE BUTTONS -->\n                <b-row class=\"ml-3 mt-5 mr-3\">\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-else-if=\"updateStatus\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-info\">Cancel</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <b-button type=\"submit\" block variant=\"success\" :disabled=\"disabled\">Add Device</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-else-if=\"updateStatus\">\n                    <b-button type=\"submit\" block variant=\"warning\" :disabled=\"disabled\">Update Device</b-button>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mt-3 mr-3\">\n                  <b-col md=\"12\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID DEVICES -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridDevices\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @grid-ready=\"onGridReady\"\n                @cellValueChanged=\"updateDeviceGrid\"\n                @row-selected=\"onRowSelectedDevice\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :getContextMenuItems=\"getContextMenu\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID ATTRIBUTES -->\n    <div class=\"row\" v-if=\"selectedDevice\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <h5 class=\"card-title p-3 pb-0 mb-3\">Attributes</h5>\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridAttributes\"\n                @cellValueChanged=\"updateAttributeGrid\"\n                @grid-ready=\"onGridReady1\"\n                :defaultColDef=\"defaultColDef1\"\n                :columnDefs=\"columnDefs1\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData1\"\n                :gridOptions=\"gridOptions1\"\n                :suppressRowClickSelection=\"true\"\n                :pagination=\"true\"\n                :paginationPageSize=\"50\"\n                :getContextMenuItems=\"getContextMenu1\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID STATS -->\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Device\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n\n      // AG-GRID ATTRIBUTES VARIABLES\n      gridOptions1: null,\n      gridApi1: null,\n      gridColumnApi1: null,\n      defaultColDef1: null,\n      columnDefs1: null,\n      rowData1: null,\n      defaultColDef1: null,\n      paginationPageSize1: 0,\n\n      // VUE VARIABLES\n      devices: [],\n      models: [],\n      attributes: [],\n      positions: [],\n      tempAttributes: [],\n      selectedAttributes: [],\n      filteredAttributes: [],\n      SNumber: null,\n      DPosition: null,\n      IMEI: null,\n      Comment: null,\n      Model: null,\n      date: null,\n      error: false,\n      show: false,\n      updateStatus: false,\n      updateId: null,\n      selectedDevice: false,\n      optionsModels: [],\n      optionAttributes: [],\n      optionPosition: [\n        { code: 'Neuried', text: 'Neuried' },\n        { code: 'Straubing', text: 'Straubing' },\n        { code: 'Ordered', text: 'Ordered' },\n        { code: 'on the Way', text: 'on the Way' },\n      ],\n      optionBoolean: [\n        { value: 'true', text: 'Yes' },\n        { value: 'false', text: 'No' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.gridOptions1 = {};\n    this.columnDefs = [\n      {headerName: \"Model Name\", field: \"idModel.txtModelName\", filter: 'agTextColumnFilter', checkboxSelection: true,  editable: false},\n      {headerName: \"Serial Number\", field: \"txtSerialNumber\", filter: 'agTextColumnFilter',},\n      {headerName: \"IMEI\", field: \"txtIMEI\", filter: 'agTextColumnFilter',},\n      {headerName: \"Device Position\", field: \"idDevicePosition.txtDevicePosition\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Neuried', 'Straubing']},},\n      {headerName: \"Manufacturer\", field: \"idModel.idManufacturer.txtManufacturerName\", filter: 'agTextColumnFilter', editable: false},\n      {headerName: \"Supplier\", field: \"idModel.idSupplier.txtSupplierName\", filter: 'agTextColumnFilter', editable: false},\n      {headerName: \"Memo\", field: \"txtComment\", filter: 'agTextColumnFilter', editable: false},\n    ],\n    this.columnDefs1 = [\n      {headerName: \"Key Attribute\", field: \"txtKeyAttribute\", filter: 'agTextColumnFilter', },\n      {headerName: \"Name Attribute\", field: \"txtNameAttribute\", filter: 'agTextColumnFilter', },\n      {headerName: \"Value Attribute\", field: \"txtValueAttribute\", filter: 'agTextColumnFilter', },\n      {headerName: \"Value Type\", field: \"txtValueType\", filter: 'agTextColumnFilter', },\n      {headerName: \"Parameter\", field: \"txtParameter\", filter: 'agTextColumnFilter', },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.defaultColDef1 = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.paginationPageSize1 = 10;\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('device_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('device_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function () {\n      return !this.DPosition ? true : !this.Model ? true : false; \n    },\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('device_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('device_columnStats', null);\n    },\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onSubmit() {\n      if(!this.updateStatus) { this.addDevice();\n      } else { this.updateDevice(); }\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelectedDevice(event) {\n      this.selectedDevice = this.selectedDevice ? false : true\n      if(event.node.selected == true) {\n        this.getAttributes(event.data.id);\n        window.localStorage.setItem('selDevice', event.node.data.id)\n      } else {\n        this.gridApi.redrawRows();\n        this.attributes = [];\n      }\n    },\n    onGridReady(params) { \n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi\n      setTimeout(() => {  this.getSelectedDevice(params) }, 500);\n    },\n    onGridReady1(params) {\n      this.gridApi1 = params.api;\n      this.gridColumnApi1 = params.columnApi\n    },\n    addDevice() {\n      if (this.SNumber) {\n        let endpoint = `/api/device/`;\n        apiService(endpoint, \"POST\", { \n          txtSerialNumber: this.SNumber, \n          txtIMEI: this.IMEI, \n          idDevicePosition: this.DPosition.id, \n          idModel: this.Model, \n          txtComment: this.Comment \n          })\n        .then(response => {\n          if (response != 'ERROR'){\n              for (let i = 0; i < this.selectedAttributes.length; i++) {\n                const el = this.selectedAttributes[i];\n                let endpointAttributes = `/api/device-attribute/`;\n                apiService(endpointAttributes, \"POST\", { \n                  txtKeyAttribute: el.txtKeyAttribute, \n                  txtNameAttribute: el.txtNameAttribute, \n                  txtValueAttribute: el.txtValueDefault, \n                  txtValueType: el.txtValueType, \n                  txtParameter: el.txtParameter,\n                  idDevice: response.id,\n                })\n              };\n            this.getDevices();\n            this.emptyInput();\n          }\n        })\n        .catch(err => console.log(err));\n      }\n    },\n    editItemMenu(params) {\n      this.emptyInput();\n      let sel = params.node.data;\n      this.SNumber = sel.txtSerialNumber;\n      this.DPosition = sel.idDevicePosition;\n      this.Model = sel.idModel;\n      this.Comment = sel.txtComment;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      this.getAttributes()\n      document.documentElement.scrollTop = 0;\n    },\n    async updateDevice() {\n      if(typeof this.Model == \"object\") { this.Model = this.Model.id } else { this.Model = this.Model }\n      let endpoint = `/api/device/${this.updateId}/`;\n      await apiService(endpoint, \"PUT\", { \n        txtSerialNumber: this.SNumber,\n        txtIMEI: this.IMEI,\n        idDevicePosition: this.DPosition.id,\n        txtComment: this.Comment,\n        idModel: this.Model, })\n        .then(response => {\n          if (response != 'ERROR'){\n            // ADD ATTRIBUTE\n            for (let i = 0; i < this.selectedAttributes.length; i++) {\n              const el = this.selectedAttributes[i];\n              let endpointAttributes = `/api/device-attribute/`;\n              apiService(endpointAttributes, \"POST\", { \n                txtKeyAttribute: el.txtKeyAttribute, \n                txtNameAttribute: el.txtNameAttribute, \n                txtValueAttribute: el.txtValueDefault, \n                txtValueType: el.txtValueType, \n                txtParameter: el.txtParameter,\n                idDevice: response.id,\n              })\n            }\n            // UPDATE ATTRIBUTE\n            for (let i = 0; i < this.filteredAttributes.length; i++) {\n              let el = this.filteredAttributes[i];\n              let endpointAttributes = `/api/device-attribute/${el.id}/`;\n              apiService(endpointAttributes, \"PUT\", { \n                txtKeyAttribute: el.txtKeyAttribute, \n                txtNameAttribute: el.txtNameAttribute, \n                txtValueAttribute: el.txtValueAttribute, \n                txtValueType: el.txtValueType, \n                txtParameter: el.txtParameter,\n                idDevice: response.id,\n              })\n            };\n            this.selectedDevice = false;\n            this.attributes = [];\n            this.emptyInput();\n            this.getDevices();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    async updateDeviceGrid(event) {     \n      let endpoint = `/api/device/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtSerialNumber: event.node.data.txtSerialNumber,\n          txtParameter: event.node.data.txtParameter,\n          idDevicePosition: event.node.data.idDevicePosition,\n          txtComment: event.node.data.txtComment,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    async updateAttributeGrid(event) {     \n      let endpoint = `/api/device-attribute/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtKeyAttribute: event.node.data.txtKeyAttribute,\n          txtNameAttribute: event.node.data.txtNameAttribute,\n          txtValueAttribute: event.node.data.txtValueAttribute,\n          txtValueType: event.node.data.txtValueType,\n          txtParameter: event.node.data.txtParameter,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Device? => \" + params.node.data.txtSerialNumber, {\n          title: \"Please Confirm\", size: \"m\", buttonSize: \"sm\", okVariant: \"danger\", okTitle: \"YES\",\n          cancelTitle: \"NO\", footerClass: \"p-2\", hideHeaderClose: false, centered: true })\n        .then(value => { if (value) { this.deleteDevice(params); } })\n        .catch(err => console.log(err));\n    },\n    openModal1(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Do you really want to delete the Attribute? => \" + params.node.data.txtNameAttribute, {\n          title: \"Please Confirm\", size: \"m\", buttonSize: \"sm\", okVariant: \"danger\", okTitle: \"YES\",\n          cancelTitle: \"NO\", footerClass: \"p-2\", hideHeaderClose: false, centered: true })\n        .then(value => { if (value) { this.deleteAttribute(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteDevice(params) {\n      let endpoint = `/api/device/${params.node.data.id}/`;\n      await apiService(endpoint, \"DELETE\")\n        .then(response => {\n          if (response != 'ERROR') {\n            this.getDevices();\n          } else {\n            this.$bvToast.toast(`Can't delete this entry. Please check if there are dependent entries. Please delete those first!`, {\n              title: 'DELETE WARNING', variant: 'danger', autoHideDelay: 6000, appendToast: false\n            })\n          }\n        })\n    },\n    async deleteAttribute(params) {\n      let endpoint = `/api/device-attribute/${params.node.data.id}/`;\n      await apiService(endpoint, \"DELETE\")\n        .then(response => {\n          if (response != 'ERROR') {\n            let id = window.localStorage.getItem('selDevice');\n            this.getAttributes(id);\n          } else {\n            this.$bvToast.toast(`Can't delete this entry. Please check if there are dependent entries. Please delete those first!`, {\n              title: 'DELETE WARNING', variant: 'danger', autoHideDelay: 6000, appendToast: false\n            })\n          }\n        })\n    },\n    emptyInput(event) {\n      this.selectedAttributes = [];\n      this.SNumber = this.DPosition = this.Model = this.IMEI = this.Comment = null;\n      if(event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    getDevices() {\n      if (!this.error) {\n        this.devices = [];\n        let endpoint = `/api/device-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.devices.push(...data.results);\n            this.rowData = this.devices\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getModels() {\n      if (!this.error) {\n        this.models = [];\n        let endpoint = `/api/model/`;\n        apiService(endpoint)\n          .then(data => {\n            this.models.push(...data.results);\n            this.optionsModels = this.models\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getAttributes(val) {\n      if (!this.error) {\n        this.attributes = [];\n        let endpoint = `/api/device-attribute/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            if(this.updateId != null) {\n              this.filteredAttributes = this.attributes.filter(e => e.idDevice == this.updateId)\n            }\n            if(val != null) {\n              this.rowData1 = this.attributes.filter(e => e.idDevice == val)\n            }\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getTemplateAttributes() {\n      if (!this.error) {\n        this.tempAttributes = [];\n        let endpoint = `/api/device-template-attribute/`;\n        apiService(endpoint)\n          .then(data => {\n            this.tempAttributes.push(...data.results);\n            this.optionAttributes = this.tempAttributes\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDevicePosition() {\n      if (!this.error) {\n        this.positions = [];\n        let endpoint = `/api/device-position/`;\n        apiService(endpoint)\n          .then(data => {\n            this.positions.push(...data.results);\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Device',\n          action: () => this.editItemMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Device',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n    getContextMenu1(params) {\n      var result = [\n        {\n          name: 'Delete Attribute',\n          action: () => this.openModal1(params)\n        },\n        'separator',\n        'export'\n      ];\n      return result;\n    },\n    getSelectedDevice(event) {\n      if(window.localStorage.getItem('selDevice') != null) {\n        let el = parseInt(localStorage.getItem('selDevice'));\n        event.api.forEachNode(rowNode => { rowNode.setSelected(rowNode.data.id === el) });\n      }\n    },\n  },\n  created() {\n    this.getDevices();\n    this.getModels();\n    this.getDateToday();\n    this.getTemplateAttributes();\n    this.getDevicePosition();\n  },\n  beforeRouteLeave (to, from, next) {\n    window.localStorage.removeItem('selDevice');\n    next()\n  }\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  #new-device-section {\n    cursor: pointer;\n    outline: none;\n  }\n</style>\n"]}]}