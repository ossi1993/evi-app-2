{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-device-list.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-device-list.vue","mtime":1602073176186},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ni:focus,\ninput:focus,\nselect:focus,\ntextarea:focus,\nbutton:focus {\n    outline: none;\n}\n",{"version":3,"sources":["order-device-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2XA;AACA;AACA;AACA;AACA;AACA;AACA","file":"order-device-list.vue","sourceRoot":"src/views/app/order","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'List Order Devices'\" :folder=\"'Order'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\" >\n          <i class=\"i-Add-Cart\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Orders</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.orders.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\" >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n\n    <!-- ########################################### -->\n    <!-- ########### ORDER DEVICE SECTION ########## -->\n    <!-- ########################################### -->\n    <div class=\"row\" v-if=\"updateDeviceStatus\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">Update Device Order</h5>\n            </b-row>\n            <div class=\"mt-3\" v-show=\"show\">\n              <b-form @submit.prevent=\"updateDeviceOrder\">\n                <!-- ORDER INPUT -->\n                <b-row class=\"mt-4 ml-3 mr-3\">\n                  <b-col md=\"4\">\n                    <v-select v-model=\"orderedDevice\" :options=\"devices\" required placeholder=\"Choose Device\"\n                      :get-option-label=\"label => label.idModel.txtModelName + ' - ' + label.txtSerialNumber\"></v-select>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-datepicker v-model=\"DatOrder\" placeholder=\"Order Date\" required disabled></b-form-datepicker >\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-datepicker v-model=\"DatDelivery\" placeholder=\"Delivery Date\" ></b-form-datepicker >\n                  </b-col>\n                </b-row>\n                <b-row class=\"mt-3 ml-3 mr-3\">\n                  <b-col md=\"6\">\n                    <b-form-input v-model=\"OrderAmount\" type=\"number\" min=1 required></b-form-input>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-form-select v-model=\"DelStatus\" :options=\"optionStatus\" text-field=\"label\" value-field=\"code\"></b-form-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <b-form-textarea v-model=\"Comment\" placeholder=\"Enter memo ...\" rows=\"3\" max-rows=\"6\"></b-form-textarea>\n                  </b-col>\n                </b-row>\n                <!-- UPDATE DEVICE BUTTONS -->\n                <b-row class=\"ml-3 mr-3 mt-5\">\n                  <b-col md=\"6\">\n                    <b-button @click=\"emptyDeviceInput\" block variant=\"outline-info\">Cancel</b-button>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-button block variant=\"warning\" type=\"submit\">Update Device Order</b-button>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID DEVICES -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridOrders\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                :excelStyles=\"excelStyles\"\n                @cellValueChanged=\"updateDeviceOrderGrid\"\n                @row-selected=\"onRowSelected\"\n                :getContextMenuItems=\"getContextMenu\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\"\n                :animateRows=\"true\"\n                :isExternalFilterPresent=\"isExternalFilterPresent\"\n                :doesExternalFilterPass=\"doesExternalFilterPass\" >\n            </AgGridVue>\n            <!-- GRID BUTTONS -->\n            <b-row>\n              <b-col md=\"6\">\n                <div class=\"ml-3 fmr-3 mt-2 mb-2 text-left\">\n                  <b-button @click=\"changeExternalFilter('all')\" size=\"sm\" variant=\"outline-info\">Show All</b-button>\n                  <b-button @click=\"changeExternalFilter('delivered')\" class=\"ml-3\" size=\"sm\" variant=\"outline-info\">Show Delivered</b-button>\n                  <b-button @click=\"changeExternalFilter('not delivered')\" class=\"ml-3\" size=\"sm\" variant=\"outline-info\">Show Not Delivered</b-button>\n                </div>\n              </b-col>\n              <b-col md=\"6\">\n                <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                    Page Size:\n                    <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                        <option value=\"10\" selected=\"\">10</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                        <option value=\"200\">200</option>\n                    </select>\n                    <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n                </div>\n              </b-col>\n            </b-row>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- AG-GRID STATE -->\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Device Orders\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n\n      // VUE VARIABLES\n      orders: [],\n      devices: [],\n      orderedDevice: [],\n      DatOrder: null,\n      DatDelivery: null,\n      OrderAmount: null,\n      DelStatus: null,\n      Comment: null,\n      show: false,\n      date: null,\n      next: null,\n      error: false,\n      updateDeviceId: null,\n      updateDeviceStatus: false,\n      optionStatus: [\n        { code: null, label: 'Choose Delivery Status' },\n        { code: 'Delivered', label: 'Delivered' },\n        { code: 'Not Delivered', label: 'Not Delivered' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Order Number\", field: \"idOrder.txtOrderNumber\", filter: 'agTextColumnFilter', editable: false,},\n      {headerName: \"Serial Number\", field: \"idDevice.txtSerialNumber\", filter: 'agTextColumnFilter', },\n      {headerName: \"IMEI\", field: \"idDevice.txtIMEI\", filter: 'agTextColumnFilter', },\n      {headerName: \"Device\", field: \"idDevice.idModel.txtModelName\", filter: 'agTextColumnFilter', editable: false,},\n      {headerName: \"Order Amount\", field: \"numOrderAmount\", filter: 'agTextColumnFilter',},\n      {headerName: \"Order Date\", field: \"datOrder\", filter: 'agTextColumnFilter',},\n      {headerName: \"Delivery Date\", field: \"datDelivery\", filter: 'agTextColumnFilter',} ,\n      {headerName: \"Delivery Status\", field: \"txtDeliveryStatus\", filter: 'agTextColumnFilter', editable: false,},\n      {headerName: \"Memo\", field: \"txtComment\", filter: 'agTextColumnFilter', },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('orderDevice_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('orderDevice_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('orderDevice_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('orderDevice_columnStats', null);\n    },\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected(event) {\n      this.show1 = this.show1 ? false : true\n    },\n    changeExternalFilter(val) {\n      this.extFilter = val;\n      this.gridApi.onFilterChanged();\n    },\n    isExternalFilterPresent() {\n      return this.extFilter !== null;\n    },\n    doesExternalFilterPass(node) {\n      switch (this.extFilter) {\n        case 'all':\n          return true;\n        case 'delivered':\n          return node.data.txtDeliveryStatus === 'Delivered';\n        case 'not delivered':\n          return node.data.txtDeliveryStatus === 'Not Delivered';\n        default:\n          return true;\n      }\n    },\n    editOrderDeviceMenu(params) {\n      this.emptyDeviceInput();\n      let sel = params.node.data;\n      this.orderedDevice = sel.idDevice;\n      this.DatOrder = sel.datOrder;\n      this.DatDelivery = sel.datDelivery;\n      this.OrderAmount = sel.numOrderAmount;\n      this.DelStatus = sel.txtDeliveryStatus;\n      this.Comment = sel.txtComment;\n      this.updateDeviceStatus = true;\n      this.updateDeviceId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateDeviceOrder() {\n      let endpoint = `/api/order-device/${this.updateDeviceId}/`;\n      await apiService(endpoint, \"PATCH\", {\n        datOrder: this.DatOrder,\n        datDelivery: this.DatDelivery,\n        numOrderAmount: this.OrderAmount,\n        txtDeliveryStatus: this.DelStatus,\n        txtComment: this.Comment, \n        idDevice: this.orderedDevice.id })\n          .then(response => {\n            this.getDeviceOrder();\n            this.emptyDeviceInput();\n          })\n    },\n    async updateDeviceOrderGrid(event) {     \n      let endpoint = `/api/order-device/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", {\n          datOrder: event.node.data.datOrder,\n          datDelivery: event.node.data.datDelivery,\n          numOrderAmount: event.node.data.numOrderAmount,\n          txtDeliveryStatus: event.node.data.txtDeliveryStatus,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) { console.log(err) }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Order? => \" + params.node.data.idDevice.txtSerialNumber, {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => { if (value) { this.deleteDeviceOrder(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteDeviceOrder(params) {\n      let endpoint = `/api/order-device/${params.node.data.id}/`;\n      await apiService(endpoint, \"DELETE\")\n        .then(response => {\n          if (response != 'ERROR') {\n            this.getDeviceOrder();\n          } else {\n            this.$bvToast.toast(`You can't delete this instance. Please check if all connections to this instance are deleted.`, {\n              title: 'DELETE WARNING', variant: 'danger', autoHideDelay: 6000, appendToast: false\n            })\n          }\n        })\n    },\n    emptyDeviceInput(event) {\n      this.DatOrder = this.DatDelivery = this.OrderAmount = this.DelStatus = this.Comment = null;\n      this.orderedDevice = [];\n      this.show = !this.show;\n      this.updateDeviceStatus = false;\n    },\n    getDevice() {\n      if (!this.error) {\n        this.devices = [];\n        let endpoint = `/api/device-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.devices.push(...data.results);\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDeviceOrder() {\n      if (!this.error) {\n        this.orders = [];\n        let endpoint = `/api/order-device-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.orders.push(...data.results);\n            this.rowData = this.orders\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Order Device',\n          action: () => this.editOrderDeviceMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Device Order',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getDeviceOrder();\n    this.getDateToday();\n    this.getDevice();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"]}]}