{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\sessions\\signIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\sessions\\signIn.vue","mtime":1599458172126},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from \"vuex\";\nimport { apiService } from \"@/common/api.service.js\";\n\nexport default {\n  metaInfo: {\n    title: \"SignIn\"\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      userId: \"\",\n      message: '',\n      bgImage: require(\"@/assets/images/photo-wide-4.jpg\"),\n      logo: require(\"@/assets/evi_logo_sq.png\"),\n      signInImage: require(\"@/assets/images/photo-long-3.jpg\")\n    };\n  },\n  mounted() {\n    // document.cookie = \"csrftoken=;\";\n    // this.deleteCookie('csrftoken', '', -1);\n  },\n  computed: {\n    validation() {\n      return this.userId.length > 4 && this.userId.length < 13;\n    },\n    ...mapGetters([\"loggedInUser\", \"loading\", \"error\"])\n  },\n\n  methods: {\n    ...mapActions([\"loginDjango\"]),\n\n    formSubmit() {\n      this.loginDjango({ username: this.username, password: this.password });\n    },\n\n    makeToast(variant = null, msg) {\n      this.$bvToast.toast(msg, {\n        title: ` ${'variant' || \"default\"}`,\n        variant: variant,\n        solid: true\n      });\n    },\n    deleteCookie(csrftoken, value, days) {\n      var d = new Date;\n      d.setTime(d.getTime() + 24*60*60*1000*days);\n      document.cookie = csrftoken + \"=\" + value  + \";path=/;expires=\" + d.toGMTString();\n    }\n  },\n  watch: {\n    loggedInUser(val) {\n      if (val && val.uid && val.uid.length > 0) {\n        this.makeToast(\"success\", \"Successfully Logged In\");\n\n        setTimeout(() => {\n          this.$router.push(\"/\");\n        }, 500);\n      }\n    },\n    error(val) {\n      if (val != null) {\n        this.makeToast(\"warning\", val.message);\n      }\n    }\n  },\n\n};\n",null]}