{"version":3,"sources":["../../src/ts/widgets/agPickerField.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAoD;AACpD,8CAA+C;AAE/C,0CAAyC;AAEzC,+DAAqD;AACrD,kCAA6B;AAE7B;IAAkD,iCAAkB;IAApE;QAAA,qEA+EC;QA9Ea,cAAQ,GACd,6ZAMO,CAAC;QAKF,wBAAkB,GAAY,KAAK,CAAC;QACtC,eAAS,GAAY,KAAK,CAAC;;IAiEvC,CAAC;IAvDa,qCAAa,GAAvB;QAAA,iBA6CC;QA5CG,iBAAM,aAAa,WAAE,CAAC;QAEtB,IAAM,YAAY,GAAG;YACjB,IAAI,KAAI,CAAC,SAAS,EAAE;gBAChB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,OAAO;aACV;YACD,IAAI,KAAI,CAAC,UAAU,EAAE,EAAE;gBAAE,OAAO;aAAE;YAClC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;QAC7C,CAAC,CAAC;QAEF,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAE3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,WAAW,EAAE,UAAC,CAAa;YACrD,IACI,CAAC,KAAI,CAAC,SAAS;gBACf,KAAI,CAAC,eAAe;gBACpB,KAAI,CAAC,eAAe,CAAC,OAAO,EAAE;gBAC9B,SAAC,CAAC,SAAS,CAAC,KAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAqB,CAAC,EACxC;gBACE,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,SAAS,EAAE,UAAC,CAAgB;YACtD,QAAQ,CAAC,CAAC,OAAO,EAAE;gBACf,KAAK,qBAAS,CAAC,MAAM,CAAC;gBACtB,KAAK,qBAAS,CAAC,QAAQ,CAAC;gBACxB,KAAK,qBAAS,CAAC,SAAS,CAAC;gBACzB,KAAK,qBAAS,CAAC,SAAS;oBACpB,YAAY,EAAE,CAAC;gBACnB,KAAK,qBAAS,CAAC,UAAU;oBACrB,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,MAAM;aACb;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAC9D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAE5D,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC;SAC9F;IACL,CAAC;IAEM,qCAAa,GAApB,UAAqB,KAAsB;QACvC,SAAC,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,2CAAmB,GAA1B;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IA7DgC;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;6DAAgD;IAEzD;QAAtB,kCAAW,CAAC,QAAQ,CAAC;iDAA+B;IAC5B;QAAxB,kCAAW,CAAC,UAAU,CAAC;mDAAiC;IAC3B;QAA7B,kCAAW,CAAC,eAAe,CAAC;wDAA4B;IACnC;QAArB,kCAAW,CAAC,OAAO,CAAC;gDAAkC;IAyD3D,oBAAC;CA/ED,AA+EC,CA/EiD,iCAAe,GA+EhE;AA/EqB,sCAAa","file":"agPickerField.js","sourcesContent":["import { AgAbstractField } from \"./agAbstractField\";\nimport { Autowired } from \"../context/context\";\nimport { Component } from \"./component\";\nimport { Constants } from \"../constants\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { RefSelector } from \"./componentAnnotations\";\nimport { _ } from \"../utils\";\n\nexport abstract class AgPickerField<T, K> extends AgAbstractField<K> {\n    protected TEMPLATE = /* html */\n        `<div class=\"ag-picker-field\" role=\"presentation\">\n            <label ref=\"eLabel\"></label>\n            <div ref=\"eWrapper\" class=\"ag-wrapper ag-picker-field-wrapper\" tabIndex=\"-1\">\n                <%displayField% ref=\"eDisplayField\" class=\"ag-picker-field-display\"></%displayField%>\n                <div ref=\"eIcon\" class=\"ag-picker-field-icon\"></div>\n            </div>\n        </div>`;\n\n    protected abstract showPicker(): Component;\n    protected abstract pickerIcon: string;\n    protected value: K;\n    protected isDestroyingPicker: boolean = false;\n    private skipClick: boolean = false;\n    private pickerComponent: Component;\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n\n    @RefSelector('eLabel') protected eLabel: HTMLElement;\n    @RefSelector('eWrapper') protected eWrapper: HTMLElement;\n    @RefSelector('eDisplayField') protected eDisplayField: T;\n    @RefSelector('eIcon') private eIcon: HTMLButtonElement;\n\n    protected postConstruct() {\n        super.postConstruct();\n\n        const clickHandler = () => {\n            if (this.skipClick) {\n                this.skipClick = false;\n                return;\n            }\n            if (this.isDisabled()) { return; }\n            this.pickerComponent = this.showPicker();\n        };\n\n        const eGui = this.getGui();\n\n        this.addManagedListener(eGui, 'mousedown', (e: MouseEvent) => {\n            if (\n                !this.skipClick &&\n                this.pickerComponent &&\n                this.pickerComponent.isAlive() &&\n                _.isVisible(this.pickerComponent.getGui()) &&\n                eGui.contains(e.target as HTMLElement)\n            ) {\n                this.skipClick = true;\n            }\n        });\n\n        this.addManagedListener(eGui, 'keydown', (e: KeyboardEvent) => {\n            switch (e.keyCode) {\n                case Constants.KEY_UP:\n                case Constants.KEY_DOWN:\n                case Constants.KEY_ENTER:\n                case Constants.KEY_SPACE:\n                    clickHandler();\n                case Constants.KEY_ESCAPE:\n                    e.preventDefault();\n                    break;\n            }\n        });\n\n        this.addManagedListener(this.eWrapper, 'click', clickHandler);\n        this.addManagedListener(this.eLabel, 'click', clickHandler);\n\n        if (this.pickerIcon) {\n            this.eIcon.appendChild(_.createIconNoSpan(this.pickerIcon, this.gridOptionsWrapper, null));\n        }\n    }\n\n    public setInputWidth(width: number | 'flex'): this {\n        _.setElementWidth(this.eWrapper, width);\n        return this;\n    }\n\n    public getFocusableElement(): HTMLElement {\n        return this.eWrapper;\n    }\n}\n"]}