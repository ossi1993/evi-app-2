{"version":3,"sources":["../../src/ts/widgets/managedFocusComponent.ts"],"names":[],"mappings":"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","file":"managedFocusComponent.js","sourcesContent":["import { PostConstruct, Autowired } from \"../context/context\";\nimport { Component } from \"./component\";\nimport { Constants } from \"../constants\";\nimport { FocusController } from \"../focusController\";\nimport { _ } from \"../utils\";\n\n/**\n * This provides logic to override the default browser focus logic.\n *\n * When the component gets focus, it uses the grid logic to find out what should be focused,\n * and then focuses that instead.\n *\n * This is how we ensure when user tabs into the relevant section, we focus the correct item.\n * For example GridCore extends ManagedFocusComponent, and it ensures when it receives focus\n * that focus goes to the first cell of the first header row.\n */\nexport class ManagedFocusComponent extends Component {\n\n    protected onTabKeyDown?(e: KeyboardEvent): void;\n    protected handleKeyDown?(e: KeyboardEvent): void;\n\n    public static FOCUS_MANAGED_CLASS = 'ag-focus-managed';\n    private topTabGuard: HTMLElement;\n    private bottomTabGuard: HTMLElement;\n    private skipTabGuardFocus:boolean = false;\n\n    @Autowired('focusController') protected focusController: FocusController;\n\n    @PostConstruct\n    protected postConstruct(): void {\n        const focusableElement = this.getFocusableElement();\n        if (!focusableElement) { return; }\n\n        this.wireFocusManagement();\n    }\n\n    protected wireFocusManagement() {\n        const focusableElement = this.getFocusableElement();\n\n        _.addCssClass(focusableElement, ManagedFocusComponent.FOCUS_MANAGED_CLASS);\n\n        if (this.isFocusableContainer()) {\n            this.topTabGuard = this.createTabGuard('top');\n            this.bottomTabGuard = this.createTabGuard('bottom');\n            this.addTabGuards();\n            this.activateTabGuards();\n            this.forEachTabGuard(tabGuards => {\n                this.addManagedListener(tabGuards, 'focus', this.onFocus.bind(this));\n            });\n        }\n\n        if (this.onTabKeyDown || this.handleKeyDown) {\n            this.addKeyDownListeners(focusableElement);\n        }\n\n        this.addManagedListener(focusableElement, 'focusin', this.onFocusIn.bind(this));\n        this.addManagedListener(focusableElement, 'focusout', this.onFocusOut.bind(this));\n    }\n\n    /*\n     * Override this method to return true if this component will contain multiple focus-managed\n     * elements within. When set to true, this component will add tabGuards that will be responsible\n     * for receiving focus from outside and focusing an internal element using the focusInnerElementMethod\n     */\n    protected isFocusableContainer(): boolean {\n        return false;\n    }\n\n    /*\n     * Override this method if focusing the default element requires special logic.\n     */\n    protected focusInnerElement(fromBottom?: boolean): void {\n        const focusable = this.focusController.findFocusableElements(this.getFocusableElement(), '.ag-tab-guard, :not([tabindex=\"-1\"])');\n\n        if (!focusable.length) { return; }\n\n        focusable[fromBottom ? focusable.length - 1 : 0].focus();\n    }\n\n    protected onFocusIn(e: FocusEvent): void {\n        if (!this.isFocusableContainer()) { return; }\n\n        this.deactivateTabGuards();\n    }\n\n    protected onFocusOut(e: FocusEvent): void {\n        if (!this.isFocusableContainer()) { return; }\n\n        const focusEl = this.getFocusableElement();\n\n        if (!focusEl.contains(e.relatedTarget as HTMLElement)) {\n            this.activateTabGuards();\n        }\n    }\n\n    public forceFocusOutOfContainer(): void {\n        this.activateTabGuards();\n\n        this.skipTabGuardFocus = true;\n        this.bottomTabGuard.focus();\n\n    }\n\n    public appendChild(newChild: HTMLElement | Component, container?: HTMLElement): void {\n        if (!this.isFocusableContainer()) {\n            super.appendChild(newChild, container);\n        } else {\n            if (!_.isNodeOrElement(newChild)) {\n                newChild = (newChild as Component).getGui();\n            }\n\n            const bottomTabGuard = this.bottomTabGuard;\n\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', newChild as HTMLElement);\n            } else {\n                super.appendChild(newChild, container);\n            }\n        }\n    }\n\n    private createTabGuard(side: 'top' | 'bottom'): HTMLElement {\n        const tabGuard = document.createElement('div');\n        tabGuard.classList.add('ag-tab-guard');\n        tabGuard.classList.add(`ag-tab-guard-${side}`);\n\n        return tabGuard as HTMLElement;\n    }\n\n    private addTabGuards(): void {\n        const focusableEl = this.getFocusableElement();\n        focusableEl.insertAdjacentElement('afterbegin', this.topTabGuard);\n        focusableEl.insertAdjacentElement('beforeend', this.bottomTabGuard);\n    }\n\n    private forEachTabGuard(callback: (tabGuard: HTMLElement) => void) {\n        [this.topTabGuard, this.bottomTabGuard].forEach(callback);\n    }\n\n    private addKeyDownListeners(eGui: HTMLElement): void {\n        this.addManagedListener(eGui, 'keydown', (e: KeyboardEvent) => {\n            if (e.defaultPrevented) { return; }\n\n            if (e.keyCode === Constants.KEY_TAB && this.onTabKeyDown) {\n                this.onTabKeyDown(e);\n            } else if (this.handleKeyDown) {\n                this.handleKeyDown(e);\n            }\n        });\n    }\n\n    private onFocus(e: FocusEvent): void {\n        if (!this.isFocusableContainer()) { return; }\n        if (this.skipTabGuardFocus) {\n            this.skipTabGuardFocus = false;\n            return;\n        }\n\n        this.focusInnerElement(e.target === this.bottomTabGuard);\n    }\n\n    private activateTabGuards(): void {\n        this.forEachTabGuard(tabGuard => tabGuard.setAttribute('tabIndex', '0'));\n    }\n\n    private deactivateTabGuards(): void {\n        this.forEachTabGuard(tabGuards => tabGuards.removeAttribute('tabindex'));\n    }\n}\n"]}