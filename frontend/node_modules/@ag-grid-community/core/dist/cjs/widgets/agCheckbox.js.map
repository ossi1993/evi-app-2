{"version":3,"sources":["../../src/ts/widgets/agCheckbox.ts"],"names":[],"mappings":"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","file":"agCheckbox.js","sourcesContent":["import { Autowired } from '../context/context';\nimport { Events, CheckboxChangedEvent } from \"../events\";\nimport { GridOptionsWrapper } from '../gridOptionsWrapper';\nimport { AgEvent } from '../events';\nimport { AgAbstractInputField } from './agAbstractInputField';\nimport { LabelAlignment } from './agAbstractLabel';\nimport { _ } from '../utils';\n\nexport interface ChangeEvent extends AgEvent {\n    selected: boolean;\n}\n\nexport class AgCheckbox extends AgAbstractInputField<HTMLInputElement, boolean> {\n    protected className = 'ag-checkbox';\n    protected displayTag = 'input';\n    protected inputType = 'checkbox';\n    protected labelAlignment: LabelAlignment = 'right';\n\n    @Autowired('gridOptionsWrapper') protected gridOptionsWrapper: GridOptionsWrapper;\n\n    private selected: boolean | undefined = false;\n    private readOnly = false;\n    private passive = false;\n\n    constructor() {\n        super();\n        this.setTemplate(this.TEMPLATE.replace(/%displayField%/g, this.displayTag));\n    }\n\n    protected addInputListeners() {\n        this.addManagedListener(this.eInput, 'click', this.onCheckboxClick.bind(this));\n    }\n\n    public getNextValue(): boolean {\n        return this.selected === undefined ? true : !this.selected;\n    }\n\n    public setPassive(passive: boolean): void {\n        this.passive = passive;\n    }\n\n    public isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    public setReadOnly(readOnly: boolean): void {\n        _.addOrRemoveCssClass(this.eWrapper, 'ag-disabled', readOnly);\n        this.eInput.disabled = readOnly;\n        this.readOnly = readOnly;\n    }\n\n    public setDisabled(disabled: boolean): this {\n        _.addOrRemoveCssClass(this.eWrapper, 'ag-disabled', disabled);\n\n        return super.setDisabled(disabled);\n    }\n\n    public toggle(): void {\n        const nextValue = this.getNextValue();\n\n        if (this.passive) {\n            this.dispatchChange(nextValue);\n        } else {\n            this.setValue(nextValue);\n        }\n    }\n\n    public getValue(): boolean {\n        return this.isSelected();\n    }\n\n    public setValue(value: boolean | undefined, silent?: boolean): this {\n        this.refreshSelectedClass(value);\n        this.setSelected(value, silent);\n\n        return this;\n    }\n\n    public setName(name: string): this {\n        const input = this.getInputElement() as HTMLInputElement;\n        input.name = name;\n\n        return this;\n    }\n\n    protected isSelected(): boolean {\n        return this.selected;\n    }\n\n    private setSelected(selected?: boolean, silent?: boolean): void {\n        if (this.isSelected() === selected) {\n            return;\n        }\n\n        this.selected = typeof selected === 'boolean' ? selected : undefined;\n        (this.eInput as HTMLInputElement).checked = this.selected;\n        (this.eInput as HTMLInputElement).indeterminate = this.selected === undefined;\n\n        if (!silent) {\n            this.dispatchChange(this.selected);\n        }\n    }\n\n    protected dispatchChange(selected?: boolean, event?: MouseEvent) {\n        this.dispatchEvent({ type: AgCheckbox.EVENT_CHANGED, selected, event });\n\n        const input = this.getInputElement() as HTMLInputElement;\n        const checkboxChangedEvent: CheckboxChangedEvent = {\n            type: Events.EVENT_CHECKBOX_CHANGED,\n            id: input.id,\n            name: input.name,\n            selected\n        };\n\n        this.eventService.dispatchEvent(checkboxChangedEvent);\n    }\n\n    private onCheckboxClick(e: MouseEvent) {\n        this.selected = (e.target as HTMLInputElement).checked;\n        this.refreshSelectedClass(this.selected);\n        this.dispatchChange(this.selected, e);\n    }\n\n    private refreshSelectedClass(value?: boolean | null) {\n        _.addOrRemoveCssClass(this.eWrapper, 'ag-checked', value === true);\n        _.addOrRemoveCssClass(this.eWrapper, 'ag-indeterminate', value == null);\n    }\n}\n"]}