{"version":3,"sources":["../../src/ts/widgets/tooltipFeature.ts"],"names":[],"mappings":"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","file":"tooltipFeature.js","sourcesContent":["import { Autowired, PostConstruct } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { ColumnApi } from \"../columnController/columnApi\";\nimport { Component } from \"./component\";\nimport { ColDef } from \"../entities/colDef\";\nimport { Column } from \"../entities/column\";\nimport { ColumnGroup } from \"../entities/columnGroup\";\nimport { CellPosition } from \"../entities/cellPosition\";\nimport { GridApi } from \"../gridApi\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { ITooltipComp, ITooltipParams } from \"../rendering/tooltipComponent\";\nimport { PopupService } from \"./popupService\";\nimport { UserComponentFactory } from \"../components/framework/userComponentFactory\";\nimport { _ } from \"../utils\";\n\nexport interface TooltipParentComp extends Component {\n    getTooltipText(): string;\n    getComponentHolder(): ColDef | undefined;\n    getColumn?(): Column | ColumnGroup;\n    getCellPosition?(): CellPosition;\n}\n\nenum TooltipStates { NOTHING, WAITING_TO_SHOW, SHOWING }\n\nexport class TooltipFeature extends BeanStub {\n\n    private readonly DEFAULT_HIDE_TOOLTIP_TIMEOUT = 10000;\n    private readonly SHOW_QUICK_TOOLTIP_DIFF = 1000;\n    private readonly FADE_OUT_TOOLTIP_TIMEOUT = 1000;\n\n    // different instances of tooltipFeature use this to see when the\n    // last tooltip was hidden.\n    private static lastTooltipHideTime: number;\n\n    @Autowired('popupService') private popupService: PopupService;\n    @Autowired('userComponentFactory') private userComponentFactory: UserComponentFactory;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n\n    private readonly location: string;\n\n    private tooltipShowDelay: number;\n\n    private parentComp: TooltipParentComp;\n\n    private showTooltipTimeoutId: number;\n    private hideTooltipTimeoutId: number;\n\n    private state = TooltipStates.NOTHING;\n\n    private lastMouseEvent: MouseEvent;\n\n    private tooltipComp: ITooltipComp;\n    private tooltipPopupDestroyFunc: () => void;\n    // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\n    // async we could request two tooltips before the first instance returns, in which case we should\n    // disregard the second instance.\n    private tooltipInstanceCount = 0;\n\n    private tooltipMouseTrack: boolean = false;\n\n    constructor(parentComp: TooltipParentComp, location: string) {\n        super();\n        this.parentComp = parentComp;\n        this.location = location;\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.tooltipShowDelay = this.gridOptionsWrapper.getTooltipShowDelay() || 2000;\n        this.tooltipMouseTrack = this.gridOptionsWrapper.isTooltipMouseTrack();\n\n        const el = this.parentComp.getGui();\n\n        this.addManagedListener(el, 'mouseenter', this.onMouseEnter.bind(this));\n        this.addManagedListener(el, 'mouseleave', this.onMouseLeave.bind(this));\n        this.addManagedListener(el, 'mousemove', this.onMouseMove.bind(this));\n        this.addManagedListener(el, 'mousedown', this.onMouseDown.bind(this));\n    }\n\n    protected destroy(): void {\n        // if this component gets destroyed while tooltip is showing, need to make sure\n        // we don't end with no mouseLeave event resulting in zombie tooltip\n        this.setToDoNothing();\n        super.destroy();\n    }\n\n    public onMouseEnter(e: MouseEvent): void {\n        // if another tooltip was hidden very recently, we only wait 200ms to show, not the normal waiting time\n        const delay = this.isLastTooltipHiddenRecently() ? 200 : this.tooltipShowDelay;\n\n        this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\n        this.lastMouseEvent = e;\n        this.state = TooltipStates.WAITING_TO_SHOW;\n    }\n\n    public onMouseLeave(): void {\n        this.setToDoNothing();\n    }\n\n    private setToDoNothing(): void {\n        if (this.state === TooltipStates.SHOWING) {\n            this.hideTooltip();\n        }\n\n        this.clearTimeouts();\n\n        this.state = TooltipStates.NOTHING;\n    }\n\n    public onMouseMove(e: MouseEvent): void {\n        // there is a delay from the time we mouseOver a component and the time the\n        // tooltip is displayed, so we need to track mousemove to be able to correctly\n        // position the tooltip when showTooltip is called.\n        this.lastMouseEvent = e;\n\n        if (\n            this.tooltipMouseTrack &&\n            this.state === TooltipStates.SHOWING &&\n            this.tooltipComp\n        ) {\n            this.positionTooltipUnderLastMouseEvent();\n        }\n    }\n\n    public onMouseDown(): void {\n        this.setToDoNothing();\n    }\n\n    private hideTooltip(): void {\n        // check if comp exists - due to async, although we asked for\n        // one, the instance may not be back yet\n        if (this.tooltipComp) {\n            this.destroyTooltipComp();\n            TooltipFeature.lastTooltipHideTime = new Date().getTime();\n        }\n\n        this.state = TooltipStates.NOTHING;\n    }\n\n    private destroyTooltipComp(): void {\n        // add class to fade out the tooltip\n        _.addCssClass(this.tooltipComp.getGui(), 'ag-tooltip-hiding');\n\n        // make local copies of these variables, as we use them in the async function below,\n        // and we clear then to 'undefined' later, so need to take a copy before they are undefined.\n        const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\n        const tooltipComp = this.tooltipComp;\n\n        window.setTimeout(() => {\n            tooltipPopupDestroyFunc();\n            this.getContext().destroyBean(tooltipComp);\n        }, this.FADE_OUT_TOOLTIP_TIMEOUT);\n\n        this.tooltipPopupDestroyFunc = undefined;\n        this.tooltipComp = undefined;\n    }\n\n    private isLastTooltipHiddenRecently(): boolean {\n        // return true if <1000ms since last time we hid a tooltip\n        const now = new Date().getTime();\n        const then = TooltipFeature.lastTooltipHideTime;\n\n        return (now - then) < this.SHOW_QUICK_TOOLTIP_DIFF;\n    }\n\n    private showTooltip(): void {\n        const tooltipText = this.parentComp.getTooltipText();\n\n        if (!tooltipText) {\n            this.setToDoNothing();\n            return;\n        }\n\n        this.state = TooltipStates.SHOWING;\n        this.tooltipInstanceCount++;\n\n        const params: ITooltipParams = {\n            location: this.location,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            colDef: this.parentComp.getComponentHolder(),\n            column: this.parentComp.getColumn,\n            context: this.gridOptionsWrapper.getContext(),\n            rowIndex: this.parentComp.getCellPosition && this.parentComp.getCellPosition().rowIndex,\n            value: tooltipText\n        };\n\n        // we pass in tooltipInstanceCount so the callback knows what the count was when\n        // we requested the tooltip, so if another tooltip was requested in the mean time\n        // we disregard it\n        const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\n\n        this.userComponentFactory.newTooltipComponent(params).then(callback);\n    }\n\n    private newTooltipComponentCallback(tooltipInstanceCopy: number, tooltipComp: ITooltipComp): void {\n        const compNoLongerNeeded = this.state !== TooltipStates.SHOWING || this.tooltipInstanceCount !== tooltipInstanceCopy;\n\n        if (compNoLongerNeeded) {\n            this.getContext().destroyBean(tooltipComp);\n            return;\n        }\n\n        const eGui = tooltipComp.getGui();\n\n        this.tooltipComp = tooltipComp;\n\n        if (!_.containsClass(eGui, 'ag-tooltip')) {\n            _.addCssClass(eGui, 'ag-tooltip-custom');\n        }\n\n        this.tooltipPopupDestroyFunc = this.popupService.addPopup(false, eGui, false);\n        this.positionTooltipUnderLastMouseEvent();\n        this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.DEFAULT_HIDE_TOOLTIP_TIMEOUT);\n    }\n\n    private positionTooltipUnderLastMouseEvent(): void {\n        this.popupService.positionPopupUnderMouseEvent({\n            type: 'tooltip',\n            mouseEvent: this.lastMouseEvent,\n            ePopup: this.tooltipComp.getGui(),\n            nudgeY: 18\n        });\n    }\n\n    private clearTimeouts(): void {\n        if (this.showTooltipTimeoutId) {\n            window.clearTimeout(this.showTooltipTimeoutId);\n            this.showTooltipTimeoutId = undefined;\n        }\n\n        if (this.hideTooltipTimeoutId) {\n            window.clearTimeout(this.hideTooltipTimeoutId);\n            this.hideTooltipTimeoutId = undefined;\n        }\n    }\n}\n"]}