{"version":3,"sources":["../../src/ts/widgets/agInputTextArea.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,+DAA2E;AAE3E;IAAqC,mCAAiD;IAQlF,yBAAY,MAAoB;QAAhC,YACI,iBAAO,SAOV;QAdS,eAAS,GAAG,cAAc,CAAC;QAC3B,gBAAU,GAAG,UAAU,CAAC;QACxB,eAAS,GAAG,EAAE,CAAC;QAOrB,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5E,IAAI,MAAM,EAAE;YACR,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;;IACL,CAAC;IAEM,kCAAQ,GAAf,UAAgB,KAAa,EAAE,MAAgB;QAC3C,IAAM,GAAG,GAAG,iBAAM,QAAQ,YAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAE1C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAE1B,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,iCAAO,GAAd,UAAe,IAAY;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QAExB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,iCAAO,GAAd,UAAe,IAAY;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QAExB,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,sBAAC;AAAD,CArCA,AAqCC,CArCoC,2CAAoB,GAqCxD;AArCY,0CAAe","file":"agInputTextArea.js","sourcesContent":["import { AgAbstractInputField, IInputField } from \"./agAbstractInputField\";\n\nexport class AgInputTextArea extends AgAbstractInputField<HTMLTextAreaElement, string> {\n\n    protected className = 'ag-text-area';\n    protected displayTag = 'textarea';\n    protected inputType = '';\n\n    protected config: IInputField;\n\n    constructor(config?: IInputField) {\n        super();\n\n        this.setTemplate(this.TEMPLATE.replace(/%displayField%/g, this.displayTag));\n\n        if (config) {\n            this.config = config;\n        }\n    }\n\n    public setValue(value: string, silent?: boolean): this {\n        const ret = super.setValue(value, silent);\n\n        this.eInput.value = value;\n\n        return ret;\n    }\n\n    public setCols(cols: number): this {\n        this.eInput.cols = cols;\n\n        return this;\n    }\n\n    public setRows(rows: number): this {\n        this.eInput.rows = rows;\n\n        return this;\n    }\n}"]}