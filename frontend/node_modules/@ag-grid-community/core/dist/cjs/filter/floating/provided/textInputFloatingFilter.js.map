{"version":3,"sources":["../../src/ts/filter/floating/provided/textInputFloatingFilter.ts"],"names":[],"mappings":"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","file":"textInputFloatingFilter.js","sourcesContent":["import { IFloatingFilterParams } from '../floatingFilter';\nimport { RefSelector } from '../../../widgets/componentAnnotations';\nimport { ProvidedFilterModel } from '../../../interfaces/iFilter';\nimport { debounce } from '../../../utils/function';\nimport { Constants } from '../../../constants';\nimport { ProvidedFilter } from '../../provided/providedFilter';\nimport { PostConstruct, Autowired } from '../../../context/context';\nimport { SimpleFloatingFilter } from './simpleFloatingFilter';\nimport { ISimpleFilterModel, SimpleFilter } from '../../provided/simpleFilter';\nimport { FilterChangedEvent } from '../../../events';\nimport { AgInputTextField } from '../../../widgets/agInputTextField';\nimport { isKeyPressed } from '../../../utils/keyboard';\nimport { ColumnController } from '../../../columnController/columnController';\n\nexport abstract class TextInputFloatingFilter extends SimpleFloatingFilter {\n    @Autowired('columnController') private columnController: ColumnController;\n    @RefSelector('eFloatingFilterInput') private eFloatingFilterInput: AgInputTextField;\n\n    protected params: IFloatingFilterParams;\n\n    private applyActive: boolean;\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.setTemplate(/* html */`\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field ref=\"eFloatingFilterInput\"></ag-input-text-field>\n            </div>`);\n    }\n\n    protected getDefaultDebounceMs(): number {\n        return 500;\n    }\n\n    public onParentModelChanged(model: ProvidedFilterModel, event: FilterChangedEvent): void {\n        // we don't want to update the floating filter if the floating filter caused the change.\n        // as if it caused the change, the ui is already in sync. if we didn't do this, the UI\n        // would behave strange as it would be updating as the user is typing\n        if (this.isEventFromFloatingFilter(event)) { return; }\n\n        this.setLastTypeFromModel(model);\n        const modelString = this.getTextFromModel(model);\n        this.eFloatingFilterInput.setValue(modelString);\n        const editable = this.canWeEditAfterModelFromParentFilter(model);\n        this.setEditable(editable);\n    }\n\n    public init(params: IFloatingFilterParams): void {\n        super.init(params);\n        this.params = params;\n\n        this.applyActive = ProvidedFilter.isUseApplyButton(this.params.filterParams);\n        const debounceMs = ProvidedFilter.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n\n        const toDebounce: () => void = debounce(this.syncUpWithParentFilter.bind(this), debounceMs);\n        const filterGui = this.eFloatingFilterInput.getGui();\n\n        this.addManagedListener(filterGui, 'input', toDebounce);\n        this.addManagedListener(filterGui, 'keypress', toDebounce);\n        this.addManagedListener(filterGui, 'keydown', toDebounce);\n\n        const columnDef = (params.column.getDefinition() as any);\n\n        if (columnDef.filterParams &&\n            columnDef.filterParams.filterOptions &&\n            columnDef.filterParams.filterOptions.length === 1 &&\n            columnDef.filterParams.filterOptions[0] === 'inRange') {\n            this.eFloatingFilterInput.setDisabled(true);\n        }\n\n        const displayName = this.columnController.getDisplayNameForColumn(params.column, 'header', true);\n        this.eFloatingFilterInput.setInputAriaLabel(`${displayName} Filter Input`);\n    }\n\n    private syncUpWithParentFilter(e: KeyboardEvent): void {\n        const value = this.eFloatingFilterInput.getValue();\n        const enterKeyPressed = isKeyPressed(e, Constants.KEY_ENTER);\n\n        if (this.applyActive && !enterKeyPressed) { return; }\n\n        this.params.parentFilterInstance(filterInstance => {\n            if (filterInstance) {\n                const simpleFilter = filterInstance as SimpleFilter<ISimpleFilterModel>;\n                simpleFilter.onFloatingFilterChanged(this.getLastType(), value);\n            }\n        });\n    }\n\n    protected setEditable(editable: boolean): void {\n        this.eFloatingFilterInput.setDisabled(!editable);\n    }\n}\n"]}