{"version":3,"sources":["../../src/ts/filter/provided/number/numberFilter.ts"],"names":[],"mappings":"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","file":"numberFilter.js","sourcesContent":["import { RefSelector } from '../../../widgets/componentAnnotations';\nimport { Promise } from '../../../utils';\nimport { SimpleFilter, ConditionPosition, ISimpleFilterModel } from '../simpleFilter';\nimport { ScalarFilter, Comparator, IScalarFilterParams } from '../scalarFilter';\nimport { AgInputNumberField } from '../../../widgets/agInputNumberField';\nimport { IAfterGuiAttachedParams } from '../../../interfaces/iAfterGuiAttachedParams';\nimport { makeNull } from '../../../utils/generic';\nimport { setDisplayed } from '../../../utils/dom';\n\nexport interface NumberFilterModel extends ISimpleFilterModel {\n    filter?: number;\n    filterTo?: number;\n}\n\nexport interface INumberFilterParams extends IScalarFilterParams {\n}\n\nexport class NumberFilter extends ScalarFilter<NumberFilterModel, number> {\n\n    private static readonly FILTER_TYPE = 'number';\n\n    public static DEFAULT_FILTER_OPTIONS = [\n        ScalarFilter.EQUALS,\n        ScalarFilter.NOT_EQUAL,\n        ScalarFilter.LESS_THAN,\n        ScalarFilter.LESS_THAN_OR_EQUAL,\n        ScalarFilter.GREATER_THAN,\n        ScalarFilter.GREATER_THAN_OR_EQUAL,\n        ScalarFilter.IN_RANGE\n    ];\n\n    @RefSelector('eValueFrom1') private eValueFrom1: AgInputNumberField;\n    @RefSelector('eValueFrom2') private eValueFrom2: AgInputNumberField;\n\n    @RefSelector('eValueTo1') private eValueTo1: AgInputNumberField;\n    @RefSelector('eValueTo2') private eValueTo2: AgInputNumberField;\n\n    protected mapRangeFromModel(filterModel: NumberFilterModel): { from: number, to: number; } {\n        return {\n            from: filterModel.filter,\n            to: filterModel.filterTo\n        };\n    }\n\n    protected getDefaultDebounceMs(): number {\n        return 500;\n    }\n\n    protected resetUiToDefaults(silent?: boolean): Promise<void> {\n        return super.resetUiToDefaults(silent).then(() => {\n            const fields = [this.eValueFrom1, this.eValueFrom2, this.eValueTo1, this.eValueTo2];\n\n            fields.forEach(field => field.setValue(null, silent));\n\n            this.resetPlaceholder();\n        });\n    }\n\n    protected setConditionIntoUi(model: NumberFilterModel, position: ConditionPosition): void {\n        const positionOne = position === ConditionPosition.One;\n        const eValueFrom = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n\n        eValueFrom.setValue(model ? ('' + model.filter) : null);\n        eValueTo.setValue(model ? ('' + model.filterTo) : null);\n    }\n\n    protected setValueFromFloatingFilter(value: string): void {\n        this.eValueFrom1.setValue(value);\n        this.eValueFrom2.setValue(null);\n        this.eValueTo1.setValue(null);\n        this.eValueTo2.setValue(null);\n    }\n\n    protected comparator(): Comparator<number> {\n        return (left: number, right: number): number => {\n            if (left === right) { return 0; }\n            if (left < right) { return 1; }\n\n            return -1;\n        };\n    }\n\n    protected setParams(params: INumberFilterParams): void {\n        super.setParams(params);\n\n        this.addValueChangedListeners();\n    }\n\n    private addValueChangedListeners(): void {\n        const listener = () => this.onUiChanged();\n\n        this.eValueFrom1.onValueChange(listener);\n        this.eValueFrom2.onValueChange(listener);\n        this.eValueTo1.onValueChange(listener);\n        this.eValueTo2.onValueChange(listener);\n    }\n\n    private resetPlaceholder(): void {\n        const isRange1 = this.getCondition1Type() === ScalarFilter.IN_RANGE;\n        const isRange2 = this.getCondition2Type() === ScalarFilter.IN_RANGE;\n\n        this.eValueFrom1.setInputPlaceholder(this.translate(isRange1 ? 'inRangeStart' : 'filterOoo'));\n        this.eValueTo1.setInputPlaceholder(this.translate(isRange1 ? 'inRangeEnd' : 'filterOoo'));\n\n        this.eValueFrom2.setInputPlaceholder(this.translate(isRange2 ? 'inRangeStart' : 'filterOoo'));\n        this.eValueTo2.setInputPlaceholder(this.translate(isRange2 ? 'inRangeEnd' : 'filterOoo'));\n    }\n\n    public afterGuiAttached(params: IAfterGuiAttachedParams): void {\n        super.afterGuiAttached(params);\n\n        this.resetPlaceholder();\n        this.eValueFrom1.getInputElement().focus();\n    }\n\n    protected getDefaultFilterOptions(): string[] {\n        return NumberFilter.DEFAULT_FILTER_OPTIONS;\n    }\n\n    protected createValueTemplate(position: ConditionPosition): string {\n        const positionOne = position === ConditionPosition.One;\n        const pos = positionOne ? '1' : '2';\n\n        return `<div class=\"ag-filter-body\" ref=\"eCondition${pos}Body\" role=\"presentation\">\n                    <ag-input-number-field class=\"ag-filter-from ag-filter-filter\" ref=\"eValueFrom${pos}\"></ag-input-number-field>\n                    <ag-input-number-field class=\"ag-filter-to ag-filter-filter\" ref=\"eValueTo${pos}\"></ag-input-number-field>\n                </div>`;\n    }\n\n    protected isConditionUiComplete(position: ConditionPosition): boolean {\n        const positionOne = position === ConditionPosition.One;\n        const option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        const eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n\n        const value = this.stringToFloat(eValue.getValue());\n        const valueTo = this.stringToFloat(eValueTo.getValue());\n\n        if (option === SimpleFilter.EMPTY) { return false; }\n\n        if (this.doesFilterHaveHiddenInput(option)) {\n            return true;\n        }\n\n        if (option === SimpleFilter.IN_RANGE) {\n            return value != null && valueTo != null;\n        }\n\n        return value != null;\n    }\n\n    protected areSimpleModelsEqual(aSimple: NumberFilterModel, bSimple: NumberFilterModel): boolean {\n        return aSimple.filter === bSimple.filter\n            && aSimple.filterTo === bSimple.filterTo\n            && aSimple.type === bSimple.type;\n    }\n\n    // needed for creating filter model\n    protected getFilterType(): string {\n        return NumberFilter.FILTER_TYPE;\n    }\n\n    private stringToFloat(value: string | number): number {\n        if (typeof value === 'number') {\n            return value;\n        }\n\n        let filterText = makeNull(value);\n\n        if (filterText && filterText.trim() === '') {\n            filterText = null;\n        }\n\n        let newFilter: number;\n\n        if (filterText !== null && filterText !== undefined) {\n            newFilter = parseFloat(filterText);\n        } else {\n            newFilter = null;\n        }\n\n        return newFilter;\n    }\n\n    protected createCondition(position: ConditionPosition): NumberFilterModel {\n        const positionOne = position === ConditionPosition.One;\n        const type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        const eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const value = this.stringToFloat(eValue.getValue());\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n        const valueTo = this.stringToFloat(eValueTo.getValue());\n        const model: NumberFilterModel = {\n            filterType: NumberFilter.FILTER_TYPE,\n            type: type\n        };\n\n        if (!this.doesFilterHaveHiddenInput(type)) {\n            model.filter = value;\n            model.filterTo = valueTo; // FIX - should only populate this when filter choice has 'to' option\n        }\n\n        return model;\n    }\n\n    protected updateUiVisibility(): void {\n        super.updateUiVisibility();\n\n        this.resetPlaceholder();\n\n        const showFrom1 = this.showValueFrom(this.getCondition1Type());\n        setDisplayed(this.eValueFrom1.getGui(), showFrom1);\n\n        const showTo1 = this.showValueTo(this.getCondition1Type());\n        setDisplayed(this.eValueTo1.getGui(), showTo1);\n\n        const showFrom2 = this.showValueFrom(this.getCondition2Type());\n        setDisplayed(this.eValueFrom2.getGui(), showFrom2);\n\n        const showTo2 = this.showValueTo(this.getCondition2Type());\n        setDisplayed(this.eValueTo2.getGui(), showTo2);\n    }\n}"]}