{"version":3,"sources":["../../src/ts/interfaces/iClientSideRowModel.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"iClientSideRowModel.js","sourcesContent":["import { IRowModel } from './iRowModel';\nimport { RowNodeTransaction } from './rowNodeTransaction';\nimport { RowDataTransaction } from './rowDataTransaction';\nimport { RefreshModelParams } from './refreshModelParams';\nimport { RowNode } from '../entities/rowNode';\nimport { ChangedPath } from '../utils/changedPath';\n\nexport interface IClientSideRowModel extends IRowModel {\n    updateRowData(rowDataTran: RowDataTransaction, rowNodeOrder?: { [id: string]: number; }): RowNodeTransaction | null;\n    setRowData(rowData: any[]): void;\n    refreshModel(params: RefreshModelParams): void;\n    expandOrCollapseAll(expand: boolean): void;\n    forEachLeafNode(callback: (node: RowNode, index: number) => void): void;\n    forEachNode(callback: (node: RowNode, index: number) => void): void;\n    forEachNodeAfterFilter(callback: (node: RowNode, index: number) => void): void;\n    forEachNodeAfterFilterAndSort(callback: (node: RowNode, index: number) => void): void;\n    resetRowHeights(): void;\n    onRowHeightChanged(): void;\n    batchUpdateRowData(rowDataTransaction: RowDataTransaction, callback?: (res: RowNodeTransaction) => void): void;\n    getRootNode(): RowNode;\n    doAggregate(changedPath?: ChangedPath): void;\n    getTopLevelNodes(): RowNode[] | null;\n    forEachPivotNode(callback: (node: RowNode, index: number) => void): void;\n    ensureRowsAtPixel(rowNode: RowNode[], pixel: number, increment: number): boolean;\n    highlightRowAtPixel(rowNode: RowNode | null, pixel?: number): void;\n    getHighlightPosition(pixel: number, rowNode?: RowNode): 'above' | 'below';\n    getLastHighlightedRowNode(): RowNode | null;\n}\n"]}