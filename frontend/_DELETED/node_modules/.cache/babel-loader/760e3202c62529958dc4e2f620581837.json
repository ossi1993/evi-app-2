{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-templates.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-templates.vue","mtime":1598333437097},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\nexport default {\n  metaInfo: {\n    title: \"Templates\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [ClientSideRowModelModule, SetFilterModule, RichSelectModule, MenuModule, ColumnsToolPanelModule, MasterDetailModule],\n      templates: [],\n      show: false,\n      visible: false,\n      date: null,\n      next: null,\n      error: false\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Model Name\",\n      field: \"txtModelName\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true\n    }, {\n      headerName: \"Manufacturer\",\n      field: \"idManufacturer.txtManufacturerName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Supplier\",\n      field: \"idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    autoSizeAll: function autoSizeAll(skipHeader) {\n      var allColumnIds = [];\n      this.gridColumnApi.getAllColumns().forEach(function (column) {\n        allColumnIds.push(column.colId);\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    },\n    cellValueChanged: function () {\n      var _cellValueChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/model/\".concat(event.node.data.id, \"/\");\n                console.log(event.node.data.id);\n                _context.prev = 2;\n                _context.next = 5;\n                return apiService(endpoint, \"PATCH\", {\n                  txtModelName: event.node.data.txtModelName\n                });\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 7]]);\n      }));\n\n      function cellValueChanged(_x) {\n        return _cellValueChanged.apply(this, arguments);\n      }\n\n      return cellValueChanged;\n    }(),\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    onGridReady: function onGridReady(params) {// this.autoSizeAll(false);\n    },\n    getTemplates: function getTemplates() {\n      var _this = this;\n\n      if (!this.error) {\n        var endpoint = \"/api/device-template/\";\n        apiService(endpoint).then(function (data) {\n          var _this$templates;\n\n          (_this$templates = _this.templates).push.apply(_this$templates, _toConsumableArray(data.results));\n        });\n      }\n    },\n    // addTemplates() {\n    //   if (this.MName) {\n    //     let endpoint = `/api/device-template/`;\n    //     apiService(endpoint, \"POST\", { \n    //       txtModelName: this.MName,\n    //       idManufacturer: this.Manufacturer,\n    //       idSupplier: this.Supplier,\n    //       })\n    //       .then(data => {\n    //         if (data) {\n    //           console.log(data)\n    //           this.models.unshift(data)\n    //         } else {\n    //           this.error = true;\n    //         }\n    //       })\n    //     this.emptyInput();\n    //     if (this.error) {\n    //       this.error = false;\n    //     }\n    //     } else {\n    //       this.error = true;\n    //     }\n    // },\n    openModal: function openModal(params) {\n      var _this2 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Template?\", {\n        title: \"Please Confirm\",\n        size: \"sm\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this2.deleteModel();\n        }\n      });\n    },\n    deleteModel: function () {\n      var _deleteModel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var selectedRows, endpoint, index;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                selectedRows = this.gridApi.getSelectedRows();\n                endpoint = \"/api/device-template/\".concat(selectedRows[0].id, \"/\");\n                _context2.prev = 2;\n                index = this.templates.map(function (e) {\n                  return e.id;\n                }).indexOf(selectedRows[0].id);\n                this.$delete(this.templates, index);\n                _context2.next = 7;\n                return apiService(endpoint, \"DELETE\");\n\n              case 7:\n                this.show = this.show ? false : true;\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10]]);\n      }));\n\n      function deleteModel() {\n        return _deleteModel.apply(this, arguments);\n      }\n\n      return deleteModel;\n    }(),\n    // emptyInput() {\n    //   this.MName = '',\n    //   this.Manufacturer = [],\n    //   this.Supplier = [],\n    //   this.$root.$emit('bv::toggle::collapse', 'collapse-e')\n    // },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    }\n  },\n  created: function created() {\n    this.getTemplates();\n    this.getDateToday();\n  }\n};",null]}