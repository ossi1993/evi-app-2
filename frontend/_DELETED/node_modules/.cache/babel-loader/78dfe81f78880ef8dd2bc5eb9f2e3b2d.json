{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\apps\\createInvoice.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\apps\\createInvoice.vue","mtime":1575914052000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from \"vuex\";\nimport invoice from \"./invoice\";\nexport default {\n  components: {\n    invoice: invoice\n  },\n  data: function data() {\n    var _newInvoice;\n\n    return {\n      orderNumber: 0,\n      subTotal: 0,\n      invoice_subtotal: 0,\n      invoice_total: 0,\n      invoice_tax: 0,\n      newInvoice: (_newInvoice = {\n        billFrom: \"\",\n        billTo: \"\",\n        status: \"\",\n        billFromAddress: \"\",\n        billToAdress: \"\"\n      }, _defineProperty(_newInvoice, \"status\", \"\"), _defineProperty(_newInvoice, \"invoiceId\", \"\"), _defineProperty(_newInvoice, \"date\", null), _newInvoice),\n      name: \"\",\n      fields: [\"index\", \"itemName\", \"unitPrice\", \"unit\", \"cost\", \"action\"],\n      items: [{\n        itemName: \"\",\n        unitPrice: \"\",\n        unit: \"\",\n        cost: 0\n      }]\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions([\"addInvoice\", \"editInvoice\"])), {}, {\n    saveInvoice: function saveInvoice() {\n      this.addInvoice(this.newInvoice); // this.getTodo(this.newInvoice.invoiceId);\n\n      this.$router.push(\"/app/apps/printInvoice\");\n    },\n    backInvoice: function backInvoice() {\n      this.$router.push(\"/app/apps/invoice\");\n    },\n    addNewRow: function addNewRow() {\n      this.items.push({\n        itemName: \"\",\n        unitPrice: \"\",\n        unit: \"\",\n        cost: 0\n      });\n    },\n    invoiceTotal: function invoiceTotal() {\n      var subtotal, total;\n      subtotal = this.items.reduce(function (sum, item) {\n        var cost = parseFloat(item.cost);\n\n        if (!isNaN(cost)) {\n          return sum + cost;\n        }\n      }, 0);\n      this.subTotal = subtotal.toFixed(2); // tax\n\n      total = subtotal * (this.invoice_tax / 100) + subtotal;\n      total = parseFloat(total);\n      console.log(total);\n\n      if (!isNaN(total)) {\n        this.invoice_total = total.toFixed(2);\n      } else {\n        this.invoice_total = \"0.00\";\n      }\n    },\n    deleteRow: function deleteRow(index, item) {\n      console.log(\"Removing\", item, index);\n      this.items.splice(index, 1); // this.calculateTotal();\n    },\n    calculateLineTotal: function calculateLineTotal(item) {\n      var total = parseInt(item.unitPrice) * parseInt(item.unit);\n\n      if (!isNaN(total)) {\n        item.cost = total.toFixed(2);\n      } // this.calculateTotal();\n\n\n      this.invoiceTotal();\n    },\n    //global save\n    removeRow: function removeRow(id) {\n      this.rows.splice(this.rows.indexOf(id), 1);\n    }\n  })\n};",{"version":3,"sources":["createInvoice.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"main-content\">\n    <b-row>\n      <b-col md=\"12\">\n        <b-card>\n          <b-form>\n            <div class=\"d-flex mb-5\">\n              <span class=\"m-auto\"></span>\n              <b-button @click=\"backInvoice\" variant=\"outline-secondary mr-3\">\n                Cancel\n              </b-button>\n              <b-button @click=\"saveInvoice\" variant=\"primary\">\n                Save\n              </b-button>\n            </div>\n\n            <b-row class=\"justify-content-between\">\n              <b-col lg=\"8\" md=\"6\">\n                <h4 class=\"font-weight-bold\">Order Info</h4>\n                <b-form-group class=\"col-sm-4 mb-3 pl-0\" label=\"Order Number\">\n                  <b-form-input\n                    placeholder=\"Enter Order Number\"\n                    v-model=\"newInvoice.invoiceId\"\n                  >\n                  </b-form-input>\n                </b-form-group>\n                <h2>{{ items.name }}</h2>\n              </b-col>\n              <b-col lg=\"4\" md=\"6\" class=\"text-right\">\n                <label class=\"d-block text-12 text-muted\">Order Status</label>\n\n                <div class=\"col-md-6 offset-md-6 pr-0 mb-30\">\n                  <label class=\"radio radio-reverse radio-danger\">\n                    <input\n                      type=\"radio\"\n                      name=\"orderStatus\"\n                      value=\"Pending\"\n                      v-model=\"newInvoice.status\"\n                    />\n                    <span>Pending</span>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <label class=\"radio radio-reverse radio-warning\">\n                    <input\n                      type=\"radio\"\n                      name=\"orderStatus\"\n                      value=\"Processing\"\n                      v-model=\"newInvoice.status\"\n                    />\n                    <span>Processing</span>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <label class=\"radio radio-reverse radio-success\">\n                    <input\n                      type=\"radio\"\n                      name=\"orderStatus\"\n                      value=\"Delivered\"\n                      v-model=\"newInvoice.status\"\n                    />\n                    <span>Delivered</span>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                </div>\n                  <!-- date -->\n                <b-form-group class=\"mb-3\" label=\"Order Date\">\n                  <!-- <v-date-picker v-model=\"newInvoice.date\" /> -->\n                  <b-form-input\n                    v-model=\"newInvoice.date\"\n                    class=\"input\"\n                    type=\"date\"\n                  ></b-form-input>\n                </b-form-group>\n              </b-col>\n            </b-row>\n\n            <div class=\"mt-3 mb-30 border-top\"></div>\n\n            <b-row class=\"mb-5\">\n              <b-col md=\"6\">\n                <h5 class=\"font-weight-bold\">Bill From</h5>\n\n                <b-form-group class=\"col-md-10 mb-3 pl-0\">\n                  <b-form-input\n                    placeholder=\"Bill From\"\n                    type=\"text\"\n                    v-model=\"newInvoice.billFrom\"\n                    required\n                  >\n                  </b-form-input>\n                </b-form-group>\n                <b-form-group class=\"col-md-10 mb-3 pl-0\">\n                  <b-form-textarea\n                    placeholder=\"Bill Form Address\"\n                    v-model=\"newInvoice.billFromAdress\"\n                  >\n                  </b-form-textarea>\n                </b-form-group>\n              </b-col>\n              <b-col md=\"6\" class=\"text-right\">\n                <h5 class=\"font-weight-bold\">Bill To</h5>\n\n                <b-form-group class=\"col-md-10 offset-md-2 mb-3 pr-0\">\n                  <b-form-input\n                    placeholder=\"Bill to\"\n                    v-model=\"newInvoice.billTo\"\n                  >\n                  </b-form-input>\n                </b-form-group>\n                <b-form-group class=\"col-md-10 offset-md-2 mb-3 pr-0\">\n                  <b-form-textarea\n                    placeholder=\"Bill To Address\"\n                    v-model=\"newInvoice.billToAdress\"\n                  >\n                  </b-form-textarea>\n                </b-form-group>\n              </b-col>\n            </b-row>\n            <!-- multiple-row -->\n            <b-row>\n              <b-col md=\"12\" class=\"table-responsive\">\n                <b-table hover :items=\"items\" :fields=\"fields\">\n                  <template slot=\"index\" slot-scope=\"data\">\n                    <p class=\"font-weight-bold\">{{ data.index + 1 }}</p>\n                    <!-- {{data}}-->\n                  </template>\n                  <template slot=\"itemName\">\n                    <input\n                      class=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Item Name\"\n                    />\n                  </template>\n                  <template slot=\"unitPrice\" slot-scope=\"data\">\n                    <input\n                      v-model=\"data.item.unitPrice\"\n                      @change=\"calculateLineTotal(data.item)\"\n                      class=\"form-control\"\n                      type=\"number\"\n                      placeholder=\"Unit Price\"\n                    />\n                  </template>\n                  <template slot=\"unit\" slot-scope=\"data\">\n                    <input\n                      v-model=\"data.item.unit\"\n                      @change=\"calculateLineTotal(data.item)\"\n                      class=\"form-control\"\n                      type=\"number\"\n                      placeholder=\"Unit\"\n                    />\n                  </template>\n                  <template slot=\"cost\" slot-scope=\"data\">\n                    <input\n                      v-model=\"data.item.cost\"\n                      class=\"form-control\"\n                      readonly\n                    />\n                  </template>\n                  <template slot=\"action\" slot-scope=\"data\">\n                    <b-button\n                      @click=\"deleteRow(data.index, data.item)\"\n                      variant=\"outline-danger\"\n                      >Delete</b-button\n                    >\n                  </template>\n                </b-table>\n                <b-button\n                  @click=\"addNewRow\"\n                  variant=\"primary\"\n                  class=\"float-right mb-30\"\n                >\n                  Add Item\n                </b-button>\n              </b-col>\n\n              <b-col md=\"12\">\n                <div class=\"invoice-summary invoice-summary-input float-right\">\n                  <p>\n                    Sub total: <span>{{ subTotal }}</span>\n                  </p>\n                  <p class=\"d-flex align-items-center\">\n                    Vat(%):\n                    <span>\n                      <input\n                        @change=\"invoiceTotal(invoice_tax)\"\n                        v-model=\"invoice_tax\"\n                        class=\"form-control small-input \"\n                        type=\"text\"\n                      />\n                    </span>\n                  </p>\n                  <h5 class=\"font-weight-bold d-flex align-items-center\">\n                    Grand Total:\n                    <span>\n                      {{ invoice_total }}\n                    </span>\n                  </h5>\n                </div>\n              </b-col>\n            </b-row>\n          </b-form>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport invoice from \"./invoice\";\n\nexport default {\n  components: {\n    invoice\n  },\n\n  data() {\n    return {\n      orderNumber: 0,\n      subTotal: 0,\n      invoice_subtotal: 0,\n      invoice_total: 0,\n      invoice_tax: 0,\n      newInvoice: {\n        billFrom: \"\",\n        billTo: \"\",\n        status: \"\",\n        billFromAddress: \"\",\n        billToAdress: \"\",\n        status: \"\",\n        invoiceId: \"\",\n        date: null\n      },\n\n      name: \"\",\n      fields: [\"index\", \"itemName\", \"unitPrice\", \"unit\", \"cost\", \"action\"],\n      items: [\n        {\n          itemName: \"\",\n          unitPrice: \"\",\n          unit: \"\",\n          cost: 0\n        }\n      ]\n    };\n  },\n  methods: {\n    // vuex\n    ...mapActions([\"addInvoice\", \"editInvoice\"]),\n\n    saveInvoice() {\n      this.addInvoice(this.newInvoice);\n      // this.getTodo(this.newInvoice.invoiceId);\n      this.$router.push(\"/app/apps/printInvoice\");\n    },\n\n    backInvoice() {\n      this.$router.push(\"/app/apps/invoice\");\n    },\n    addNewRow() {\n      this.items.push({\n        itemName: \"\",\n        unitPrice: \"\",\n        unit: \"\",\n        cost: 0\n      });\n    },\n    invoiceTotal() {\n      var subtotal, total;\n      subtotal = this.items.reduce(function(sum, item) {\n        var cost = parseFloat(item.cost);\n        if (!isNaN(cost)) {\n          return sum + cost;\n        }\n      }, 0);\n\n      this.subTotal = subtotal.toFixed(2);\n      // tax\n      total = subtotal * (this.invoice_tax / 100) + subtotal;\n      total = parseFloat(total);\n\n      console.log(total);\n      if (!isNaN(total)) {\n        this.invoice_total = total.toFixed(2);\n      } else {\n        this.invoice_total = \"0.00\";\n      }\n    },\n    deleteRow(index, item) {\n      console.log(\"Removing\", item, index);\n      this.items.splice(index, 1);\n      // this.calculateTotal();\n    },\n    calculateLineTotal(item) {\n      var total = parseInt(item.unitPrice) * parseInt(item.unit);\n      if (!isNaN(total)) {\n        item.cost = total.toFixed(2);\n      }\n\n      // this.calculateTotal();\n      this.invoiceTotal();\n    },\n\n    //global save\n    removeRow(id) {\n      this.rows.splice(this.rows.indexOf(id), 1);\n    }\n  }\n};\n</script>"],"sourceRoot":"src/views/app/apps"}]}