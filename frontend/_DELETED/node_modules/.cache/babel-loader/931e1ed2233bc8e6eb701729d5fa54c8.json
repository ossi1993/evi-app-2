{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-import.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-import.vue","mtime":1600268375670},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport XLSX from 'xlsx';\nexport default {\n  metaInfo: {\n    title: \"Import\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataImport: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      rowDataStructured: null,\n      templates: [],\n      show: false,\n      visible: false,\n      date: null,\n      next: null,\n      error: false,\n      file: null,\n      excelFile: null,\n      dataImport: '',\n      csv: null,\n      checked: true\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.rowData = [];\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Manufacturer\",\n      field: \"MANUFACTURER\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true,\n      headerCheckboxSelection: true\n    }, {\n      headerName: \"Model\",\n      field: \"MODEL\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Supplier\",\n      field: \"SUPPLIER\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Article Number\",\n      field: \"ARTICLE_NUMBER\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Description\",\n      field: \"DESCRIPTION\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Type\",\n      field: \"TYPE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Version\",\n      field: \"VERSION\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Glue Type\",\n      field: \"GLUE_TYPE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Protection Type\",\n      field: \"PROTECTION_TYPE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Outline\",\n      field: \"OUTLINE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Medium\",\n      field: \"MEDIUM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Width in mm\",\n      field: \"WIDTH_IN_MM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Length in mm\",\n      field: \"LENGTH_IN_MM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Thickness Glass in µm\",\n      field: \"THICKNESS_GLASS_IN_MYM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Cost in USD\",\n      field: \"COST_IN_USD\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"GTIN/EAN\",\n      field: \"GTIN_EAN\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n    this.show = false;\n  },\n  methods: {\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    deleteInspection: function deleteInspection() {\n      var index = this.gridApi.getSelectedNodes()[0].childIndex;\n      this.$delete(this.rowData, index);\n      this.show = this.show ? false : true;\n    },\n    onGridReady: function onGridReady(params) {},\n    onChangeInput: function onChangeInput(e) {\n      this.importExcel(e);\n    },\n    structureGridItems: function structureGridItems() {\n      var element = this.rowData;\n      var obj = [];\n      var arr = {};\n\n      for (var i = 0; i < element.length; i++) {\n        var el = element[i];\n        arr = {\n          txtArticlenumber: el.ARTICLE_NUMBER,\n          txtDescription: el.DESCRIPTION,\n          txtType: el.TYPE,\n          txtVersion: el.VERSION,\n          curCost: el.COST_IN_USD,\n          txtGtinEan: el.GTIN_EAN,\n          txtOutline: el.OUTLINE,\n          attributes: []\n        };\n        var attGL = {\n          txtKeyAttribute: 'IT_GL_TY',\n          txtNameAttribute: 'Glue Type',\n          txtValueAttribute: el.GLUE_TYPE,\n          txtValueType: 'STRING',\n          txtMeasureUnit: ''\n        };\n        var attPT = {\n          txtKeyAttribute: 'IT_PT_TY',\n          txtNameAttribute: 'Protection Type',\n          txtValueAttribute: el.PROTECTION_TYPE,\n          txtValueType: 'STRING',\n          txtMeasureUnit: ''\n        };\n        var attMD = {\n          txtKeyAttribute: 'IT_MD',\n          txtNameAttribute: 'Medium',\n          txtValueAttribute: el.MEDIUM,\n          txtValueType: 'STRING',\n          txtMeasureUnit: ''\n        };\n        var attWD = {\n          txtKeyAttribute: 'IT_WD',\n          txtNameAttribute: 'Width',\n          txtValueAttribute: el.WIDTH_IN_MM,\n          txtValueType: 'FLOAT',\n          txtMeasureUnit: 'mm'\n        };\n        var attLE = {\n          txtKeyAttribute: 'IT_LE',\n          txtNameAttribute: 'Length',\n          txtValueAttribute: el.LENGTH_IN_MM,\n          txtValueType: 'FLOAT',\n          txtMeasureUnit: 'mm'\n        };\n        var attTH = {\n          txtKeyAttribute: 'IT_TH',\n          txtNameAttribute: 'Thickness',\n          txtValueAttribute: el.THICKNESS_GLASS_IN_MYM,\n          txtValueType: 'FLOAT',\n          txtMeasureUnit: 'µm'\n        };\n        if (el.GLUE_TYPE != '') arr.attributes.push(attGL);\n        if (el.PROTECTION_TYPE != '') arr.attributes.push(attPT);\n        if (el.MEDIUM != '') arr.attributes.push(attMD);\n        if (el.WIDTH_IN_MM != '') arr.attributes.push(attWD);\n        if (el.LENGTH_IN_MM != '') arr.attributes.push(attLE);\n        if (el.THICKNESS_GLASS_IN_MYM != '') arr.attributes.push(attTH);\n        obj.push(arr);\n      }\n\n      this.rowDataStructured = obj;\n    },\n    createItems: function () {\n      var _createItems = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var element, _loop, i;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.structureGridItems();\n\n              case 2:\n                element = this.rowDataStructured;\n                console.log(this.rowDataStructured);\n                console.log(element);\n\n                _loop = function _loop(i) {\n                  var el = element[i];\n                  console.log(el.txtArticlenumber);\n                  var endpoint = \"/api/item/\";\n                  apiService(endpoint, \"POST\", {\n                    txtArticlenumber: el.txtArticlenumber,\n                    txtDescription: el.txtDescription,\n                    txtType: el.txtType,\n                    txtVersion: el.txtVersion,\n                    curCost: el.curCost,\n                    txtGtinEan: el.txtGtinEan,\n                    txtOutline: el.txtOutline,\n                    txtLink: null,\n                    deviceModels: []\n                  }).then(function (response) {\n                    if (response != 'ERROR') for (var g = 0; g < el.attributes.length; g++) {\n                      var att = el.attributes[g];\n                      var endpointAttribute = \"/api/item-attribute/\";\n                      apiService(endpointAttribute, \"POST\", {\n                        txtKeyAttribute: att.txtKeyAttribute,\n                        txtNameAttribute: att.txtNameAttribute,\n                        txtValueAttribute: att.txtValueAttribute,\n                        txtValueType: att.txtValueType,\n                        txtMeasureUnit: att.txtMeasureUnit,\n                        idItem: response.id\n                      });\n                    }\n                  });\n                };\n\n                for (i = 0; i < element.length; i++) {\n                  _loop(i);\n                }\n\n                this.$router.push('item-list');\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createItems() {\n        return _createItems.apply(this, arguments);\n      }\n\n      return createItems;\n    }()\n  }\n};",null]}