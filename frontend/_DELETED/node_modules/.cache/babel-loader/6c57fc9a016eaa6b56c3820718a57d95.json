{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-item-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\order-item-list.vue","mtime":1602157049675},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport InputTag from 'vue-input-tag';\nexport default {\n  metaInfo: {\n    title: \"Item Orders\"\n  },\n  components: {\n    AgGridVue: AgGridVue,\n    InputTag: InputTag\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      // AG-GRID ITEM ATTRIBUTES\n      gridOptions1: null,\n      gridApi1: null,\n      columnApi1: null,\n      columnDefs1: null,\n      rowData1: null,\n      defaultColDef1: null,\n      // VUE ATTRIBUTE VARIABLES\n      updateAttributeId: null,\n      updateAttributeStatus: false,\n      KeyAtt: null,\n      NameAtt: null,\n      ValueAtt: null,\n      ValueType: null,\n      Parameter: null,\n      ParameterTags: [],\n      optionsTypes: [{\n        value: 'Integer',\n        text: 'Counter'\n      }, {\n        value: 'Float',\n        text: 'Measure'\n      }, {\n        value: 'String',\n        text: 'Text'\n      }, {\n        value: 'Boolean',\n        text: 'True/False'\n      }, {\n        value: 'Select',\n        text: 'Select'\n      }],\n      optionsUnits: [{\n        value: 'µm',\n        text: 'µm'\n      }, {\n        value: 'mm',\n        text: 'mm'\n      }, {\n        value: 'cm',\n        text: 'cm'\n      }, {\n        value: 'mg',\n        text: 'mg'\n      }, {\n        value: 'g',\n        text: 'g'\n      }, {\n        value: 'ml',\n        text: 'ml'\n      }, {\n        value: 'inch',\n        text: 'inch'\n      }, {\n        value: 'oz',\n        text: 'oz'\n      }],\n      optionsBoolean: [{\n        value: 'true',\n        text: 'True'\n      }, {\n        value: 'false',\n        text: 'False'\n      }],\n      // VUE VARIABLES\n      orders: [],\n      attributes: [],\n      items: [],\n      orderedItem: [],\n      show: false,\n      show1: false,\n      ONumber: null,\n      DatOrder: null,\n      DatDelivery: null,\n      OrderAmount: null,\n      DelStatus: null,\n      Comment: null,\n      SupplierReference: null,\n      date: null,\n      error: false,\n      updateItemStatus: false,\n      updateItemId: null,\n      optionStatus: [{\n        code: null,\n        label: 'Choose Delivery Status'\n      }, {\n        code: 'Delivered',\n        label: 'Delivered'\n      }, {\n        code: 'Not Delivered',\n        label: 'Not Delivered'\n      }],\n      optionReference: [{\n        code: null,\n        label: 'Choose Supplier Reference'\n      }, {\n        code: 'Yes',\n        label: 'Yes'\n      }, {\n        code: 'No',\n        label: 'No'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.gridOptions1 = {};\n    this.columnDefs = [{\n      headerName: \"Order Number\",\n      field: \"idOrder.txtOrderNumber\",\n      filter: 'agTextColumnFilter',\n      editable: false,\n      checkboxSelection: true\n    }, {\n      headerName: \"Article Number\",\n      field: \"idItem.txtArticleNumber\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Description\",\n      field: \"idItem.txtDescription\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Order Amount\",\n      field: \"numOrderAmount\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Order Date\",\n      field: \"datOrder\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Date\",\n      field: \"datDelivery\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Status\",\n      field: \"txtDeliveryStatus\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Supplier Reference\",\n      field: \"txtSupplierReference\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.columnDefs1 = [{\n      headerName: \"Key Attribute\",\n      field: \"txtKeyAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Name Attribute\",\n      field: \"txtNameAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Attribute\",\n      field: \"txtValueAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Type\",\n      field: \"txtValueType\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Parameter\",\n      field: \"txtParameter\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.defaultColDef1 = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('orderItem_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('orderItem_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('orderItem_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('orderItem_columnStats', null);\n    },\n    getParameter: function getParameter(params) {\n      if (params.node.data.txtValueType == 'Select') {\n        this.ParameterTags = params.node.data.txtParameter.split(',');\n      } else {\n        this.Parameter = params.node.data.txtParameter;\n      }\n    },\n    setParameter: function setParameter() {\n      var val;\n\n      if (this.ValueType == 'Select') {\n        return val = this.ParameterTags.toString();\n      } else if (this.ValueType == 'Boolean') {\n        this.ValueAtt = 'false';\n        return val = null;\n      } else if (this.ValueType == 'String') {\n        return val = null;\n      } else {\n        return val = this.Parameter.toString();\n      }\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.rowData1 = null;\n\n      if (event.node.selected == true) {\n        this.getItemOrderAttributes(event.data.id);\n      }\n    },\n    onGridReady1: function onGridReady1(params) {\n      this.gridApi1 = params.api;\n      this.gridColumnApi1 = params.columnApi;\n    },\n    changeExternalFilter: function changeExternalFilter(val) {\n      this.extFilter = val;\n      this.gridApi.onFilterChanged();\n    },\n    isExternalFilterPresent: function isExternalFilterPresent() {\n      return this.extFilter !== null;\n    },\n    doesExternalFilterPass: function doesExternalFilterPass(node) {\n      switch (this.extFilter) {\n        case 'all':\n          return true;\n\n        case 'delivered':\n          return node.data.txtDeliveryStatus === 'Delivered';\n\n        case 'not delivered':\n          return node.data.txtDeliveryStatus === 'Not Delivered';\n\n        default:\n          return true;\n      }\n    },\n    editOrderItemMenu: function editOrderItemMenu(params) {\n      this.emptyItemInput();\n      var sel = params.node.data;\n      this.orderedItem = sel.idItem;\n      this.DatOrder = sel.datOrder;\n      this.DatDelivery = sel.datDelivery;\n      this.OrderAmount = sel.numOrderAmount;\n      this.DelStatus = sel.txtDeliveryStatus;\n      this.SupplierReference = sel.txtSupplierReference;\n      this.Comment = sel.txtComment;\n      this.updateItemStatus = true;\n      this.updateItemId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    editAttributeMenu: function editAttributeMenu(params) {\n      this.emptyAttributeInput();\n      var sel = params.node.data;\n      this.getParameter(params);\n      this.KeyAtt = sel.txtKeyAttribute;\n      this.NameAtt = sel.txtNameAttribute;\n      this.ValueAtt = sel.txtValueAttribute;\n      this.ValueType = sel.txtValueType;\n      this.updateAttributeStatus = true;\n      this.updateAttributeId = sel.id;\n      this.show3 = true;\n      document.documentElement.scrollTop = 0;\n    },\n    updateItemOrder: function () {\n      var _updateItemOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/order-item/\".concat(this.updateItemId, \"/\");\n                _context.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  datOrder: this.DatOrder,\n                  datDelivery: this.DatDelivery,\n                  numOrderAmount: this.OrderAmount,\n                  txtDeliveryStatus: this.DelStatus,\n                  txtSupplierReference: this.SupplierReference,\n                  txtComment: this.Comment,\n                  idItem: this.orderedItem.id\n                }).then(function (response) {\n                  _this.getItemOrder();\n\n                  _this.emptyItemInput();\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateItemOrder() {\n        return _updateItemOrder.apply(this, arguments);\n      }\n\n      return updateItemOrder;\n    }(),\n    updateItemAttribute: function () {\n      var _updateItemAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/order-item-attribute/\".concat(this.updateAttributeId, \"/\");\n                _context2.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  txtParameter: this.setParameter(),\n                  txtKeyAttribute: this.KeyAtt,\n                  txtNameAttribute: this.NameAtt,\n                  txtValueAttribute: this.ValueAtt,\n                  txtValueType: this.ValueType\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    _this2.getItemOrder();\n\n                    _this2.emptyAttributeInput();\n\n                    _this2.rowData = null;\n                    _this2.rowData1 = null;\n                    _this2.error = false;\n                  } else {\n                    _this2.error = true;\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateItemAttribute() {\n        return _updateItemAttribute.apply(this, arguments);\n      }\n\n      return updateItemAttribute;\n    }(),\n    updateItemOrderGrid: function () {\n      var _updateItemOrderGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/order-item/\".concat(event.node.data.id, \"/\");\n                _context3.prev = 1;\n                _context3.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  datOrder: event.node.data.datOrder,\n                  datDelivery: event.node.data.datDelivery,\n                  numOrderAmount: event.node.data.numOrderAmount,\n                  txtSupplierReference: event.node.data.txtSupplierReference,\n                  txtComment: event.node.data.txtComment\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 6]]);\n      }));\n\n      function updateItemOrderGrid(_x) {\n        return _updateItemOrderGrid.apply(this, arguments);\n      }\n\n      return updateItemOrderGrid;\n    }(),\n    updateItemOrderAttributeGrid: function () {\n      var _updateItemOrderAttributeGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                endpoint = \"/api/order-item-attribute/\".concat(event.node.data.id, \"/\");\n                _context4.prev = 1;\n                _context4.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtKeyAttribute: event.node.data.txtKeyAttribute,\n                  txtNameAttribute: event.node.data.txtNameAttribute,\n                  txtValueDefault: event.node.data.txtValueDefault,\n                  txtValueType: event.node.data.txtValueType,\n                  txtParameter: event.node.data.txtParameter\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context4.next = 9;\n                break;\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 6]]);\n      }));\n\n      function updateItemOrderAttributeGrid(_x2) {\n        return _updateItemOrderAttributeGrid.apply(this, arguments);\n      }\n\n      return updateItemOrderAttributeGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this3 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Order? => \" + params.node.data.idItem.txtDescription, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this3.deleteOrder(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    openModal1: function openModal1(params) {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Item Order Attribute?\", {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.deleteItemOrderAttribute(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteOrder: function () {\n      var _deleteOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(params) {\n        var _this5 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                endpoint = \"/api/order-item/\".concat(params.node.data.id, \"/\");\n                _context5.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this5.getItemOrder();\n\n                    _this5.rowData1 = null;\n                  } else {\n                    _this5.$bvToast.toast(\"You can't delete this instance. Please check if all connections to this instance are deleted.\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function deleteOrder(_x3) {\n        return _deleteOrder.apply(this, arguments);\n      }\n\n      return deleteOrder;\n    }(),\n    deleteItemOrderAttribute: function () {\n      var _deleteItemOrderAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(params) {\n        var _this6 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                endpoint = \"/api/order-item-attribute/\".concat(params.node.data.id, \"/\");\n                _context6.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this6.getItemOrder();\n\n                    _this6.rowData1 = null;\n                  } else {\n                    _this6.$bvToast.toast(\"You can't delete this instance. Please check if all connections to this instance are deleted.\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deleteItemOrderAttribute(_x4) {\n        return _deleteItemOrderAttribute.apply(this, arguments);\n      }\n\n      return deleteItemOrderAttribute;\n    }(),\n    emptyItemInput: function emptyItemInput(event) {\n      this.DatOrder = this.DatDelivery = this.OrderAmount = this.DelStatus = this.Comment = null;\n      this.SupplierReference = false;\n      this.orderedItem = [];\n      this.show = !this.show;\n      this.updateItemStatus = false;\n    },\n    emptyAttributeInput: function emptyAttributeInput(event) {\n      this.KeyAtt = this.NameAtt = this.ValueAtt = this.ValueType = this.Parameter = null;\n      this.ParameterTags = [];\n      this.show3 = !this.show3;\n      this.updateAttributeStatus = false;\n    },\n    getItem: function getItem() {\n      var _this7 = this;\n\n      if (!this.error) {\n        this.items = [];\n        var endpoint = \"/api/item/\";\n        apiService(endpoint).then(function (data) {\n          var _this7$items;\n\n          (_this7$items = _this7.items).push.apply(_this7$items, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getItemOrder: function getItemOrder() {\n      var _this8 = this;\n\n      if (!this.error) {\n        this.orders = [];\n        var endpoint = \"/api/order-item-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this8$orders;\n\n          (_this8$orders = _this8.orders).push.apply(_this8$orders, _toConsumableArray(data.results));\n\n          _this8.rowData = _this8.orders;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getItemOrderAttributes: function getItemOrderAttributes(OrderItemId) {\n      var _this9 = this;\n\n      if (!this.error) {\n        this.attributes = [];\n        var endpoint = \"/api/order-item-attribute/\";\n        apiService(endpoint).then(function (data) {\n          var _this9$attributes;\n\n          (_this9$attributes = _this9.attributes).push.apply(_this9$attributes, _toConsumableArray(data.results));\n\n          _this9.rowData1 = _this9.attributes.filter(function (e) {\n            return e.idOrderItem == OrderItemId;\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this10 = this;\n\n      var result = [{\n        name: 'Edit Order Item',\n        action: function action() {\n          return _this10.editOrderItemMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Order Item',\n        action: function action() {\n          return _this10.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    },\n    getContextMenu1: function getContextMenu1(params) {\n      var _this11 = this;\n\n      var result = [{\n        name: 'Edit Attribute',\n        action: function action() {\n          return _this11.editAttributeMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Item Order Attribute',\n        action: function action() {\n          return _this11.openModal1(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getItemOrder();\n    this.getDateToday();\n    this.getItem();\n  }\n};",null]}