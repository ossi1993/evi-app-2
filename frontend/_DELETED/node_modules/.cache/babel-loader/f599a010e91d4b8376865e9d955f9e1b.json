{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\store\\modules\\cart.js","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\store\\modules\\cart.js","mtime":1575914052000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { products } from \"../../data/products\";\nvar state = {\n  items: products,\n  addToCart: \"\",\n  addedToCart: [],\n  removeToCart: \"\",\n  totalCart: 0,\n  ascOrder: '',\n  filterProducts: products,\n  brandFilter: '',\n  filterData: '',\n  orderBy: '',\n  perPage: 12,\n  currentPage: 1,\n  pagesToShow: 3,\n  brands: [\"apple\", \"huawei\", \"sony\", \"samsung\", \"xiaomi\", \"asus\"],\n  categories: [\"Mobile\", \"Speaker\", \"Furniture\", \"Watch\"],\n  checkoutForm: [],\n  checkoutFormAdded: \"\"\n};\nvar getters = {\n  getCheckoutForm: function getCheckoutForm(state) {\n    return state.checkoutFormAdded;\n  },\n  getTotalCart: function getTotalCart(state) {\n    return state.totalCart;\n  },\n  getFilterProducts: function getFilterProducts(state) {\n    return state.filterProducts;\n  },\n  getItems: function getItems(state) {\n    return state.items;\n  },\n  getCartItems: function getCartItems(state) {\n    return state.addToCart;\n  },\n  getBrandsItem: function getBrandsItem(state) {\n    return state.brands;\n  },\n  getCategoryItem: function getCategoryItem(state) {\n    return state.categories;\n  },\n  getAddToCarts: function getAddToCarts(state) {\n    return state.addedToCart;\n  },\n  brandsCount: function brandsCount(state) {\n    var counts = {};\n    state.items.forEach(function (item) {\n      counts[item.brand] = counts[item.brand] + 1 || 1; //    console.log(counts)\n    });\n    return counts;\n  }\n};\nvar actions = {\n  addCart: function addCart(_ref, data) {\n    var commit = _ref.commit;\n    commit('ADD_CART', data);\n  },\n  addBrandToFilter: function addBrandToFilter(_ref2, data) {\n    var commit = _ref2.commit;\n    commit('ADD_BRAND_TO_FILTER', data);\n  },\n  addCategoryItem: function addCategoryItem(_ref3, data) {\n    var commit = _ref3.commit;\n    commit('ADD_BRAND_TO_CATEGORY', data);\n  },\n  removeBrandToFilter: function removeBrandToFilter(_ref4, data) {\n    var commit = _ref4.commit;\n    commit('REMOVE_BRAND_FROM_FILTER', data);\n  },\n  ascendingOrderCart: function ascendingOrderCart(_ref5, data) {\n    var commit = _ref5.commit;\n    commit('ASCENDING_ORDER_CART', data);\n  },\n  descendingOrderCart: function descendingOrderCart(_ref6, data) {\n    var commit = _ref6.commit;\n    commit('DESCENDING_ORDER_CART', data);\n  },\n  totalCart: function totalCart(_ref7, data) {\n    var commit = _ref7.commit;\n    commit('TOTAL_CART', data);\n  },\n  removeCart: function removeCart(_ref8, data) {\n    var commit = _ref8.commit;\n    commit('REMOVE_CART_LIST', data);\n  },\n  addCheckoutAddress: function addCheckoutAddress(_ref9, data) {\n    var commit = _ref9.commit;\n    commit('ADD_CHECKOUT_FORM', data);\n  },\n  removeQty: function removeQty(_ref10, data) {\n    var commit = _ref10.commit;\n    commit('REMOVE_QTY', data);\n  },\n  addQty: function addQty(_ref11, data) {\n    var commit = _ref11.commit;\n    commit('ADD_QTY', data);\n  }\n};\nvar mutations = {\n  ADD_CHECKOUT_FORM: function ADD_CHECKOUT_FORM(state, data) {\n    state.checkoutForm.push(data);\n    state.checkoutFormAdded = data;\n    console.log(data);\n  },\n  TOTAL_CART: function TOTAL_CART(state, data) {\n    state.totalCart = state.addedToCart;\n    console.log(state.totalCart.forEach(function (item) {\n      return item.productPrice;\n    }));\n  },\n  ADD_CART: function ADD_CART(state, data) {\n    var findId = state.addedToCart.find(function (product) {\n      return product.id == data.id;\n    });\n\n    if (findId) {\n      // console.log(findId)\n      state.totalCart += data.productPrice;\n      data['qty'] += 1; // console.log(data);   \n    } else {\n      state.totalCart += data.productPrice;\n      data['qty'] = 1;\n      state.addedToCart.push(data);\n    }\n  },\n  REMOVE_QTY: function REMOVE_QTY(state, data) {\n    var findId = state.addedToCart.find(function (product) {\n      return product.id == data.id;\n    });\n\n    if (findId) {\n      console.log(data.qty);\n\n      if (data.qty > 1) {\n        state.totalCart -= data.productPrice;\n        data.qty -= 1;\n        console.log(data.qty);\n      } else {\n        state.totalCart -= data.productPrice;\n        var index = state.addedToCart.indexOf(data);\n        state.addedToCart.splice(index, 1);\n        console.log('not working');\n      }\n    }\n  },\n  ADD_QTY: function ADD_QTY(state, data) {\n    var findId = state.addedToCart.find(function (product) {\n      return product.id == data.id;\n    });\n\n    if (findId) {\n      if (data.qty < 10) {\n        state.totalCart += data.productPrice;\n        data.qty += 1;\n      } else {\n        console.log('not working');\n      }\n    }\n  },\n  ADD_BRAND_TO_FILTER: function ADD_BRAND_TO_FILTER(state, checkedArray) {\n    state.filterProducts = state.items.filter(function (p) {\n      return checkedArray.includes(p.brand);\n    });\n\n    if (state.filterProducts.length === 0) {\n      state.filterProducts = products;\n      console.log(state.filterProducts);\n    }\n  },\n  ADD_BRAND_TO_CATEGORY: function ADD_BRAND_TO_CATEGORY(state, data) {\n    state.filterProducts = state.items.filter(function (p) {\n      return p.category == data;\n    });\n  },\n  ASCENDING_ORDER_CART: function ASCENDING_ORDER_CART(state) {\n    state.items.sort(function (a, b) {\n      return a.productPrice - b.productPrice;\n    });\n  },\n  DESCENDING_ORDER_CART: function DESCENDING_ORDER_CART() {\n    state.items.sort(function (a, b) {\n      return b.productPrice - a.productPrice;\n    });\n  },\n  REMOVE_CART_LIST: function REMOVE_CART_LIST(state, data) {\n    state.totalCart -= data.qty * data.productPrice; //    state.removeAddToCart = state.addedToCart\n\n    var index = state.addedToCart.indexOf(data);\n    state.addedToCart.splice(index, 1); // console.log(index);\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",null]}