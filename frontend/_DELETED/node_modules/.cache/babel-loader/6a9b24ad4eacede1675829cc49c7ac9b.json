{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-list.vue","mtime":1602249105274},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport InputTag from 'vue-input-tag';\nexport default {\n  metaInfo: {\n    title: \"Item\"\n  },\n  components: {\n    AgGridVue: AgGridVue,\n    InputTag: InputTag\n  },\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      gridColumnApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n      // AG-GRID ATTRIBUTES VARIABLES\n      gridOptions1: null,\n      gridApi1: null,\n      gridColumnApi1: null,\n      defaultColDef1: null,\n      columnDefs1: null,\n      rowData1: null\n    }, _defineProperty(_ref, \"defaultColDef1\", null), _defineProperty(_ref, \"paginationPageSize1\", 0), _defineProperty(_ref, \"updateAttributeId\", null), _defineProperty(_ref, \"updateAttributeStatus\", false), _defineProperty(_ref, \"KeyAtt\", null), _defineProperty(_ref, \"NameAtt\", null), _defineProperty(_ref, \"ValueAtt\", null), _defineProperty(_ref, \"ValueType\", null), _defineProperty(_ref, \"Parameter\", null), _defineProperty(_ref, \"ParameterTags\", []), _defineProperty(_ref, \"optionsTypes\", [{\n      value: 'Integer',\n      text: 'Counter'\n    }, {\n      value: 'Float',\n      text: 'Measure'\n    }, {\n      value: 'String',\n      text: 'Text'\n    }, {\n      value: 'Boolean',\n      text: 'True/False'\n    }, {\n      value: 'Select',\n      text: 'Select'\n    }]), _defineProperty(_ref, \"optionsUnits\", [{\n      value: 'µm',\n      text: 'µm'\n    }, {\n      value: 'mm',\n      text: 'mm'\n    }, {\n      value: 'cm',\n      text: 'cm'\n    }, {\n      value: 'mg',\n      text: 'mg'\n    }, {\n      value: 'g',\n      text: 'g'\n    }, {\n      value: 'ml',\n      text: 'ml'\n    }, {\n      value: 'inch',\n      text: 'inch'\n    }, {\n      value: 'oz',\n      text: 'oz'\n    }]), _defineProperty(_ref, \"items\", []), _defineProperty(_ref, \"attributes\", []), _defineProperty(_ref, \"tempAttributes\", []), _defineProperty(_ref, \"models\", []), _defineProperty(_ref, \"standardAttributes\", []), _defineProperty(_ref, \"filteredStandardAttributes\", []), _defineProperty(_ref, \"itemTypes\", []), _defineProperty(_ref, \"itemGroups\", []), _defineProperty(_ref, \"show\", false), _defineProperty(_ref, \"selectedModels\", null), _defineProperty(_ref, \"selectedAttributes\", []), _defineProperty(_ref, \"filteredAttributes\", []), _defineProperty(_ref, \"attValue\", null), _defineProperty(_ref, \"ArtNum\", null), _defineProperty(_ref, \"Description\", null), _defineProperty(_ref, \"ItemType\", null), _defineProperty(_ref, \"Version\", null), _defineProperty(_ref, \"Cost\", null), _defineProperty(_ref, \"GtinEan\", null), _defineProperty(_ref, \"ItemGroup\", null), _defineProperty(_ref, \"Link\", null), _defineProperty(_ref, \"Comment\", null), _defineProperty(_ref, \"date\", null), _defineProperty(_ref, \"error\", false), _defineProperty(_ref, \"updateStatus\", false), _defineProperty(_ref, \"updateId\", null), _defineProperty(_ref, \"selectedItem\", false), _defineProperty(_ref, \"optionsItemGroup\", [{\n      code: '2D',\n      label: '2D'\n    }, {\n      code: '3D',\n      label: '3D'\n    }, {\n      code: 'FC',\n      label: 'Full Cover'\n    }]), _defineProperty(_ref, \"optionsModels\", []), _defineProperty(_ref, \"optionAttributes\", []), _defineProperty(_ref, \"optionBoolean\", [{\n      code: 'true',\n      label: 'Yes'\n    }, {\n      code: 'false',\n      label: 'No'\n    }]), _ref;\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.gridOptions1 = {};\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.columnDefs = [{\n      headerName: \"Article Number\",\n      field: \"txtArticleNumber\",\n      filter: 'agTextColumnFilter',\n      cellRenderer: 'agGroupCellRenderer',\n      checkboxSelection: true\n    }, {\n      headerName: \"Item Description\",\n      field: \"txtDescription\",\n      filter: 'agTextColumnFilter',\n      width: 300\n    }, {\n      headerName: \"Item Type\",\n      field: \"idItemType.txtItemType\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Item Group\",\n      field: \"idItemGroup.txtItemGroup\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Version\",\n      field: \"txtVersion\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Cost\",\n      field: \"curCost\",\n      filter: 'agTextColumnFilter',\n      hide: true\n    }, {\n      headerName: \"GTIN / EAN\",\n      field: \"txtGtinEan\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Link\",\n      field: \"txtLink\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.columnDefs1 = [{\n      headerName: \"Key Attribute\",\n      field: \"txtKeyAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Name Attribute\",\n      field: \"txtNameAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Attribute\",\n      field: \"txtValueAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Type\",\n      field: \"txtValueType\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Parameter\",\n      field: \"txtParameter\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.defaultColDef1 = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: true,\n        columnDefs: [{\n          field: 'txtModelName',\n          headerName: 'Model Name'\n        }, {\n          field: 'txtModelStatus',\n          headerName: 'Model Status'\n        }, {\n          field: 'txtComment',\n          headerName: 'Memo'\n        }],\n        defaultColDef: {\n          flex: 1,\n          resizable: true\n        }\n      },\n      getDetailRowData: function getDetailRowData(params) {\n        params.successCallback(params.data.idModel);\n      }\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.paginationPageSize1 = 10;\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem('selModel')) {\n      this.emptyInput('add');\n      this.selectedModels = JSON.parse(localStorage.getItem('selModel'));\n    }\n\n    if (JSON.parse(localStorage.getItem('itemList_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('itemList_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    localStorage.removeItem('selModel');\n    next();\n  },\n  computed: {\n    disabled: function disabled() {\n      return !this.ArtNum ? true : !this.Description ? true : !this.ItemType ? true : !this.Version ? true : !this.ItemGroup ? true : !this.selectedModels ? true : false;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('itemList_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('itemList_columnStats', null);\n    },\n    getModelIds: function getModelIds() {\n      var el = this.selectedModels.map(function (e) {\n        return e.id;\n      });\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onSubmit: function onSubmit() {\n      if (!this.updateStatus) {\n        this.addItem();\n      } else {\n        this.updateItem();\n      }\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelectedItem: function onRowSelectedItem(event) {\n      this.rowData1 = null;\n      this.selectedItem = this.selectedItem ? false : true;\n\n      if (event.node.selected == true) {\n        this.getAttributes(event.data.id);\n        window.localStorage.setItem('selItem', event.node.data.id);\n      } else {\n        this.attributes = [];\n      }\n    },\n    onGridReady: function onGridReady(params) {\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n    },\n    onGridReady1: function onGridReady1(params) {\n      this.gridApi1 = params.api;\n      this.gridColumnApi1 = params.columnApi;\n    },\n    getParameter: function getParameter(params) {\n      if (params.node.data.txtValueType == 'Select') {\n        this.ParameterTags = params.node.data.txtParameter.split(',');\n      } else {\n        this.Parameter = params.node.data.txtParameter;\n      }\n    },\n    setParameter: function setParameter() {\n      var val;\n\n      if (this.ValueType == 'Select') {\n        return val = this.ParameterTags.toString();\n      } else if (this.ValueType == 'Boolean') {\n        this.ValueAtt = 'false';\n        return val = null;\n      } else if (this.ValueType == 'String') {\n        return val = null;\n      } else {\n        return val = this.Parameter.toString();\n      }\n    },\n    addItem: function addItem() {\n      var _this = this;\n\n      if (this.ArtNum) {\n        var models = this.selectedModels.map(function (e) {\n          return e.id;\n        });\n        console.log(models);\n        console.log(this.ItemType.id);\n        console.log(this.ItemGroup.id);\n        var endpoint = \"/api/item/\";\n        apiService(endpoint, \"POST\", {\n          idItemType: this.ItemType.id,\n          idItemGroup: this.ItemGroup.id,\n          txtArticleNumber: this.ArtNum,\n          txtDescription: this.Description,\n          txtVersion: this.Version,\n          curCost: this.Cost,\n          txtGtinEan: this.GtinEan,\n          txtLink: this.Link,\n          txtComment: this.Comment,\n          idModel: models\n        }).then(function (response) {\n          if (response != 'ERROR') {\n            for (var i = 0; i < _this.selectedAttributes.length; i++) {\n              var el = _this.selectedAttributes[i];\n              var endpointAttributes = \"/api/item-attribute/\";\n              apiService(endpointAttributes, \"POST\", {\n                txtKeyAttribute: el.txtKeyAttribute,\n                txtNameAttribute: el.txtNameAttribute,\n                txtValueAttribute: el.txtValueDefault,\n                txtValueType: el.txtValueType,\n                txtParameter: el.txtParameter,\n                idItem: response.id\n              });\n            }\n\n            ;\n\n            _this.getItems();\n\n            _this.emptyInput();\n          } else {\n            _this.error = true;\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n\n        if (this.error) {\n          this.error = false;\n        }\n      }\n    },\n    editItemMenu: function editItemMenu(params) {\n      this.emptyInput();\n      var sel = params.node.data;\n      var models = sel.idModel;\n      this.selectedModels = models;\n      this.ItemType = sel.idItemType;\n      this.ItemGroup = sel.idItemGroup;\n      this.ArtNum = sel.txtArticleNumber;\n      this.Description = sel.txtDescription;\n      this.Version = sel.txtVersion;\n      this.Cost = sel.curCost;\n      this.GtinEan = sel.txtGtinEan;\n      this.Link = sel.Link;\n      this.Comment = sel.Comment;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.getAttributes();\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    editAttributeMenu: function editAttributeMenu(params) {\n      this.emptyAttributeInput();\n      var sel = params.node.data;\n      this.getParameter(params);\n      this.KeyAtt = sel.txtKeyAttribute;\n      this.NameAtt = sel.txtNameAttribute;\n      this.ValueAtt = sel.txtValueAttribute;\n      this.ValueType = sel.txtValueType;\n      this.updateAttributeStatus = true;\n      this.updateAttributeId = sel.id;\n      document.documentElement.scrollTop = 0;\n    },\n    updateItemGrid: function () {\n      var _updateItemGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/item/\".concat(event.node.data.id, \"/\");\n                _context.prev = 1;\n                _context.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtArticleNumber: event.node.data.txtArticleNumber,\n                  txtDescription: event.node.data.txtDescription,\n                  idItemType: event.node.data.idItemType,\n                  idItemGroup: event.node.data.idItemGroup,\n                  txtVersion: event.node.data.txtVersion,\n                  curCost: event.node.data.curCost,\n                  txtGtinEan: event.node.data.txtGtinEan,\n                  txtLink: event.node.data.txtLink,\n                  txtComment: event.node.data.txtComment\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 6]]);\n      }));\n\n      function updateItemGrid(_x) {\n        return _updateItemGrid.apply(this, arguments);\n      }\n\n      return updateItemGrid;\n    }(),\n    updateAttributeGrid: function () {\n      var _updateAttributeGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/item-attribute/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtKeyAttribute: event.node.data.txtKeyAttribute,\n                  txtNameAttribute: event.node.data.txtNameAttribute,\n                  txtValueAttribute: event.node.data.txtValueAttribute,\n                  txtValueType: event.node.data.txtValueType,\n                  txtParameter: event.node.data.txtParameter\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateAttributeGrid(_x2) {\n        return _updateAttributeGrid.apply(this, arguments);\n      }\n\n      return updateAttributeGrid;\n    }(),\n    updateItem: function () {\n      var _updateItem = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var models, endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                models = this.selectedModels.map(function (e) {\n                  return e.id;\n                });\n                endpoint = \"/api/item/\".concat(this.updateId, \"/\");\n                _context3.next = 4;\n                return apiService(endpoint, \"PUT\", {\n                  txtArticleNumber: this.ArtNum,\n                  txtDescription: this.Description,\n                  idItemType: this.ItemType.id,\n                  idItemGroup: this.ItemGroup.id,\n                  txtVersion: this.Version,\n                  curCost: this.Cost,\n                  txtGtinEan: this.GtinEan,\n                  txtLink: this.Link,\n                  txtComment: this.Comment,\n                  idModel: models\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    // ADD ATTRIBUTE\n                    for (var i = 0; i < _this2.selectedAttributes.length; i++) {\n                      var el = _this2.selectedAttributes[i];\n                      var endpointAttributes = \"/api/item-attribute/\";\n                      apiService(endpointAttributes, \"POST\", {\n                        txtKeyAttribute: el.txtKeyAttribute,\n                        txtNameAttribute: el.txtNameAttribute,\n                        txtValueAttribute: el.txtValueDefault,\n                        txtValueType: el.txtValueType,\n                        txtParameter: el.txtParameter,\n                        idItem: response.id\n                      });\n                    } // UPDATE ATTRIBUTE\n\n\n                    for (var _i = 0; _i < _this2.filteredAttributes.length; _i++) {\n                      var _el = _this2.filteredAttributes[_i];\n\n                      var _endpointAttributes = \"/api/item-attribute/\".concat(_el.id, \"/\");\n\n                      apiService(_endpointAttributes, \"PUT\", {\n                        txtKeyAttribute: _el.txtKeyAttribute,\n                        txtNameAttribute: _el.txtNameAttribute,\n                        txtValueAttribute: _el.txtValueAttribute,\n                        txtValueType: _el.txtValueType,\n                        txtParameter: _el.txtParameter,\n                        idItem: response.id\n                      });\n                    }\n\n                    ;\n                    _this2.selectedItem = false;\n                    _this2.attributes = [];\n\n                    _this2.emptyInput();\n\n                    _this2.getItems();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateItem() {\n        return _updateItem.apply(this, arguments);\n      }\n\n      return updateItem;\n    }(),\n    updateItemAttribute: function () {\n      var _updateItemAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _this3 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                endpoint = \"/api/item-attribute/\".concat(this.updateAttributeId, \"/\");\n                _context4.next = 3;\n                return apiService(endpoint, \"PATCH\", {\n                  txtParameter: this.setParameter(),\n                  txtKeyAttribute: this.KeyAtt,\n                  txtNameAttribute: this.NameAtt,\n                  txtValueAttribute: this.ValueAtt,\n                  txtValueType: this.ValueType\n                }).then(function (response) {\n                  _this3.rowData = null;\n                  _this3.rowData1 = null;\n\n                  _this3.emptyAttributeInput();\n\n                  _this3.getItems();\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function updateItemAttribute() {\n        return _updateItemAttribute.apply(this, arguments);\n      }\n\n      return updateItemAttribute;\n    }(),\n    openModal: function openModal(params) {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Item? => \" + params.node.data.txtArticleNumber, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.deleteItem(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    openModal1: function openModal1(params) {\n      var _this5 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Do you really want to delete the Attribute? => \" + params.node.data.txtNameAttribute, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this5.deleteAttribute(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteItem: function () {\n      var _deleteItem = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(params) {\n        var _this6 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                endpoint = \"/api/item/\".concat(params.node.data.id, \"/\");\n                _context5.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this6.getItems();\n                  } else {\n                    _this6.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function deleteItem(_x3) {\n        return _deleteItem.apply(this, arguments);\n      }\n\n      return deleteItem;\n    }(),\n    deleteAttribute: function () {\n      var _deleteAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(params) {\n        var _this7 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                endpoint = \"/api/item-attribute/\".concat(params.node.data.id, \"/\");\n                _context6.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    var id = window.localStorage.getItem('selItem');\n\n                    _this7.getAttributes(id);\n                  } else {\n                    _this7.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deleteAttribute(_x4) {\n        return _deleteAttribute.apply(this, arguments);\n      }\n\n      return deleteAttribute;\n    }(),\n    emptyInput: function emptyInput(event) {\n      this.ItemType = this.ItemGroup = this.selectedModels = this.selectedAttributes = [];\n      this.ArtNum = this.Description = this.Version = this.Cost = this.GtinEan = this.Link = this.Comment = null;\n\n      if (event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    emptyAttributeInput: function emptyAttributeInput(event) {\n      this.KeyAtt = this.NameAtt = this.ValueAtt = this.ValueType = this.Parameter = null;\n      this.ParameterTags = [];\n      this.updateAttributeStatus = false;\n    },\n    emptyLastValueType: function emptyLastValueType(event) {\n      this.ValueDef = this.Parameter = null;\n      this.ParameterTags = [];\n    },\n    getParameterTags: function getParameterTags(params) {\n      return params.split(',');\n    },\n    getStandardAttributes: function getStandardAttributes(type) {\n      var _this8 = this;\n\n      this.standardAttributes = [];\n      this.selectedAttributes = [];\n\n      if (type != null && !this.updateStatus) {\n        var endpoint = \"/api/standard-attribute-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this8$standardAttrib;\n\n          (_this8$standardAttrib = _this8.standardAttributes).push.apply(_this8$standardAttrib, _toConsumableArray(data.results));\n\n          for (var i = 0; i < _this8.standardAttributes.length; i++) {\n            var el = _this8.standardAttributes[i];\n\n            if (el.idItemType.txtItemType == type.txtItemType) {\n              _this8.selectedAttributes.push(el.idKeyAttribute);\n            }\n          }\n        });\n      }\n    },\n    getItems: function getItems() {\n      var _this9 = this;\n\n      if (!this.error) {\n        this.items = [];\n        var endpoint = \"/api/item-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this9$items;\n\n          (_this9$items = _this9.items).push.apply(_this9$items, _toConsumableArray(data.results));\n\n          _this9.rowData = _this9.items;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getItemTypes: function getItemTypes() {\n      var _this10 = this;\n\n      this.itemTypes = [];\n      var endpoint = \"/api/item-type/\";\n      apiService(endpoint).then(function (data) {\n        var _this10$itemTypes;\n\n        (_this10$itemTypes = _this10.itemTypes).push.apply(_this10$itemTypes, _toConsumableArray(data.results));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    getItemGroups: function getItemGroups(type) {\n      var _this11 = this;\n\n      this.itemGroups = [];\n\n      if (type != null && !this.updateStatus) {\n        this.itemGroups = [];\n        var endpoint = \"/api/item-group/\";\n        apiService(endpoint).then(function (data) {\n          var _this11$itemGroups;\n\n          (_this11$itemGroups = _this11.itemGroups).push.apply(_this11$itemGroups, _toConsumableArray(data.results));\n\n          _this11.itemGroups = _this11.itemGroups.filter(function (e) {\n            return e.idItemType === type.id;\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getAttributes: function getAttributes(val) {\n      var _this12 = this;\n\n      if (!this.error) {\n        this.attributes = [];\n        var endpoint = \"/api/item-attribute/\";\n        apiService(endpoint).then(function (data) {\n          var _this12$attributes;\n\n          (_this12$attributes = _this12.attributes).push.apply(_this12$attributes, _toConsumableArray(data.results));\n\n          if (_this12.updateId != null) {\n            _this12.filteredAttributes = _this12.attributes.filter(function (e) {\n              return e.idItem == _this12.updateId;\n            });\n          }\n\n          if (val != null) {\n            _this12.rowData1 = _this12.attributes.filter(function (e) {\n              return e.idItem == val;\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getTemplateAttributes: function getTemplateAttributes() {\n      var _this13 = this;\n\n      if (!this.error) {\n        this.tempAttributes = [];\n        var endpoint = \"/api/item-template-attribute/\";\n        apiService(endpoint).then(function (data) {\n          var _this13$tempAttribute;\n\n          (_this13$tempAttribute = _this13.tempAttributes).push.apply(_this13$tempAttribute, _toConsumableArray(data.results));\n\n          _this13.optionAttributes = _this13.tempAttributes;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getModels: function getModels() {\n      var _this14 = this;\n\n      if (!this.error) {\n        this.models = [];\n        var endpoint = \"/api/model/\";\n        apiService(endpoint).then(function (data) {\n          var _this14$models;\n\n          (_this14$models = _this14.models).push.apply(_this14$models, _toConsumableArray(data.results));\n\n          _this14.optionsModels = _this14.models;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this15 = this;\n\n      var result = [{\n        name: 'Edit Item',\n        action: function action() {\n          return _this15.editItemMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Item',\n        action: function action() {\n          return _this15.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    },\n    getContextMenu1: function getContextMenu1(params) {\n      var _this16 = this;\n\n      var result = [{\n        name: 'Edit Attribute',\n        action: function action() {\n          return _this16.editAttributeMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Attribute',\n        action: function action() {\n          return _this16.openModal1(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getItems();\n    this.getModels();\n    this.getDateToday();\n    this.getTemplateAttributes();\n    this.getItemTypes();\n  }\n};",null]}