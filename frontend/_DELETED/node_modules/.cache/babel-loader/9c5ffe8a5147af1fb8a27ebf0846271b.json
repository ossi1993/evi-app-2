{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-list.vue","mtime":1602163669575},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Device\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      // AG-GRID ATTRIBUTES VARIABLES\n      gridOptions1: null,\n      gridApi1: null,\n      gridColumnApi1: null,\n      defaultColDef1: null,\n      columnDefs1: null,\n      rowData1: null\n    }, _defineProperty(_ref, \"defaultColDef1\", null), _defineProperty(_ref, \"paginationPageSize1\", 0), _defineProperty(_ref, \"devices\", []), _defineProperty(_ref, \"models\", []), _defineProperty(_ref, \"attributes\", []), _defineProperty(_ref, \"positions\", []), _defineProperty(_ref, \"tempAttributes\", []), _defineProperty(_ref, \"selectedAttributes\", []), _defineProperty(_ref, \"filteredAttributes\", []), _defineProperty(_ref, \"SNumber\", null), _defineProperty(_ref, \"DPosition\", null), _defineProperty(_ref, \"IMEI\", null), _defineProperty(_ref, \"Comment\", null), _defineProperty(_ref, \"Model\", null), _defineProperty(_ref, \"date\", null), _defineProperty(_ref, \"error\", false), _defineProperty(_ref, \"show\", false), _defineProperty(_ref, \"updateStatus\", false), _defineProperty(_ref, \"updateId\", null), _defineProperty(_ref, \"selectedDevice\", false), _defineProperty(_ref, \"optionsModels\", []), _defineProperty(_ref, \"optionAttributes\", []), _defineProperty(_ref, \"optionPosition\", [{\n      code: 'Neuried',\n      text: 'Neuried'\n    }, {\n      code: 'Straubing',\n      text: 'Straubing'\n    }, {\n      code: 'Ordered',\n      text: 'Ordered'\n    }, {\n      code: 'on the Way',\n      text: 'on the Way'\n    }]), _defineProperty(_ref, \"optionBoolean\", [{\n      value: 'true',\n      text: 'Yes'\n    }, {\n      value: 'false',\n      text: 'No'\n    }]), _ref;\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.gridOptions1 = {};\n    this.columnDefs = [{\n      headerName: \"Model Name\",\n      field: \"idModel.txtModelName\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true,\n      editable: false\n    }, {\n      headerName: \"Serial Number\",\n      field: \"txtSerialNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"IMEI\",\n      field: \"txtIMEI\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Device Position\",\n      field: \"idDevicePosition.txtDevicePosition\",\n      filter: 'agTextColumnFilter',\n      cellEditor: 'agRichSelectCellEditor',\n      cellEditorParams: {\n        cellHeight: 50,\n        values: ['Neuried', 'Straubing']\n      }\n    }, {\n      headerName: \"Manufacturer\",\n      field: \"idModel.idManufacturer.txtManufacturerName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Supplier\",\n      field: \"idModel.idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.columnDefs1 = [{\n      headerName: \"Key Attribute\",\n      field: \"txtKeyAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Name Attribute\",\n      field: \"txtNameAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Attribute\",\n      field: \"txtValueAttribute\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Value Type\",\n      field: \"txtValueType\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Parameter\",\n      field: \"txtParameter\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.defaultColDef1 = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.paginationPageSize1 = 10;\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('device_columnStats')) != null) {\n      this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('device_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function disabled() {\n      return !this.DPosition ? true : !this.Model ? true : false;\n    }\n  },\n  methods: {\n    saveState: function saveState() {\n      localStorage.setItem('device_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('device_columnStats', null);\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onSubmit: function onSubmit() {\n      if (!this.updateStatus) {\n        this.addDevice();\n      } else {\n        this.updateDevice();\n      }\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelectedDevice: function onRowSelectedDevice(event) {\n      this.selectedDevice = this.selectedDevice ? false : true;\n\n      if (event.node.selected == true) {\n        this.getAttributes(event.data.id);\n        window.localStorage.setItem('selDevice', event.node.data.id);\n      } else {\n        this.gridApi.redrawRows();\n        this.attributes = [];\n      }\n    },\n    onGridReady: function onGridReady(params) {\n      var _this = this;\n\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n      setTimeout(function () {\n        _this.getSelectedDevice(params);\n      }, 500);\n    },\n    onGridReady1: function onGridReady1(params) {\n      this.gridApi1 = params.api;\n      this.gridColumnApi1 = params.columnApi;\n    },\n    addDevice: function addDevice() {\n      var _this2 = this;\n\n      if (this.SNumber) {\n        var endpoint = \"/api/device/\";\n        apiService(endpoint, \"POST\", {\n          txtSerialNumber: this.SNumber,\n          txtIMEI: this.IMEI,\n          idDevicePosition: this.DPosition.id,\n          idModel: this.Model,\n          txtComment: this.Comment\n        }).then(function (response) {\n          if (response != 'ERROR') {\n            for (var i = 0; i < _this2.selectedAttributes.length; i++) {\n              var el = _this2.selectedAttributes[i];\n              var endpointAttributes = \"/api/device-attribute/\";\n              apiService(endpointAttributes, \"POST\", {\n                txtKeyAttribute: el.txtKeyAttribute,\n                txtNameAttribute: el.txtNameAttribute,\n                txtValueAttribute: el.txtValueDefault,\n                txtValueType: el.txtValueType,\n                txtParameter: el.txtParameter,\n                idDevice: response.id\n              });\n            }\n\n            ;\n\n            _this2.getDevices();\n\n            _this2.emptyInput();\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    editItemMenu: function editItemMenu(params) {\n      this.emptyInput();\n      var sel = params.node.data;\n      this.SNumber = sel.txtSerialNumber;\n      this.DPosition = sel.idDevicePosition;\n      this.Model = sel.idModel;\n      this.Comment = sel.txtComment;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      this.getAttributes();\n      document.documentElement.scrollTop = 0;\n    },\n    updateDevice: function () {\n      var _updateDevice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_typeof(this.Model) == \"object\") {\n                  this.Model = this.Model.id;\n                } else {\n                  this.Model = this.Model;\n                }\n\n                endpoint = \"/api/device/\".concat(this.updateId, \"/\");\n                _context.next = 4;\n                return apiService(endpoint, \"PUT\", {\n                  txtSerialNumber: this.SNumber,\n                  txtIMEI: this.IMEI,\n                  idDevicePosition: this.DPosition.id,\n                  txtComment: this.Comment,\n                  idModel: this.Model\n                }).then(function (response) {\n                  if (response != 'ERROR') {\n                    // ADD ATTRIBUTE\n                    for (var i = 0; i < _this3.selectedAttributes.length; i++) {\n                      var el = _this3.selectedAttributes[i];\n                      var endpointAttributes = \"/api/device-attribute/\";\n                      apiService(endpointAttributes, \"POST\", {\n                        txtKeyAttribute: el.txtKeyAttribute,\n                        txtNameAttribute: el.txtNameAttribute,\n                        txtValueAttribute: el.txtValueDefault,\n                        txtValueType: el.txtValueType,\n                        txtParameter: el.txtParameter,\n                        idDevice: response.id\n                      });\n                    } // UPDATE ATTRIBUTE\n\n\n                    for (var _i = 0; _i < _this3.filteredAttributes.length; _i++) {\n                      var _el = _this3.filteredAttributes[_i];\n\n                      var _endpointAttributes = \"/api/device-attribute/\".concat(_el.id, \"/\");\n\n                      apiService(_endpointAttributes, \"PUT\", {\n                        txtKeyAttribute: _el.txtKeyAttribute,\n                        txtNameAttribute: _el.txtNameAttribute,\n                        txtValueAttribute: _el.txtValueAttribute,\n                        txtValueType: _el.txtValueType,\n                        txtParameter: _el.txtParameter,\n                        idDevice: response.id\n                      });\n                    }\n\n                    ;\n                    _this3.selectedDevice = false;\n                    _this3.attributes = [];\n\n                    _this3.emptyInput();\n\n                    _this3.getDevices();\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateDevice() {\n        return _updateDevice.apply(this, arguments);\n      }\n\n      return updateDevice;\n    }(),\n    updateDeviceGrid: function () {\n      var _updateDeviceGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/device/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtSerialNumber: event.node.data.txtSerialNumber,\n                  txtParameter: event.node.data.txtParameter,\n                  idDevicePosition: event.node.data.idDevicePosition,\n                  txtComment: event.node.data.txtComment\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateDeviceGrid(_x) {\n        return _updateDeviceGrid.apply(this, arguments);\n      }\n\n      return updateDeviceGrid;\n    }(),\n    updateAttributeGrid: function () {\n      var _updateAttributeGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                endpoint = \"/api/device-attribute/\".concat(event.node.data.id, \"/\");\n                _context3.prev = 1;\n                _context3.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtKeyAttribute: event.node.data.txtKeyAttribute,\n                  txtNameAttribute: event.node.data.txtNameAttribute,\n                  txtValueAttribute: event.node.data.txtValueAttribute,\n                  txtValueType: event.node.data.txtValueType,\n                  txtParameter: event.node.data.txtParameter\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 6]]);\n      }));\n\n      function updateAttributeGrid(_x2) {\n        return _updateAttributeGrid.apply(this, arguments);\n      }\n\n      return updateAttributeGrid;\n    }(),\n    openModal: function openModal(params) {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Device? => \" + params.node.data.txtSerialNumber, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.deleteDevice(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    openModal1: function openModal1(params) {\n      var _this5 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Do you really want to delete the Attribute? => \" + params.node.data.txtNameAttribute, {\n        title: \"Please Confirm\",\n        size: \"m\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this5.deleteAttribute(params);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    deleteDevice: function () {\n      var _deleteDevice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(params) {\n        var _this6 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                endpoint = \"/api/device/\".concat(params.node.data.id, \"/\");\n                _context4.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    _this6.getDevices();\n                  } else {\n                    _this6.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteDevice(_x3) {\n        return _deleteDevice.apply(this, arguments);\n      }\n\n      return deleteDevice;\n    }(),\n    deleteAttribute: function () {\n      var _deleteAttribute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(params) {\n        var _this7 = this;\n\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                endpoint = \"/api/device-attribute/\".concat(params.node.data.id, \"/\");\n                _context5.next = 3;\n                return apiService(endpoint, \"DELETE\").then(function (response) {\n                  if (response != 'ERROR') {\n                    var id = window.localStorage.getItem('selDevice');\n\n                    _this7.getAttributes(id);\n                  } else {\n                    _this7.$bvToast.toast(\"Can't delete this entry. Please check if there are dependent entries. Please delete those first!\", {\n                      title: 'DELETE WARNING',\n                      variant: 'danger',\n                      autoHideDelay: 6000,\n                      appendToast: false\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function deleteAttribute(_x4) {\n        return _deleteAttribute.apply(this, arguments);\n      }\n\n      return deleteAttribute;\n    }(),\n    emptyInput: function emptyInput(event) {\n      this.selectedAttributes = [];\n      this.SNumber = this.DPosition = this.Model = this.IMEI = this.Comment = null;\n\n      if (event != 'add') {\n        this.show = false;\n      } else {\n        this.updateStatus = false;\n        this.show = !this.show;\n      }\n    },\n    getDevices: function getDevices() {\n      var _this8 = this;\n\n      if (!this.error) {\n        this.devices = [];\n        var endpoint = \"/api/device-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this8$devices;\n\n          (_this8$devices = _this8.devices).push.apply(_this8$devices, _toConsumableArray(data.results));\n\n          _this8.rowData = _this8.devices;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getModels: function getModels() {\n      var _this9 = this;\n\n      if (!this.error) {\n        this.models = [];\n        var endpoint = \"/api/model/\";\n        apiService(endpoint).then(function (data) {\n          var _this9$models;\n\n          (_this9$models = _this9.models).push.apply(_this9$models, _toConsumableArray(data.results));\n\n          _this9.optionsModels = _this9.models;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getAttributes: function getAttributes(val) {\n      var _this10 = this;\n\n      if (!this.error) {\n        this.attributes = [];\n        var endpoint = \"/api/device-attribute/\";\n        apiService(endpoint).then(function (data) {\n          var _this10$attributes;\n\n          (_this10$attributes = _this10.attributes).push.apply(_this10$attributes, _toConsumableArray(data.results));\n\n          if (_this10.updateId != null) {\n            _this10.filteredAttributes = _this10.attributes.filter(function (e) {\n              return e.idDevice == _this10.updateId;\n            });\n          }\n\n          if (val != null) {\n            _this10.rowData1 = _this10.attributes.filter(function (e) {\n              return e.idDevice == val;\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getTemplateAttributes: function getTemplateAttributes() {\n      var _this11 = this;\n\n      if (!this.error) {\n        this.tempAttributes = [];\n        var endpoint = \"/api/device-template-attribute/\";\n        apiService(endpoint).then(function (data) {\n          var _this11$tempAttribute;\n\n          (_this11$tempAttribute = _this11.tempAttributes).push.apply(_this11$tempAttribute, _toConsumableArray(data.results));\n\n          _this11.optionAttributes = _this11.tempAttributes;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDevicePosition: function getDevicePosition() {\n      var _this12 = this;\n\n      if (!this.error) {\n        this.positions = [];\n        var endpoint = \"/api/device-position/\";\n        apiService(endpoint).then(function (data) {\n          var _this12$positions;\n\n          (_this12$positions = _this12.positions).push.apply(_this12$positions, _toConsumableArray(data.results));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this13 = this;\n\n      var result = [{\n        name: 'Edit Device',\n        action: function action() {\n          return _this13.editItemMenu(params);\n        }\n      }, 'separator', {\n        name: 'Delete Device',\n        action: function action() {\n          return _this13.openModal(params);\n        }\n      }, 'export'];\n      return result;\n    },\n    getContextMenu1: function getContextMenu1(params) {\n      var _this14 = this;\n\n      var result = [{\n        name: 'Delete Attribute',\n        action: function action() {\n          return _this14.openModal1(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    },\n    getSelectedDevice: function getSelectedDevice(event) {\n      if (window.localStorage.getItem('selDevice') != null) {\n        var el = parseInt(localStorage.getItem('selDevice'));\n        event.api.forEachNode(function (rowNode) {\n          rowNode.setSelected(rowNode.data.id === el);\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.getDevices();\n    this.getModels();\n    this.getDateToday();\n    this.getTemplateAttributes();\n    this.getDevicePosition();\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    window.localStorage.removeItem('selDevice');\n    next();\n  }\n};",null]}