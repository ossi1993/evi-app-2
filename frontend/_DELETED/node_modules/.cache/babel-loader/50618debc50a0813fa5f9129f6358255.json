{"remainingRequest":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\babel-loader\\lib\\index.js!E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\src\\views\\app\\apps\\scrumboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\src\\views\\app\\apps\\scrumboard.vue","mtime":1575914052000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/Nextcloud/STORAGE/KoopProjekteSTO/030_DEVELOPMENT/evi/frontend/source/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  computed: _objectSpread({}, mapGetters(['getBoardList'])),\n  data: function data() {\n    return {};\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions([\"addBoard\", \"editBoardList\"])), {}, {\n    addBoardPage: function addBoardPage() {\n      // this.$router.push('add-scrumboard');\n      this.addBoard();\n    },\n    editBoardPage: function editBoardPage(data) {\n      this.editBoardList(data);\n      this.$router.push('edit-scrumboard');\n      console.log(data);\n    }\n  })\n};",{"version":3,"sources":["scrumboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,cAAA,CAAA,CADA,CADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA,EAAA;AAGA,GARA;AASA,EAAA,OAAA,kCACA,UAAA,CAAA,CAAA,UAAA,EAAA,eAAA,CAAA,CADA;AAEA,IAAA,YAFA,0BAEA;AACA;AACA,WAAA,QAAA;AACA,KALA;AAMA,IAAA,aANA,yBAMA,IANA,EAMA;AACA,WAAA,aAAA,CAAA,IAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,iBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AAEA;AAXA;AATA,CAAA","sourcesContent":["<template>\n    <div>\n        <breadcumb :page=\"'Scrumboard'\" :folder=\"'App'\" />\n\n        <b-row>\n            <b-col md=\"3\" class=\"mb-30\">\n                <b-card @click=\"addBoardPage\" bg-variant=\"primary\" text-variant=\"white\"  class=\"text-center cursor-pointer\">\n                    <div class=\"mb-30\"> \n                        <i class=\"i-Add text-40\"></i>\n                    </div>\n                    <b-card-text class=\"text-15\">Create New Board</b-card-text>\n                </b-card>\n            </b-col>\n            <!-- <b-col md=\"3\" class=\"mb-30\">\n                <b-card  bg-variant=\"\" text-variant=\"\"  class=\"text-center cursor-pointer\">\n                    <div class=\"mb-30\"> \n                        <i class=\"i-Bar-Chart-3 text-40\"></i>\n                    </div>\n                    <b-card-text class=\"text-15\">Untitled Board</b-card-text>\n                </b-card>\n            </b-col> -->\n            <b-col \n                md=\"3\" class=\"mb-30\"\n                v-for=\"(boardList, key) in getBoardList\" :key=\"key\"\n                @click=\"editBoardPage(boardList)\"\n            >\n                <b-card \n                    class=\"text-center cursor-pointer\"\n                    \n                >\n                    <div class=\"mb-30\"> \n                        <i class=\"i-Bar-Chart-3 text-40\"></i>\n                    </div>\n                    <b-card-text class=\"text-15\">{{ boardList.title }}</b-card-text>\n                </b-card>\n            </b-col>\n        </b-row>\n    </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n    computed:{\n        ...mapGetters(['getBoardList'])\n    },\n    data(){\n        return{\n\n        }\n    },\n    methods: {\n        ...mapActions([\"addBoard\",\"editBoardList\"]),\n        addBoardPage(){\n            // this.$router.push('add-scrumboard');\n            this.addBoard();\n        },\n        editBoardPage(data){\n            this.editBoardList(data);\n            this.$router.push('edit-scrumboard');\n            console.log(data);\n            \n        }\n        \n    }\n}\n</script>"],"sourceRoot":"src/views/app/apps"}]}