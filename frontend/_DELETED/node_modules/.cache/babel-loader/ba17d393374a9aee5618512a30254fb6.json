{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\src\\views\\app\\form\\formComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\src\\views\\app\\form\\formComponent.vue","mtime":1568332422000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, sameAs, minLength } from \"vuelidate/lib/validators\";\nexport default {\n  metaInfo: {\n    // if no subcomponents specify a metaInfo.title, this title will be used\n    title: \"Form Component\"\n  },\n  data: function data() {\n    return {\n      fName: \"\",\n      lName: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      submitStatus: null,\n      peopleAdd: [{\n        multipleName: \"Johnn\"\n      }, {\n        multipleName: \"\"\n      }]\n    };\n  },\n  validations: {\n    fName: {\n      required: required,\n      minLength: minLength(4)\n    },\n    lName: {\n      required: required,\n      minLength: minLength(4)\n    },\n    password: {\n      required: required,\n      minLength: minLength(5)\n    },\n    repeatPassword: {\n      sameAsPassword: sameAs(\"password\")\n    } // add input\n    // peopleAdd: {\n    //   required,\n    //   minLength: minLength(3),\n    //   $each: {\n    //     multipleName: {\n    //       required,\n    //       minLength: minLength(5)\n    //     }\n    //   }\n    // },\n    // validationsGroup:['peopleAdd.multipleName']\n\n  },\n  methods: {\n    //   validate form\n    submit: function submit() {\n      var _this = this;\n\n      console.log(\"submit!\");\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        this.submitStatus = \"ERROR\";\n      } else {\n        // do your submit logic here\n        this.submitStatus = \"PENDING\";\n        setTimeout(function () {\n          _this.submitStatus = \"OK\";\n        }, 1000);\n      }\n    },\n    makeToast: function makeToast() {\n      var variant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.$bvToast.toast(\"Please fill the form correctly.\", {\n        title: \"Variant \".concat(variant || \"default\"),\n        variant: variant,\n        solid: true\n      });\n    },\n    makeToastTwo: function makeToastTwo() {\n      var variant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.$bvToast.toast(\"Successfully Submitted\", {\n        title: \"Variant \".concat(variant || \"default\"),\n        variant: variant,\n        solid: true\n      });\n    },\n    inputSubmit: function inputSubmit() {\n      console.log(\"submitted\");\n    }\n  }\n};",{"version":3,"sources":["formComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA,SAAA,QAAA,EAAA,MAAA,EAAA,SAAA,QAAA,0BAAA;AACA,eAAA;AACA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,KAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,cAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA,CACA;AACA,QAAA,YAAA,EAAA;AADA,OADA,EAIA;AACA,QAAA,YAAA,EAAA;AADA,OAJA;AANA,KAAA;AAeA,GArBA;AAsBA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA,KATA;AAaA,IAAA,cAAA,EAAA;AACA,MAAA,cAAA,EAAA,MAAA,CAAA,UAAA;AADA,KAbA,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5BA,GAtBA;AAqDA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,MAFA,oBAEA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AAEA,WAAA,EAAA,CAAA,MAAA;;AACA,UAAA,KAAA,EAAA,CAAA,QAAA,EAAA;AACA,aAAA,YAAA,GAAA,OAAA;AACA,OAFA,MAEA;AACA;AACA,aAAA,YAAA,GAAA,SAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,YAAA,GAAA,IAAA;AACA,SAFA,EAEA,IAFA,CAAA;AAGA;AACA,KAfA;AAgBA,IAAA,SAhBA,uBAgBA;AAAA,UAAA,OAAA,uEAAA,IAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,iCAAA,EAAA;AACA,QAAA,KAAA,oBAAA,OAAA,IAAA,SAAA,CADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA,KAtBA;AAuBA,IAAA,YAvBA,0BAuBA;AAAA,UAAA,OAAA,uEAAA,IAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,wBAAA,EAAA;AACA,QAAA,KAAA,oBAAA,OAAA,IAAA,SAAA,CADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA,KA7BA;AA+BA,IAAA,WA/BA,yBA+BA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AACA;AAjCA;AArDA,CAAA","sourcesContent":["<template>\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Validation Form'\" :folder=\"'Forms'\" />\n\n    <b-row>\n      <b-col md=\"6\">\n        <b-card title=\"Validate Form\">\n          <b-form @submit.prevent=\"submit\">\n            <b-form-group label=\"First Name\">\n              <b-form-input\n                class=\"mb-2\"\n                label=\"Name\"\n                placeholder=\"Enter First Name\"\n                v-model.trim=\"$v.fName.$model\"\n              >\n              </b-form-input>\n\n              <b-alert\n                show\n                variant=\"danger\"\n                class=\"error col-md-6 mt-1\"\n                v-if=\"!$v.fName.minLength\"\n                >Name must have at least\n                {{ $v.fName.$params.minLength.min }} letters.</b-alert\n              >\n            </b-form-group>\n            <b-form-group label=\"Last Name\">\n              <b-form-input\n                class=\"mb-2\"\n                label=\"Name\"\n                placeholder=\"Enter Your Last Name\"\n                v-model.trim=\"$v.lName.$model\"\n              >\n              </b-form-input>\n\n              <b-alert\n                show\n                variant=\"danger\"\n                class=\"error col-md-6 mt-1\"\n                v-if=\"!$v.lName.minLength\"\n                >Name must have at least\n                {{ $v.lName.$params.minLength.min }} letters.</b-alert\n              >\n            </b-form-group>\n            <b-form-group label=\"Email\">\n              <b-form-input\n                class=\"mb-2\"\n                label=\"Name\"\n                placeholder=\"email address\"\n                type=\"email\"\n              >\n              </b-form-input>\n            </b-form-group>\n\n            <b-form-group label=\"Password\">\n              <b-form-input\n                class=\"mb-2\"\n                label=\"Name\"\n                type=\"password\"\n                v-model.trim=\"$v.password.$model\"\n              >\n              </b-form-input>\n\n              <b-alert\n                show\n                variant=\"danger\"\n                class=\"error col-md-6 mt-1\"\n                v-if=\"!$v.password.minLength\"\n                >Minimum\n                {{ $v.password.$params.minLength.min }} charaters.</b-alert\n              >\n            </b-form-group>\n\n            <b-form-group label=\"Repeat Password\">\n              <b-form-input\n                class=\"mb-2\"\n                label=\"Name\"\n                type=\"password\"\n                v-model.trim=\"$v.repeatPassword.$model\"\n              >\n              </b-form-input>\n\n              <b-alert\n                show\n                variant=\"danger\"\n                class=\"error col-md-6 mt-1\"\n                v-if=\"!$v.repeatPassword.sameAsPassword\"\n                >Passwords must be identical.</b-alert\n              >\n            </b-form-group>\n\n            <b-button\n              type=\"submit\"\n              variant=\"primary\"\n              :disabled=\"submitStatus === 'PENDING'\"\n              >Submit</b-button\n            >\n\n            <p v-once class=\"typo__p\" v-if=\"submitStatus === 'OK'\">\n              {{ makeToastTwo(\"success\") }}\n            </p>\n            <p v-once class=\"typo__p\" v-if=\"submitStatus === 'ERROR'\">\n              {{ makeToast(\"danger\") }}\n            </p>\n            <div v-once class=\"typo__p\" v-if=\"submitStatus === 'PENDING'\">\n              <div class=\"spinner sm spinner-primary mt-3\"></div>\n            </div>\n          </b-form>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n\n<script>\nimport { required, sameAs, minLength } from \"vuelidate/lib/validators\";\nexport default {\n  metaInfo: {\n    // if no subcomponents specify a metaInfo.title, this title will be used\n    title: \"Form Component\"\n  },\n  data() {\n    return {\n      fName: \"\",\n      lName: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      submitStatus: null,\n      peopleAdd: [\n        {\n          multipleName: \"Johnn\"\n        },\n        {\n          multipleName: \"\"\n        }\n      ]\n    };\n  },\n  validations: {\n    fName: {\n      required,\n      minLength: minLength(4)\n    },\n    lName: {\n      required,\n      minLength: minLength(4)\n    },\n    password: {\n      required,\n      minLength: minLength(5)\n    },\n    repeatPassword: {\n      sameAsPassword: sameAs(\"password\")\n    }\n\n    // add input\n    // peopleAdd: {\n    //   required,\n    //   minLength: minLength(3),\n    //   $each: {\n    //     multipleName: {\n    //       required,\n    //       minLength: minLength(5)\n    //     }\n    //   }\n    // },\n    // validationsGroup:['peopleAdd.multipleName']\n  },\n\n  methods: {\n    //   validate form\n    submit() {\n      console.log(\"submit!\");\n\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        this.submitStatus = \"ERROR\";\n      } else {\n        // do your submit logic here\n        this.submitStatus = \"PENDING\";\n        setTimeout(() => {\n          this.submitStatus = \"OK\";\n        }, 1000);\n      }\n    },\n    makeToast(variant = null) {\n      this.$bvToast.toast(\"Please fill the form correctly.\", {\n        title: `Variant ${variant || \"default\"}`,\n        variant: variant,\n        solid: true\n      });\n    },\n    makeToastTwo(variant = null) {\n      this.$bvToast.toast(\"Successfully Submitted\", {\n        title: `Variant ${variant || \"default\"}`,\n        variant: variant,\n        solid: true\n      });\n    },\n\n    inputSubmit() {\n      console.log(\"submitted\");\n    }\n  }\n};\n</script>\n<style>\n.spinner.sm {\n  height: 2em;\n  width: 2em;\n}\n</style>\n"],"sourceRoot":"src/views/app/form"}]}