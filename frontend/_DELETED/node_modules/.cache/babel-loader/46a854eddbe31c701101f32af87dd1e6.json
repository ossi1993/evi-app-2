{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\dashboards\\dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\dashboards\\dashboard.vue","mtime":1604220996125},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Dashboard\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES \"OPEN ORDERS\"\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n      paginationPageSize: null,\n      // AG-GRID VARIABLES \"ACTIVE INSPECTIONS\"\n      gridOptions1: null,\n      gridApi1: null,\n      columnApi1: null,\n      columnDefs1: null,\n      rowData1: null,\n      defaultColDef1: null,\n      excelStyles1: null,\n      paginationPageSize1: null,\n      selectedInspection: false,\n      // AG-GRID VARIABLES \"DEVICES LAST 30 DAYS\"\n      gridOptions2: null,\n      gridApi2: null,\n      columnApi2: null,\n      columnDefs2: null,\n      rowData2: null,\n      defaultColDef2: null,\n      excelStyles2: null,\n      paginationPageSize2: null,\n      // VUE VARIABLES\n      suppliers: [],\n      devices: [],\n      orders: [],\n      inspections: [],\n      ONumber: null,\n      DatOrder: null,\n      DatDelivery: null,\n      OType: null,\n      CNumber: null,\n      DelStatus: null,\n      Supplier: null,\n      date: null,\n      error: false,\n      optionSuppliers: [],\n      optionInspections: [],\n      optionTypes: [{\n        value: 'Sample',\n        text: 'Sample'\n      }, {\n        value: 'Customer',\n        text: 'Customer'\n      }],\n      optionStatus: [{\n        value: 'Delivered',\n        text: 'Delivered'\n      }, {\n        value: 'Not Delivered',\n        text: 'Not Delivered'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.gridOptions1 = {};\n    this.gridOptions2 = {};\n    this.columnDefs = [{\n      headerName: \"Order Number\",\n      field: \"txtOrderNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Order Date\",\n      field: \"datOrder\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Date\",\n      field: \"datDelivery\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Order Type\",\n      field: \"txtOrderType\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Charge Number\",\n      field: \"txtChargeNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Status\",\n      field: \"txtDeliveryStatus\",\n      filter: 'agTextColumnFilter',\n      editable: true,\n      cellEditor: 'agRichSelectCellEditor',\n      cellEditorParams: {\n        cellHeight: 50,\n        values: ['Delivered', 'Not Delivered']\n      }\n    }, {\n      headerName: \"Supplier\",\n      field: \"idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.columnDefs1 = [{\n      headerName: \"Inspection Number\",\n      field: \"txtInspectionNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Status\",\n      field: \"txtInspectionStatus\",\n      filter: 'agTextColumnFilter',\n      editable: true,\n      cellEditor: 'agRichSelectCellEditor',\n      cellEditorParams: {\n        cellHeight: 50,\n        values: ['Work In Progress', 'On Hold', 'Complete', 'Declined']\n      }\n    }, {\n      headerName: \"Type\",\n      field: \"txtInspectionType\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Inspector\",\n      field: \"txtInspector\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Date\",\n      field: \"datInspection\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivered on\",\n      field: \"datDeliveredOn\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Requested on\",\n      field: \"datRequestedOn\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Requested by\",\n      field: \"txtRequestedBy\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Release\",\n      field: \"txtRelease\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Release by\",\n      field: \"txtReleaseBy\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Memo\",\n      field: \"txtComment\",\n      filter: 'agTextColumnFilter'\n    }], this.columnDefs2 = [{\n      headerName: \"Model Name\",\n      field: \"idModel.txtModelName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Serial Number\",\n      field: \"txtSerialNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Device Position\",\n      field: \"txtDevicePosition\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Manufacturer\",\n      field: \"idModel.idManufacturer.txtManufacturerName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Supplier\",\n      field: \"idModel.idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.defaultColDef = {\n      editable: false,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.defaultColDef1 = {\n      editable: false,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.defaultColDef2 = {\n      flex: 1,\n      editable: false,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.paginationPageSize1 = 10;\n    this.paginationPageSize2 = 10;\n  },\n  methods: {\n    saveState: function saveState(params) {\n      localStorage.setItem('openOrders_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    saveState1: function saveState1(params) {\n      localStorage.setItem('activeInspections_columnStats', JSON.stringify(this.gridOptions1.columnApi.getColumnState()));\n    },\n    saveState2: function saveState2(params) {\n      localStorage.setItem('lastDevices_columnStats', JSON.stringify(this.gridOptions2.columnApi.getColumnState()));\n    },\n    restoreState: function restoreState() {\n      localStorage.setItem('openOrders_columnStats', null);\n    },\n    restoreState1: function restoreState1() {\n      localStorage.setItem('activeInspections_columnStats', null);\n    },\n    restoreState2: function restoreState2() {\n      localStorage.setItem('lastDevices_columnStats', null);\n    },\n    // OPEN ORDERS\n    onGridReady: function onGridReady(params) {\n      if (JSON.parse(localStorage.getItem('openOrders_columnStats')) != null) {\n        this.gridApi = params.api;\n        params.columnApi.setColumnState(JSON.parse(localStorage.getItem('openOrders_columnStats')));\n        this.gridApi.setQuickFilter(\"Not Delivered\");\n      } else {\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        this.gridApi.setQuickFilter(\"Not Delivered\");\n      }\n    },\n    // ACTIVE INSPECTIONS\n    onGridReady1: function onGridReady1(params) {\n      if (JSON.parse(localStorage.getItem('activeInspections_columnStats')) != null) {\n        this.gridApi1 = params.api;\n        params.columnApi.setColumnState(JSON.parse(localStorage.getItem('activeInspections_columnStats')));\n      } else {\n        this.gridApi1 = params.api;\n        this.gridColumnApi1 = params.columnApi;\n      }\n    },\n    // DEVICES LAST 30 DAYS\n    onGridReady2: function onGridReady2(params) {\n      if (JSON.parse(localStorage.getItem('lastDevices_columnStats')) != null || JSON.parse(localStorage.getItem('lastDevices_columnStats')) != undefined) {\n        this.gridApi2 = params.api;\n        params.columnApi.setColumnState(JSON.parse(localStorage.getItem('lastDevices_columnStats')));\n      } else {\n        this.gridApi2 = params.api;\n        this.gridColumnApi2 = params.columnApi;\n      }\n    },\n    onBtExport: function onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onBtExport1: function onBtExport1() {\n      this.gridApi1.exportDataAsExcel({});\n    },\n    onBtExport2: function onBtExport2() {\n      this.gridApi2.exportDataAsExcel({});\n    },\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onPageSizeChanged1: function onPageSizeChanged1(newPageSize) {\n      var value = document.getElementById('page-size-1').value;\n      this.gridApi1.paginationSetPageSize(Number(value));\n    },\n    onPageSizeChanged2: function onPageSizeChanged2(newPageSize) {\n      var value = document.getElementById('page-size-2').value;\n      this.gridApi2.paginationSetPageSize(Number(value));\n    },\n    editInspectionMenu: function editInspectionMenu(params) {\n      localStorage.setItem('InspectionID', params.node.data.id);\n      this.$router.push('inspection/inspection/');\n    },\n    editOrderMenu: function editOrderMenu(params) {\n      window.localStorage.setItem('selOrder', params.node.data.id);\n      this.$router.push('order/order-list');\n    },\n    editDeviceMenu: function editDeviceMenu(params) {\n      window.localStorage.setItem('selDevice', params.node.data.id);\n      this.$router.push('device/device-list');\n    },\n    updateOrderGrid: function () {\n      var _updateOrderGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/order/\".concat(event.node.data.id, \"/\");\n                _context.prev = 1;\n                _context.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtOrderNumber: event.node.data.txtOrderNumber,\n                  datOrder: event.node.data.datOrder,\n                  datDelivery: event.node.data.datDelivery,\n                  txtOrderType: event.node.data.txtOrderType,\n                  txtChargeNumber: event.node.data.txtChargeNumber,\n                  txtDeliveryStatus: event.node.data.txtDeliveryStatus,\n                  txtComment: event.node.data.txtComment\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 6]]);\n      }));\n\n      function updateOrderGrid(_x) {\n        return _updateOrderGrid.apply(this, arguments);\n      }\n\n      return updateOrderGrid;\n    }(),\n    updateInspectionGrid: function () {\n      var _updateInspectionGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                endpoint = \"/api/inspection/\".concat(event.node.data.id, \"/\");\n                _context2.prev = 1;\n                _context2.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtInspectionNumber: event.node.data.txtInspectionNumber,\n                  txtInspectionStatus: event.node.data.txtInspectionStatus,\n                  txtInspectionType: event.node.data.txtInspectionType,\n                  txtInspector: event.node.data.txtInspector,\n                  datInspection: event.node.data.datInspection,\n                  datDeliveredOn: event.node.data.datDeliveredOn,\n                  datRequestedOn: event.node.data.datRequestedOn,\n                  txtRequestedBy: event.node.data.txtRequestedBy,\n                  txtLink: event.node.data.txtLink,\n                  txtComment: event.node.data.txtComment\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 6]]);\n      }));\n\n      function updateInspectionGrid(_x2) {\n        return _updateInspectionGrid.apply(this, arguments);\n      }\n\n      return updateInspectionGrid;\n    }(),\n    getUserInfo: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var endpoint, data, requestUser, requestSuperuser;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // add the username of the logged in user to localStorage\n                endpoint = \"/api/user/\";\n                _context3.next = 3;\n                return apiService(endpoint);\n\n              case 3:\n                data = _context3.sent;\n                requestUser = data[\"username\"];\n                requestSuperuser = data[\"is_superuser\"];\n                window.localStorage.setItem(\"username\", requestUser);\n                window.localStorage.setItem(\"superuser\", requestSuperuser);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }(),\n    getOrder: function getOrder() {\n      var _this = this;\n\n      if (!this.error) {\n        this.orders = [];\n        var endpoint = \"/api/order-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this$orders;\n\n          (_this$orders = _this.orders).push.apply(_this$orders, _toConsumableArray(data.results));\n\n          _this.rowData = _this.orders;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getSup: function getSup() {\n      var _this2 = this;\n\n      if (!this.error) {\n        this.suppliers = [];\n        var endpoint = \"/api/supplier/\";\n        apiService(endpoint).then(function (data) {\n          var _this2$suppliers;\n\n          (_this2$suppliers = _this2.suppliers).push.apply(_this2$suppliers, _toConsumableArray(data.results));\n\n          _this2.optionSuppliers = _this2.suppliers;\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getDevices: function getDevices() {\n      var _this3 = this;\n\n      if (!this.error) {\n        this.devices = [];\n        var endpoint = \"/api/device-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this3$devices;\n\n          (_this3$devices = _this3.devices).push.apply(_this3$devices, _toConsumableArray(data.results));\n\n          _this3.rowData2 = _this3.devices.filter(function (el) {\n            var diff = new Date() - new Date(el.datCreated);\n            var diffDays = Math.ceil(diff / (1000 * 60 * 60 * 24));\n            return Number(diffDays) <= 30 ? el.datCreated : false;\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getInspections: function getInspections() {\n      var _this4 = this;\n\n      if (!this.error) {\n        this.inspections = [];\n        var endpoint = \"/api/inspection/\";\n        apiService(endpoint).then(function (data) {\n          var _this4$inspections;\n\n          (_this4$inspections = _this4.inspections).push.apply(_this4$inspections, _toConsumableArray(data.results));\n\n          _this4.rowData1 = _this4.inspections.filter(function (el) {\n            return el.txtInspectionStatus == 'Work In Progress' || el.txtInspectionStatus == 'On Hold';\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    },\n    getContextMenu: function getContextMenu(params) {\n      var _this5 = this;\n\n      var result = [{\n        name: 'Edit Order',\n        action: function action() {\n          return _this5.editOrderMenu(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    },\n    getContextMenu1: function getContextMenu1(params) {\n      var _this6 = this;\n\n      var result = [{\n        name: 'Edit Inspection',\n        action: function action() {\n          return _this6.editInspectionMenu(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    },\n    getContextMenu2: function getContextMenu2(params) {\n      var _this7 = this;\n\n      var result = [{\n        name: 'Edit Device',\n        action: function action() {\n          return _this7.editDeviceMenu(params);\n        }\n      }, 'separator', 'export'];\n      return result;\n    }\n  },\n  created: function created() {\n    this.getSup();\n    this.getOrder();\n    this.getDevices();\n    this.getInspections();\n    this.getUserInfo();\n  }\n};",null]}