{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-import.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-import.vue","mtime":1600268375670},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport XLSX from 'xlsx';\nexport default {\n  metaInfo: {\n    title: \"Import\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataImport: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      rowDataStructured: null,\n      templates: [],\n      show: false,\n      visible: false,\n      date: null,\n      next: null,\n      error: false,\n      file: null,\n      excelFile: null,\n      dataImport: '',\n      csv: null,\n      checked: true\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.rowData = [];\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Manufacturer\",\n      field: \"MANUFACTURER\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true,\n      headerCheckboxSelection: true\n    }, {\n      headerName: \"Model\",\n      field: \"MODEL\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Supplier\",\n      field: \"SUPPLIER\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Article Number\",\n      field: \"ARTICLE_NUMBER\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Description\",\n      field: \"DESCRIPTION\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Type\",\n      field: \"TYPE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Version\",\n      field: \"VERSION\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Glue Type\",\n      field: \"GLUE_TYPE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Protection Type\",\n      field: \"PROTECTION_TYPE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Outline\",\n      field: \"OUTLINE\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Medium\",\n      field: \"MEDIUM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Width in mm\",\n      field: \"WIDTH_IN_MM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Length in mm\",\n      field: \"LENGTH_IN_MM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Thickness Glass in µm\",\n      field: \"THICKNESS_GLASS_IN_MYM\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Cost in USD\",\n      field: \"COST_IN_USD\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"GTIN/EAN\",\n      field: \"GTIN_EAN\",\n      filter: 'agTextColumnFilter'\n    }], this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n    this.show = false;\n  },\n  methods: {\n    onPageSizeChanged: function onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    deleteInspection: function deleteInspection() {\n      var index = this.gridApi.getSelectedNodes()[0].childIndex;\n      this.$delete(this.rowData, index);\n      this.show = this.show ? false : true;\n    },\n    onGridReady: function onGridReady(params) {},\n    onChangeInput: function onChangeInput(e) {\n      this.importExcel(e);\n    },\n    structureGridItems: function structureGridItems() {\n      var element = this.rowData;\n      var obj = [];\n      var arr = {};\n\n      for (var i = 0; i < element.length; i++) {\n        var el = element[i];\n        arr = {\n          txtArticlenumber: el.ARTICLE_NUMBER,\n          txtDescription: el.DESCRIPTION,\n          txtType: el.TYPE,\n          txtVersion: el.VERSION,\n          curCost: el.COST_IN_USD,\n          txtGtinEan: el.GTIN_EAN,\n          txtOutline: el.OUTLINE,\n          attributes: []\n        };\n        var attGL = {\n          txtKeyAttribute: 'IT_GL_TY',\n          txtNameAttribute: 'Glue Type',\n          txtValueAttribute: el.GLUE_TYPE,\n          txtValueType: 'STRING',\n          txtMeasureUnit: ''\n        };\n        var attPT = {\n          txtKeyAttribute: 'IT_PT_TY',\n          txtNameAttribute: 'Protection Type',\n          txtValueAttribute: el.PROTECTION_TYPE,\n          txtValueType: 'STRING',\n          txtMeasureUnit: ''\n        };\n        var attMD = {\n          txtKeyAttribute: 'IT_MD',\n          txtNameAttribute: 'Medium',\n          txtValueAttribute: el.MEDIUM,\n          txtValueType: 'STRING',\n          txtMeasureUnit: ''\n        };\n        var attWD = {\n          txtKeyAttribute: 'IT_WD',\n          txtNameAttribute: 'Width',\n          txtValueAttribute: el.WIDTH_IN_MM,\n          txtValueType: 'FLOAT',\n          txtMeasureUnit: 'mm'\n        };\n        var attLE = {\n          txtKeyAttribute: 'IT_LE',\n          txtNameAttribute: 'Length',\n          txtValueAttribute: el.LENGTH_IN_MM,\n          txtValueType: 'FLOAT',\n          txtMeasureUnit: 'mm'\n        };\n        var attTH = {\n          txtKeyAttribute: 'IT_TH',\n          txtNameAttribute: 'Thickness',\n          txtValueAttribute: el.THICKNESS_GLASS_IN_MYM,\n          txtValueType: 'FLOAT',\n          txtMeasureUnit: 'µm'\n        };\n        if (el.GLUE_TYPE != '') arr.attributes.push(attGL);\n        if (el.PROTECTION_TYPE != '') arr.attributes.push(attPT);\n        if (el.MEDIUM != '') arr.attributes.push(attMD);\n        if (el.WIDTH_IN_MM != '') arr.attributes.push(attWD);\n        if (el.LENGTH_IN_MM != '') arr.attributes.push(attLE);\n        if (el.THICKNESS_GLASS_IN_MYM != '') arr.attributes.push(attTH);\n        obj.push(arr);\n      }\n\n      this.rowDataStructured = obj;\n    },\n    createItems: function () {\n      var _createItems = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var element, _loop, i;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.structureGridItems();\n\n              case 2:\n                element = this.rowDataStructured;\n                console.log(this.rowDataStructured);\n                console.log(element);\n\n                _loop = function _loop(i) {\n                  var el = element[i];\n                  console.log(el.txtArticlenumber);\n                  var endpoint = \"/api/item/\";\n                  apiService(endpoint, \"POST\", {\n                    txtArticlenumber: el.txtArticlenumber,\n                    txtDescription: el.txtDescription,\n                    txtType: el.txtType,\n                    txtVersion: el.txtVersion,\n                    curCost: el.curCost,\n                    txtGtinEan: el.txtGtinEan,\n                    txtOutline: el.txtOutline,\n                    txtLink: null,\n                    deviceModels: []\n                  }).then(function (response) {\n                    if (response != 'ERROR') for (var g = 0; g < el.attributes.length; g++) {\n                      var att = el.attributes[g];\n                      var endpointAttribute = \"/api/item-attribute/\";\n                      apiService(endpointAttribute, \"POST\", {\n                        txtKeyAttribute: att.txtKeyAttribute,\n                        txtNameAttribute: att.txtNameAttribute,\n                        txtValueAttribute: att.txtValueAttribute,\n                        txtValueType: att.txtValueType,\n                        txtMeasureUnit: att.txtMeasureUnit,\n                        idItem: response.id\n                      });\n                    }\n                  });\n                };\n\n                for (i = 0; i < element.length; i++) {\n                  _loop(i);\n                }\n\n                this.$router.push('item-list');\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createItems() {\n        return _createItems.apply(this, arguments);\n      }\n\n      return createItems;\n    }()\n  }\n};",{"version":3,"sources":["item-import.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Import'\" :folder=\"'Item'\" />\n\n    <div class=\"row mt-5\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridImport\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @grid-ready=\"onGridReady\"\n                @row-selected=\"onRowSelected\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select v-on:change=\"onPageSizeChanged()\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"createItems\" class=\"ml-3\" size=\"sm\" variant=\"outline-info\">Create Items</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-row class=\"ml-1 mr-3 mb-3\">\n      <b-collapse v-model=\"show\">\n        <b-button class=\"mr-4\" @click=\"deleteInspection\" variant=\"outline-danger\">Delete Item Selection</b-button>\n      </b-collapse>\n    </b-row>\n    <b-row class=\"mt-3 ml-1 mr-3 mb-3\">\n      <b-col md=\"4\">\n        <vue-csv-import class=\"ml-1 mr-3 mt-5\"\n          v-model=\"rowData\" \n          :autoMatchFields=\"true\"\n          :headers=\"true\"\n          :canIgnore=\"true\"\n          :map-fields=\"['MANUFACTURER', 'MODEL', 'SUPPLIER', 'ARTICLE_NUMBER', 'DESCRIPTION',  'TYPE',  'VERSION', 'GLUE_TYPE', \n          'PROTECTION_TYPE', 'OUTLINE', 'MEDIUM', 'WIDTH_IN_MM', 'LENGTH_IN_MM', 'THICKNESS_GLASS_IN_MYM', 'COST_IN_USD', 'GTIN_EAN' ]\">\n          <template slot=\"hasHeaders\" slot-scope=\"{headers, toggle}\">\n            <label>\n              <input type=\"checkbox\" id=\"hasHeaders\" :value=\"headers\" @change=\"toggle\">\n              Headers?\n            </label>\n          </template>\n          <template slot=\"next\" slot-scope=\"{load}\">\n            <b-button block variant=\"primary\" @click.prevent=\"load\">Load CSV</b-button>\n          </template>    \n          <template slot=\"submit\" slot-scope=\"{submit}\">\n            <b-button variant=\"primary\" @click.prevent=\"submit\">Submit</b-button>\n          </template>    \n        </vue-csv-import>\n      </b-col>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport XLSX from 'xlsx';\n\nexport default {\n  metaInfo: {    \n    title: \"Import\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataImport: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      rowDataStructured: null,\n      templates: [],\n      show: false,\n      visible: false,\n      date: null,\n      next: null,\n      error: false,\n      file: null,\n      excelFile: null,\n      dataImport: '',\n      csv: null,\n      checked: true,\n    };\n  },\n  beforeMount() {\n    this.rowData = [];\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Manufacturer\", field: \"MANUFACTURER\", filter: 'agTextColumnFilter', checkboxSelection: true, headerCheckboxSelection: true,},\n      {headerName: \"Model\", field: \"MODEL\", filter: 'agTextColumnFilter', },\n      {headerName: \"Supplier\", field: \"SUPPLIER\", filter: 'agTextColumnFilter', },\n      {headerName: \"Article Number\", field: \"ARTICLE_NUMBER\", filter: 'agTextColumnFilter', },\n      {headerName: \"Description\", field: \"DESCRIPTION\", filter: 'agTextColumnFilter', },\n      {headerName: \"Type\", field: \"TYPE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Version\", field: \"VERSION\", filter: 'agTextColumnFilter', },\n      {headerName: \"Glue Type\", field: \"GLUE_TYPE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Protection Type\", field: \"PROTECTION_TYPE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Outline\", field: \"OUTLINE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Medium\", field: \"MEDIUM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Width in mm\", field: \"WIDTH_IN_MM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Length in mm\", field: \"LENGTH_IN_MM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Thickness Glass in µm\", field: \"THICKNESS_GLASS_IN_MYM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Cost in USD\", field: \"COST_IN_USD\", filter: 'agTextColumnFilter', },\n      {headerName: \"GTIN/EAN\", field: \"GTIN_EAN\", filter: 'agTextColumnFilter', },\n    ],\n    this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n    this.show = false;\n  },\n  methods: {\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    deleteInspection() {\n      var index = this.gridApi.getSelectedNodes()[0].childIndex;\n      this.$delete(this.rowData, index)\n      this.show = this.show ? false : true\n    },\n    onGridReady(params) { \n    },\n    onChangeInput(e) {\n      this.importExcel(e);\n    },\n    structureGridItems() {\n      let element = this.rowData\n      let obj = [];\n      let arr = {};\n      for (let i = 0; i < element.length; i++) {\n        let el = element[i]\n        arr = {\n          txtArticlenumber: el.ARTICLE_NUMBER,\n          txtDescription: el.DESCRIPTION,\n          txtType: el.TYPE,\n          txtVersion: el.VERSION,\n          curCost: el.COST_IN_USD,\n          txtGtinEan: el.GTIN_EAN,\n          txtOutline: el.OUTLINE,\n          attributes: [], }\n        let attGL = {\n              txtKeyAttribute: 'IT_GL_TY',\n              txtNameAttribute: 'Glue Type',\n              txtValueAttribute: el.GLUE_TYPE,\n              txtValueType: 'STRING',\n              txtMeasureUnit: '', }\n        let attPT = {\n              txtKeyAttribute: 'IT_PT_TY',\n              txtNameAttribute: 'Protection Type',\n              txtValueAttribute: el.PROTECTION_TYPE,\n              txtValueType: 'STRING',\n              txtMeasureUnit: '', }\n        let attMD = {\n              txtKeyAttribute: 'IT_MD',\n              txtNameAttribute: 'Medium',\n              txtValueAttribute: el.MEDIUM,\n              txtValueType: 'STRING',\n              txtMeasureUnit: '', }\n        let attWD = {\n              txtKeyAttribute: 'IT_WD',\n              txtNameAttribute: 'Width',\n              txtValueAttribute: el.WIDTH_IN_MM,\n              txtValueType: 'FLOAT',\n              txtMeasureUnit: 'mm', }\n        let attLE = {\n              txtKeyAttribute: 'IT_LE',\n              txtNameAttribute: 'Length',\n              txtValueAttribute: el.LENGTH_IN_MM,\n              txtValueType: 'FLOAT',\n              txtMeasureUnit: 'mm', }\n        let attTH = {\n              txtKeyAttribute: 'IT_TH',\n              txtNameAttribute: 'Thickness',\n              txtValueAttribute: el.THICKNESS_GLASS_IN_MYM,\n              txtValueType: 'FLOAT',\n              txtMeasureUnit: 'µm', }\n\n        if(el.GLUE_TYPE != '')\n          arr.attributes.push(attGL)\n        if(el.PROTECTION_TYPE != '')\n          arr.attributes.push(attPT)\n        if(el.MEDIUM != '')\n          arr.attributes.push(attMD)\n        if(el.WIDTH_IN_MM != '')\n          arr.attributes.push(attWD)\n        if(el.LENGTH_IN_MM != '')\n          arr.attributes.push(attLE)\n        if(el.THICKNESS_GLASS_IN_MYM != '')\n          arr.attributes.push(attTH)\n\n        obj.push(arr);\n      }\n      this.rowDataStructured = obj;\n    },\n    async createItems() {\n      await this.structureGridItems();\n      let element = this.rowDataStructured\n      console.log(this.rowDataStructured)\n      console.log(element)\n\n      for (let i = 0; i < element.length; i++) {\n        const el = element[i];\n        console.log(el.txtArticlenumber)\n        let endpoint = `/api/item/`;\n        apiService(endpoint, \"POST\", {\n          txtArticlenumber: el.txtArticlenumber,\n          txtDescription: el.txtDescription,\n          txtType: el.txtType,\n          txtVersion: el.txtVersion,\n          curCost: el.curCost,\n          txtGtinEan: el.txtGtinEan,\n          txtOutline: el.txtOutline,\n          txtLink: null,\n          deviceModels: [], })\n          .then(response => {\n            if(response != 'ERROR')\n              for (let g = 0; g < el.attributes.length; g++) {\n                let att = el.attributes[g];\n                let endpointAttribute = `/api/item-attribute/`;\n                apiService(endpointAttribute, \"POST\", {\n                  txtKeyAttribute: att.txtKeyAttribute,\n                  txtNameAttribute: att.txtNameAttribute,\n                  txtValueAttribute: att.txtValueAttribute,\n                  txtValueType: att.txtValueType,\n                  txtMeasureUnit: att.txtMeasureUnit,\n                  idItem: response.id, })\n              }\n          })\n      }\n      this.$router.push('item-list');\n    },\n  },\n};\n</script>\n\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"],"sourceRoot":"src/views/app/item"}]}