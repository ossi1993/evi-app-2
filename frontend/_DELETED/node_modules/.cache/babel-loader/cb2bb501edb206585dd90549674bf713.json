{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\sample.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\sample.vue","mtime":1599740465920},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nexport default {\n  metaInfo: {\n    title: \"Samples\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      templates: [],\n      show: false,\n      visible: false,\n      date: null,\n      next: null,\n      error: false\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Model Name\",\n      field: \"txtModelName\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true\n    }, {\n      headerName: \"Manufacturer\",\n      field: \"idManufacturer.txtManufacturerName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Supplier\",\n      field: \"idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    onGridReady: function onGridReady(params) {},\n    getTemplates: function getTemplates() {\n      var _this = this;\n\n      if (!this.error) {\n        var endpoint = \"/api/device-template/\";\n        apiService(endpoint).then(function (data) {\n          var _this$templates;\n\n          (_this$templates = _this.templates).push.apply(_this$templates, _toConsumableArray(data.results));\n        });\n      }\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    }\n  },\n  created: function created() {\n    this.getDateToday();\n  }\n};",{"version":3,"sources":["sample.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Sample'\" :folder=\"'Inspection'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-File\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Samples</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.templates.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Samples\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n      // VUE VARIABLES\n      templates: [],\n      show: false,\n      visible: false,\n      date: null,\n      next: null,\n      error: false,\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Model Name\", field: \"txtModelName\", filter: 'agTextColumnFilter', checkboxSelection: true,},\n      {headerName: \"Manufacturer\", field: \"idManufacturer.txtManufacturerName\", filter: 'agTextColumnFilter', editable: false},\n      {headerName: \"Supplier\", field: \"idSupplier.txtSupplierName\", filter: 'agTextColumnFilter', editable: false},\n    ],\n    this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    onGridReady(params) { \n    },\n    getTemplates() {\n      if (!this.error) {\n        let endpoint = `/api/device-template/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n          })\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n  },\n  created() {\n    this.getDateToday();\n  },\n};\n</script>\n\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"],"sourceRoot":"src/views/app/inspection"}]}