{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\templates.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\templates.vue","mtime":1601470368386},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Template\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsAtt: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      excelStyles: null,\n      modules: AllModules,\n\n      // VUE VARIABLES\n      templates: [],\n      attributes: [],\n      typeAttributes: [],\n      selectedAttributes: [],\n      selAtt1: [],\n      selAtt2: [],\n      selAtt3: [],\n      selAtt4: [],\n      show: false,\n      visible: false,\n      TempName: '',\n      Type: '',\n      IType: null,\n      date: null,\n      error: false,\n      optionsItemTypes: [\n        { value: 'Glass', text: 'Glass' },\n        { value: 'Case', text: 'Case' },\n        { value: 'Frame Standard', text: 'Frame Standard' },\n        { value: 'Frame Eco', text: 'Frame Eco' },\n      ],\n      optionsType: [\n        { value: 'MF', text: 'Mess & Funktionsprüfung' },\n        { value: 'CH', text: 'Chemische Prüfung' },\n        { value: 'PH', text: 'Physikalische Prüfung' },\n        { value: 'CA', text: 'Case Prüfung' },\n        { value: 'FR', text: 'Frame Prüfung' },\n      ],\n      optionsAttributes: [],\n      optionAttsGlass: [],\n      optionAttsCase: [],\n      optionAttsFrameStandard: [],\n      optionAttsFrameEco: [],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Template Name\", field: \"txtInspectionTemplateName\", filter: 'agTextColumnFilter', cellRenderer: 'agGroupCellRenderer', checkboxSelection: true,},\n      {headerName: \"Template Type\", field: \"txtInspectionTemplateType\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', \n        cellEditorParams: { cellHeight: 50, values: ['MF', 'CH', 'PH', 'CA', 'FR']}, },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: 20,\n        columnDefs: [\n          {headerName: \"Item Type\", field: \"txtItemType\",},\n          {headerName: \"Attribute Key\", field: \"txtKeyAttribute\",},\n          {headerName: \"Attribute Name\", field: \"txtNameAttribute\",},\n          {headerName: \"Default Value\", field: \"txtValueDefault\",},\n          {headerName: \"Value Type\", field: \"txtValueType\",},\n          {headerName: \"Parameter\", field: \"txtParameter\",},\n        ],\n        defaultColDef: { flex: 1, editable: true, resizable: true, },\n      },\n      getDetailRowData: params => {\n        params.successCallback(params.data.idInspectionTemplateAttribute);\n      },\n    }\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    if (window.InspectionTemplateColState)\n       this.gridOptions.columnApi.setColumnState(window.InspectionTemplateColState);\n    else\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  computed: {\n    disabled: function () {\n      return !this.TempName ? true : !this.Type ? true : !this.IType ? true : false; \n    },\n  },\n  methods: {\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    saveState() {\n      window.InspectionTemplateColState = this.gridOptions.columnApi.getColumnState();\n    },\n    restoreState() {\n      window.InspectionTemplateColState = null;\n    },\n    createInspection() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      localStorage.setItem('ITempID', selectedRows[0].id)\n      localStorage.setItem('ITempType', selectedRows[0].txtInspectionTemplateType)\n      this.$router.push('inspection')\n    },\n    onChange(event) {\n      this.typeAttributes = [];\n      this.optionAttsGlass = [];\n      this.optionAttsCase = [];\n      this.optionAttsFrame = [];\n      let endpoint = `/api/inspection-template-attribute/`;\n      apiService(endpoint)\n      .then(data => {\n        this.typeAttributes.push(...data.results);\n        for (let i = 0; i < event.length; i++) {\n          let element = event[i];\n          if(element.value == 'Glass' && this.optionAttsGlass == '') {\n            this.optionAttsGlass = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          } else if(element.value == 'Case' && this.optionAttsCase == '') {\n            this.optionAttsCase = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          } else if(element.value == 'Frame Standard' && this.optionAttsFrame == '') {\n            this.optionAttsFrameStandard = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          } else if(element.value == 'Frame Eco' && this.optionAttsFrame == '') {\n            this.optionAttsFrameEco = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          }\n        }\n      })\n      .catch(err => console.log(err));\n    },\n    async updateTemplateGrid(event) {     \n      let endpoint = `/api/inspection-template/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtInspectionTemplateName: event.node.data.txtInspectionTemplateName,\n          txtInspectionTemplateType: event.node.data.txtInspectionTemplateType,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    addTemplate() {\n      let selectedAttributes = this.selAtt1.concat(this.selAtt2, this.selAtt3, this.selAtt4)\n      let endpoint = `/api/inspection-template/`;\n      apiService(endpoint, \"POST\", { \n        txtInspectionTemplateName: this.TempName,\n        txtInspectionTemplateType: this.Type.value,\n        idInspectionTemplateAttribute: selectedAttributes, })\n        .then(response => {\n          if (response){\n            this.getTemplates();\n            this.emptyInput();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Template? => \" + params.node.data.txtInspectionTemplateName, {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => { if (value) { this.deleteTemplate(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteTemplate(params) {\n      let endpoint = `/api/inspection-template/${params.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\");\n        this.getTemplates();\n      }\n      catch (err) {\n        console.log(err);\n      }\n    },\n    emptyInput() {\n      this.TempName = '';\n      this.Type = null;\n      this.IType = null;\n      this.selAtt = null;\n      this.optionAttsGlass = [];\n      this.optionAttsCase = [];\n      this.optionAttsFrame = [];\n      this.show = false;\n    },\n    getTemplates() {\n      if (!this.error) {\n        this.templates = [];\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n            this.rowData = this.templates\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        this.attributes = [];\n        let endpoint = `/api/inspection-template-attribute/`;\n        apiService(endpoint)\n          .then(data => { this.attributes.push(...data.results); })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Delete Template',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getDateToday();\n  },\n};\n",{"version":3,"sources":["templates.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"templates.vue","sourceRoot":"src/views/app/inspection","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Templates'\" :folder=\"'Inspection'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-File\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Templates</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.templates.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" id=\"new-template-section\" @click=\"show = !show\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Template</h5>\n            </b-row>\n            <div class=\"ml-3 mr-3\" v-show=\"show\">\n              <b-form>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <b-form-input id=\"input-1\" v-model=\"TempName\" type=\"text\" required placeholder=\"Template Name\" ></b-form-input>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"6\">\n                    <!-- <v-select  id=\"select-1\" v-model=\"Type\" :options=\"optionsType\" label=\"text\" required placeholder=\"Choose Inspection Type\"></v-select> -->\n                    <multiselect\n                        v-model=\"Type\" tag-placeholder=\"Choose Inspection Type\" placeholder=\"Search inspection type\" label=\"text\" \n                        track-by=\"value\" :options=\"optionsType\" :multiple=\"false\" :taggable=\"false\" :close-on-select=\"true\"\n                        :searchable=\"true\" open-direction=\"bottom\">\n                    </multiselect>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <!-- <b-form-select id=\"select-2\" v-model=\"IType\" :options=\"optionsItemTypes\" @change=\"onChange($event)\" required ></b-form-select> -->\n                    <multiselect\n                        v-model=\"IType\" tag-placeholder=\"Choose Item Type\" placeholder=\"Search item type\" label=\"text\" \n                        track-by=\"value\" :options=\"optionsItemTypes\" :multiple=\"true\" :taggable=\"false\" :close-on-select=\"false\"\n                        :searchable=\"true\" open-direction=\"bottom\" @input=\"onChange($event)\" @remove=\"onChange($event)\" :max=\"3\">\n                    </multiselect>\n                  </b-col>\n                </b-row>\n                <!-- ATTRIBUTES GLASS -->\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"optionAttsGlass != ''\">\n                  <b-col md=\"12\">\n                    <h5 class=\"mb-1\">Glass Attributes</h5>\n                    <b-form-checkbox-group  id=\"select-3\" v-model=\"selAtt1\" :options=\"optionAttsGlass\" multiple\n                      value-field=\"id\" text-field=\"txtNameAttribute\"></b-form-checkbox-group>\n                  </b-col>\n                </b-row>\n                <!-- ATTRIBUTES CASE -->\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"optionAttsCase != ''\">\n                  <b-col md=\"12\">\n                    <h5 class=\"mb-1\">Case Attributes</h5>\n                    <b-form-checkbox-group  id=\"select-4\" v-model=\"selAtt2\" :options=\"optionAttsCase\" multiple\n                      value-field=\"id\" text-field=\"txtNameAttribute\"></b-form-checkbox-group>\n                  </b-col>\n                </b-row>\n                <!-- ATTRIBUTES FRAME STANDARD -->\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"optionAttsFrameStandard != ''\">\n                  <b-col md=\"12\">\n                    <h5 class=\"mb-1\">Frame Standard Attributes</h5>\n                    <b-form-checkbox-group  id=\"select-5\" v-model=\"selAtt3\" :options=\"optionAttsFrameStandard\" multiple\n                      value-field=\"id\" text-field=\"txtNameAttribute\"></b-form-checkbox-group>\n                  </b-col>\n                </b-row>\n                <!-- ATTRIBUTES FRAME ECO -->\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"optionAttsFrameEco != ''\">\n                  <b-col md=\"12\">\n                    <h5 class=\"mb-1\">Frame Eco Attributes</h5>\n                    <b-form-checkbox-group  id=\"select-6\" v-model=\"selAtt4\" :options=\"optionAttsFrameEco\" multiple\n                      value-field=\"id\" text-field=\"txtNameAttribute\"></b-form-checkbox-group>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-5\">\n                  <b-col md=\"6\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-button @click=\"addTemplate\" block variant=\"success\" :disabled=\"disabled\">Add Template</b-button>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- GRID TEMPLATES -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridItems\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                :excelStyles=\"excelStyles\"\n                @cellValueChanged=\"updateTemplateGrid\"\n                @row-selected=\"onRowSelected\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :getContextMenuItems=\"getContextMenu\"\n                :pagination=\"true\"\n                :paginationPageSize=\"10\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-collapse v-model=\"show\" class=\"ml-1 mr-3\">\n      <b-button @click=\"createInspection\" variant=\"primary\" class=\"mr-4\">Create New Inspection</b-button>\n    </b-collapse>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Template\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsAtt: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      excelStyles: null,\n      modules: AllModules,\n\n      // VUE VARIABLES\n      templates: [],\n      attributes: [],\n      typeAttributes: [],\n      selectedAttributes: [],\n      selAtt1: [],\n      selAtt2: [],\n      selAtt3: [],\n      selAtt4: [],\n      show: false,\n      visible: false,\n      TempName: '',\n      Type: '',\n      IType: null,\n      date: null,\n      error: false,\n      optionsItemTypes: [\n        { value: 'Glass', text: 'Glass' },\n        { value: 'Case', text: 'Case' },\n        { value: 'Frame Standard', text: 'Frame Standard' },\n        { value: 'Frame Eco', text: 'Frame Eco' },\n      ],\n      optionsType: [\n        { value: 'MF', text: 'Mess & Funktionsprüfung' },\n        { value: 'CH', text: 'Chemische Prüfung' },\n        { value: 'PH', text: 'Physikalische Prüfung' },\n        { value: 'CA', text: 'Case Prüfung' },\n        { value: 'FR', text: 'Frame Prüfung' },\n      ],\n      optionsAttributes: [],\n      optionAttsGlass: [],\n      optionAttsCase: [],\n      optionAttsFrameStandard: [],\n      optionAttsFrameEco: [],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Template Name\", field: \"txtInspectionTemplateName\", filter: 'agTextColumnFilter', cellRenderer: 'agGroupCellRenderer', checkboxSelection: true,},\n      {headerName: \"Template Type\", field: \"txtInspectionTemplateType\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', \n        cellEditorParams: { cellHeight: 50, values: ['MF', 'CH', 'PH', 'CA', 'FR']}, },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: 20,\n        columnDefs: [\n          {headerName: \"Item Type\", field: \"txtItemType\",},\n          {headerName: \"Attribute Key\", field: \"txtKeyAttribute\",},\n          {headerName: \"Attribute Name\", field: \"txtNameAttribute\",},\n          {headerName: \"Default Value\", field: \"txtValueDefault\",},\n          {headerName: \"Value Type\", field: \"txtValueType\",},\n          {headerName: \"Parameter\", field: \"txtParameter\",},\n        ],\n        defaultColDef: { flex: 1, editable: true, resizable: true, },\n      },\n      getDetailRowData: params => {\n        params.successCallback(params.data.idInspectionTemplateAttribute);\n      },\n    }\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    if (window.InspectionTemplateColState)\n       this.gridOptions.columnApi.setColumnState(window.InspectionTemplateColState);\n    else\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  computed: {\n    disabled: function () {\n      return !this.TempName ? true : !this.Type ? true : !this.IType ? true : false; \n    },\n  },\n  methods: {\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    saveState() {\n      window.InspectionTemplateColState = this.gridOptions.columnApi.getColumnState();\n    },\n    restoreState() {\n      window.InspectionTemplateColState = null;\n    },\n    createInspection() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      localStorage.setItem('ITempID', selectedRows[0].id)\n      localStorage.setItem('ITempType', selectedRows[0].txtInspectionTemplateType)\n      this.$router.push('inspection')\n    },\n    onChange(event) {\n      this.typeAttributes = [];\n      this.optionAttsGlass = [];\n      this.optionAttsCase = [];\n      this.optionAttsFrame = [];\n      let endpoint = `/api/inspection-template-attribute/`;\n      apiService(endpoint)\n      .then(data => {\n        this.typeAttributes.push(...data.results);\n        for (let i = 0; i < event.length; i++) {\n          let element = event[i];\n          if(element.value == 'Glass' && this.optionAttsGlass == '') {\n            this.optionAttsGlass = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          } else if(element.value == 'Case' && this.optionAttsCase == '') {\n            this.optionAttsCase = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          } else if(element.value == 'Frame Standard' && this.optionAttsFrame == '') {\n            this.optionAttsFrameStandard = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          } else if(element.value == 'Frame Eco' && this.optionAttsFrame == '') {\n            this.optionAttsFrameEco = this.typeAttributes.filter(el => el.txtItemType == element.value)\n          }\n        }\n      })\n      .catch(err => console.log(err));\n    },\n    async updateTemplateGrid(event) {     \n      let endpoint = `/api/inspection-template/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtInspectionTemplateName: event.node.data.txtInspectionTemplateName,\n          txtInspectionTemplateType: event.node.data.txtInspectionTemplateType,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    addTemplate() {\n      let selectedAttributes = this.selAtt1.concat(this.selAtt2, this.selAtt3, this.selAtt4)\n      let endpoint = `/api/inspection-template/`;\n      apiService(endpoint, \"POST\", { \n        txtInspectionTemplateName: this.TempName,\n        txtInspectionTemplateType: this.Type.value,\n        idInspectionTemplateAttribute: selectedAttributes, })\n        .then(response => {\n          if (response){\n            this.getTemplates();\n            this.emptyInput();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Template? => \" + params.node.data.txtInspectionTemplateName, {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => { if (value) { this.deleteTemplate(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteTemplate(params) {\n      let endpoint = `/api/inspection-template/${params.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\");\n        this.getTemplates();\n      }\n      catch (err) {\n        console.log(err);\n      }\n    },\n    emptyInput() {\n      this.TempName = '';\n      this.Type = null;\n      this.IType = null;\n      this.selAtt = null;\n      this.optionAttsGlass = [];\n      this.optionAttsCase = [];\n      this.optionAttsFrame = [];\n      this.show = false;\n    },\n    getTemplates() {\n      if (!this.error) {\n        this.templates = [];\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n            this.rowData = this.templates\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        this.attributes = [];\n        let endpoint = `/api/inspection-template-attribute/`;\n        apiService(endpoint)\n          .then(data => { this.attributes.push(...data.results); })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Delete Template',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getDateToday();\n  },\n};\n</script>\n\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  .multiselect__input, .multiselect__placeholder, .multiselect__option, .multiselect__tags {\n    font-size: 14px!important;\n  }\n  #new-template-section {\n    cursor: pointer;\n    outline: none;\n  }\n</style>\n"]}]}