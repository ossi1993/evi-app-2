{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-import.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-import.vue","mtime":1598424827031},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ni:focus,\ninput:focus,\nselect:focus,\ntextarea:focus,\nbutton:focus {\n    outline: none;\n}\n",{"version":3,"sources":["item-import.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuQA;AACA;AACA;AACA;AACA;AACA;AACA","file":"item-import.vue","sourceRoot":"src/views/app/item","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Import'\" :folder=\"'Item'\" />\n\n    <div class=\"row mt-5\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridImport\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @grid-ready=\"onGridReady\"\n                @row-selected=\"onRowSelected\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :pagination=\"true\"\n                :paginationPageSize=\"10\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <b-row class=\"ml-1 mr-3 mb-6\">\n      <b-collapse v-model=\"show\">\n        <b-button class=\"mr-4\" variant=\"primary\">Save Item Selection</b-button>\n        <b-button class=\"mr-4\" @click=\"deleteInspection\" variant=\"outline-primary\">Delete Item Selection</b-button>\n      </b-collapse>\n    </b-row>\n\n      <vue-csv-import class=\"ml-1 mr-3 mt-5\"\n        v-model=\"rowData\" \n        :autoMatchFields=\"true\"\n        :headers=\"true\"\n        :canIgnore=\"true\"\n        :map-fields=\"['MANUFACTURER', 'MODEL', 'SUPPLIER', 'ARTICLE_NUMBER', 'TESTED_ON_ORIGINAL_DEVICE', 'GLUE_TYPE', 'PROTECTION_TYPE', 'OUTLINE', 'MEDIUM', 'EDGE_TREATMENT', 'WIDTH_IN_MM', 'LENGTH_IN_MM', 'THICKNESS_GLASS_IN_MYM', 'COST_IN_USD']\">\n\n        <template slot=\"hasHeaders\" slot-scope=\"{headers, toggle}\">\n          <label>\n            <input type=\"checkbox\" id=\"hasHeaders\" :value=\"headers\" @change=\"toggle\">\n            Headers?\n          </label>\n        </template>\n\n        <template slot=\"next\" slot-scope=\"{load}\">\n          <b-button block variant=\"primary\" @click.prevent=\"load\">Load CSV</b-button>\n          <!-- <button @click.prevent=\"load\">load!</button> -->\n        </template>    \n\n        <template slot=\"submit\" slot-scope=\"{submit}\">\n          <b-button variant=\"primary\" @click.prevent=\"submit\">Submit</b-button>\n        </template>    \n      </vue-csv-import>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\nimport XLSX from 'xlsx';\n\n\nexport default {\n  metaInfo: {    \n    title: \"Import\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataImport: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [\n        ClientSideRowModelModule,\n        SetFilterModule,\n        RichSelectModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n        MasterDetailModule,\n      ],\n      templates: [],\n      show: false,\n      visible: false,\n      date: null,\n      next: null,\n      error: false,\n      file: null,\n      excelFile: null,\n      dataImport: '',\n      csv: null,\n      checked: true,\n    };\n  },\n  beforeMount() {\n    this.rowData = [];\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Manufacturer\", field: \"MANUFACTURER\", filter: 'agTextColumnFilter', checkboxSelection: true, headerCheckboxSelection: true,},\n      {headerName: \"Model\", field: \"MODEL\", filter: 'agTextColumnFilter', },\n      {headerName: \"Supplier\", field: \"SUPPLIER\", filter: 'agTextColumnFilter', },\n      {headerName: \"Article Number\", field: \"ARTICLE_NUMBER\", filter: 'agTextColumnFilter', },\n      {headerName: \"Tested on Original Device\", field: \"TESTED_ON_ORIGINAL_DEVICE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Glue Type\", field: \"GLUE_TYPE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Protection Type\", field: \"PROTECTION_TYPE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Outline\", field: \"OUTLINE\", filter: 'agTextColumnFilter', },\n      {headerName: \"Medium\", field: \"MEDIUM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Edge Treatment\", field: \"EDGE_TREATMENT\", filter: 'agTextColumnFilter', },\n      {headerName: \"Width in mm\", field: \"WIDTH_IN_MM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Length in mm\", field: \"LENGTH_IN_MM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Thickness Glass in Âµm\", field: \"THICKNESS_GLASS_IN_MYM\", filter: 'agTextColumnFilter', },\n      {headerName: \"Cost in USD\", field: \"COST_IN_USD\", filter: 'agTextColumnFilter', },\n    ],\n    this.defaultColDef = {\n      // flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.rowSelection = 'multiple';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n    this.show = false;\n  },\n  methods: {\n    onRowSelected(event) {\n      this.show = true\n      // this.show = this.show ? false : true\n    },\n    deleteInspection() {\n      var index = this.gridApi.getSelectedNodes()[0].childIndex;\n      this.$delete(this.rowData, index)\n    },\n    \n    onGridReady(params) { \n    },\n\n    onChangeInput(e) {\n      this.importExcel(e);\n    },\n\n    addCssClass() {\n      var element = document.getElementById(\"myDIV\");\n      element.classList.add(\"mystyle\");    \n    },\n\n    // convertDataToWorkbook(data) {\n    //   var data = new Uint8Array(data);\n    //   var arr = new Array();\n    //   for (var i = 0; i !== data.length; ++i) {\n    //       arr[i] = String.fromCharCode(data[i]);\n    //   }\n    //   var bstr = arr.join(\"\");\n    //   return XLSX.read(bstr, {type: \"binary\"});\n    // },\n\n\n    // addTemplates() {\n    //   if (this.MName) {\n    //     let endpoint = `/api/device-template/`;\n    //     apiService(endpoint, \"POST\", { \n    //       txtModelName: this.MName,\n    //       idManufacturer: this.Manufacturer,\n    //       idSupplier: this.Supplier,\n    //       })\n    //       .then(data => {\n    //         if (data) {\n    //           console.log(data)\n    //           this.models.unshift(data)\n    //         } else {\n    //           this.error = true;\n    //         }\n    //       })\n    //     this.emptyInput();\n    //     if (this.error) {\n    //       this.error = false;\n    //     }\n    //     } else {\n    //       this.error = true;\n    //     }\n    // },\n    // openModal(params) {\n    //   this.$bvModal\n    //     .msgBoxConfirm(\"Are you sure you want to delete the selected Template?\", {\n    //       title: \"Please Confirm\",\n    //       size: \"sm\",\n    //       buttonSize: \"sm\",\n    //       okVariant: \"danger\",\n    //       okTitle: \"YES\",\n    //       cancelTitle: \"NO\",\n    //       footerClass: \"p-2\",\n    //       hideHeaderClose: false,\n    //       centered: true\n    //     })\n    //     .then(value => {\n    //       if (value) {\n    //         this.deleteModel();\n    //       }\n    //     })\n    // },\n    // async deleteModel() {\n    //   var selectedRows = this.gridApi.getSelectedRows();\n    //   let endpoint = `/api/device-template/${selectedRows[0].id}/`;\n    //   try {\n    //     var index = this.templates.map(function(e) { return e.id; }).indexOf(selectedRows[0].id);\n    //     this.$delete(this.templates, index)\n    //     await apiService(endpoint, \"DELETE\")\n    //     this.show = this.show ? false : true\n    //   }\n    //   catch (err) {\n    //     console.log(err)\n    //   }\n    // },\n    // emptyInput() {\n    //   this.MName = '',\n    //   this.Manufacturer = [],\n    //   this.Supplier = [],\n\n    //   this.$root.$emit('bv::toggle::collapse', 'collapse-e')\n    // },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n  },\n  created() {\n    // this.getTemplates();\n    this.getDateToday();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"]}]}