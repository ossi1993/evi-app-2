{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\list.vue","mtime":1597903696194},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\n// import { ServerSideRowModelModule } from '@ag-grid-enterprise/server-side-row-model';\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Item\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: [\n        ClientSideRowModelModule,\n        SetFilterModule,\n        RichSelectModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n      ],\n      items: [],\n      show: false,\n      IName: '',\n      Description: '',\n      Type: '',\n      Verison: '',\n      Cost: '',\n      GtinEan: '',\n      Outline:'',\n      Link: '',\n      deviceModels: [],\n      next: null,\n      error: false,\n      optionsType: [\n        { value: 'Glass', text: 'Glass' },\n        { value: 'Case', text: 'Case' },\n        { value: 'Frame', text: 'Frame' },\n      ],\n      optionsOutline: [\n        { value: '2D', text: '2D' },\n        { value: '3D', text: '3D' },\n        { value: 'FC', text: 'Full Cover' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Article Number\", field: \"txtArticlenumber\", filter: 'agTextColumnFilter',},\n      {headerName: \"Item Description\", field: \"txtDescription\", filter: 'agTextColumnFilter',},\n      {\n        headerName: \"Type\", field: \"txtType\", filter: 'agTextColumnFilter',\n        editable: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Glass', 'Case', 'Frame']}\n      },\n      {headerName: \"Version\", field: \"txtVersion\", filter: 'agTextColumnFilter',},\n      {headerName: \"Cost\", field: \"curCost\", filter: 'agTextColumnFilter',},\n      {headerName: \"GTIN / EAN\", field: \"txtGtinEan\", filter: 'agTextColumnFilter',},\n      {headerName: \"Outline\", field: \"txtOutline\", filter: 'agTextColumnFilter',},\n      {headerName: \"Link\", field: \"txtLink\", filter: 'agTextColumnFilter',},\n    ],\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    autoSizeAll(skipHeader) {\n      var allColumnIds = [];\n      this.gridColumnApi.getAllColumns().forEach(function(column) {\n        allColumnIds.push(column.colId);\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    },\n    onRowSelected(event) {\n      // let endpoint = `/api/item/${event.node.data.id}/`;\n      console.log(event.node.data.deviceModels.keys(id))\n    },\n    async onCellEditingStopped(event) {     \n      let endpoint = `/api/item/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtArticlenumber: event.node.data.txtArticlenumber,\n          txtDescription: event.node.data.txtDescription,\n          txtType: event.node.data.txtType,\n          txtVersion: event.node.data.txtVersion,\n          curCost: event.node.data.curCost,\n          txtGtinEan: event.node.data.txtGtinEan,\n          txtOutline: event.node.data.txtOutline,\n          txtLink: event.node.data.txtLink,\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onGridReady(params) { \n      // this.autoSizeAll(false);\n    },\n    getItems() {\n      if (!this.error) {\n        let endpoint = `/api/item-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.items.push(...data.results);\n            this.rowData = this.items\n          })\n      }\n    },\n    addItem() {\n      if (this.IName) {\n        let endpoint = `/api/item/`;\n        apiService(endpoint, \"POST\", { \n          txtArticlenumber: this.IName,\n          txtDescription: this.Description,\n          txtType: this.Type,\n          txtVersion: this.Version,\n          curCost: this.Cost,\n          txtGtinEan: this.GtinEan,\n          txtOutline: this.Outline,\n          txtLink: this.Link,\n          deviceModels: this.DeviceModels,\n          })\n          .then(data => {\n            if (data){\n              this.items.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.IName = null;\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    // async updateItem() {\n    //   var selectedRows = this.$refs['item-table'].selectedRows;\n    //   for (var i = 0; i < selectedRows.length; i++) {\n    //     let endpoint = `/api/item/${selectedRows[i].id}/`;\n    //     try {\n    //       this.items[selectedRows[i].originalIndex].txtArticlenumber = this.NewIName\n    //       await apiService(endpoint, \"PUT\", { \n    //         txtArticlenumber: this.IName,\n    //         txtDescription: this.Description,\n    //         txtType: this.Type,\n    //         txtVersion: this.Version,\n    //         curCost: this.Cost,\n    //         txtGtinEan: this.GtinEan,\n    //         txtOutline: this.Outline,\n    //         txtLink: this.Link,\n    //         deviceModels: this.DeviceModels,\n    //         })\n    //       this.hideEditItem();\n    //     }\n    //     catch (err) {\n    //       console.log(err)\n    //     }\n    //   }\n    // },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Item?\", {\n          title: \"Please Confirm\",\n          size: \"sm\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => {\n          if (value) {\n            this.deleteItem();\n          }\n        })\n    },\n    async deleteItem() {\n      var selectedRows = this.$refs['item-table'].selectedRows;\n      for (var i = 0; i < selectedRows.length; i++) {\n        let endpoint = `/api/item/${selectedRows[i].id}/`;\n        try {\n          this.$delete(this.items, selectedRows[i].originalIndex)\n          await apiService(endpoint, \"DELETE\")\n        }\n        catch (err) {\n          console.log(err)\n        }\n      }\n    },\n    // editItem() {\n    //   var selectedRows = this.$refs['item-table'].selectedRows;\n    //   if (selectedRows.length == 1) {\n    //     this.NewIName = selectedRows[0].txtManufacturerName\n    //     this.$root.$emit('bv::toggle::collapse', 'collapse-u');\n    //   } else {\n    //     this.$bvModal.show(\"modal-2\");\n    //   }\n    // },\n    // hideEditItem() {\n    //   this.NewIName = '';\n    //   this.$root.$emit('bv::toggle::collapse', 'collapse-u')\n    // },\n    emptyInput() {\n      this.IName = '',\n      this.Description = '',\n      this.Type = '',\n      this.Verison = '',\n      this.Cost = '',\n      this.GtinEan = '',\n      this.Outline = '',\n      this.Link = '',\n      this.deviceModels = [],\n\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n  },\n  created() {\n    this.getItems()\n  },\n};\n",{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/app/item","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'List'\" :folder=\"'Item'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Eci-Icon\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Items</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\">{{ this.items.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\">123</p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" v-b-toggle.collapse-e></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Item</h5>\n            </b-row>\n            <b-collapse id=\"collapse-e\" class=\"mt-3\">\n              <b-row class=\"ml-3\">\n                <b-col md=\"4\">\n                  <b-form-input id=\"input-1\" v-model=\"IName\" type=\"text\" required placeholder=\"Item Name\" ></b-form-input>\n                </b-col>\n                <b-col md=\"1\">\n                  <b-button @click=\"emptyInput\" variant=\"outline-primary\">Delete Input</b-button>\n                </b-col>\n                <b-col md=\"2\">\n                  <b-button @click=\"addItem\" variant=\"primary\">Add Item</b-button>\n                </b-col>\n                <b-col md=\"3\">\n                  <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                    <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                  </b-alert>\n                </b-col>\n              </b-row>\n            </b-collapse>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-material\"\n                id=\"gridItems\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                @grid-ready=\"onGridReady\"\n                @row-selected=\"onRowSelected\"\n                @cellEditingStopped=\"onCellEditingStopped\"\n                :pagination=\"true\"\n                :paginationPageSize=\"4\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-material\"\n                id=\"gridModels\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefsMod\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowDataMod\"\n                @cellEditingStopped=\"onCellEditingStopped\"\n                :pagination=\"true\"\n                :paginationPageSize=\"4\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <!-- <b-button @click=\"autoSizeAll(false)\" variant=\"primary\">Auto Size Columns</b-button> -->\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\n// import { ServerSideRowModelModule } from '@ag-grid-enterprise/server-side-row-model';\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Item\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: [\n        ClientSideRowModelModule,\n        SetFilterModule,\n        RichSelectModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n      ],\n      items: [],\n      show: false,\n      IName: '',\n      Description: '',\n      Type: '',\n      Verison: '',\n      Cost: '',\n      GtinEan: '',\n      Outline:'',\n      Link: '',\n      deviceModels: [],\n      next: null,\n      error: false,\n      optionsType: [\n        { value: 'Glass', text: 'Glass' },\n        { value: 'Case', text: 'Case' },\n        { value: 'Frame', text: 'Frame' },\n      ],\n      optionsOutline: [\n        { value: '2D', text: '2D' },\n        { value: '3D', text: '3D' },\n        { value: 'FC', text: 'Full Cover' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Article Number\", field: \"txtArticlenumber\", filter: 'agTextColumnFilter',},\n      {headerName: \"Item Description\", field: \"txtDescription\", filter: 'agTextColumnFilter',},\n      {\n        headerName: \"Type\", field: \"txtType\", filter: 'agTextColumnFilter',\n        editable: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Glass', 'Case', 'Frame']}\n      },\n      {headerName: \"Version\", field: \"txtVersion\", filter: 'agTextColumnFilter',},\n      {headerName: \"Cost\", field: \"curCost\", filter: 'agTextColumnFilter',},\n      {headerName: \"GTIN / EAN\", field: \"txtGtinEan\", filter: 'agTextColumnFilter',},\n      {headerName: \"Outline\", field: \"txtOutline\", filter: 'agTextColumnFilter',},\n      {headerName: \"Link\", field: \"txtLink\", filter: 'agTextColumnFilter',},\n    ],\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    autoSizeAll(skipHeader) {\n      var allColumnIds = [];\n      this.gridColumnApi.getAllColumns().forEach(function(column) {\n        allColumnIds.push(column.colId);\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    },\n    onRowSelected(event) {\n      // let endpoint = `/api/item/${event.node.data.id}/`;\n      console.log(event.node.data.deviceModels.keys(id))\n    },\n    async onCellEditingStopped(event) {     \n      let endpoint = `/api/item/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtArticlenumber: event.node.data.txtArticlenumber,\n          txtDescription: event.node.data.txtDescription,\n          txtType: event.node.data.txtType,\n          txtVersion: event.node.data.txtVersion,\n          curCost: event.node.data.curCost,\n          txtGtinEan: event.node.data.txtGtinEan,\n          txtOutline: event.node.data.txtOutline,\n          txtLink: event.node.data.txtLink,\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onGridReady(params) { \n      // this.autoSizeAll(false);\n    },\n    getItems() {\n      if (!this.error) {\n        let endpoint = `/api/item-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.items.push(...data.results);\n            this.rowData = this.items\n          })\n      }\n    },\n    addItem() {\n      if (this.IName) {\n        let endpoint = `/api/item/`;\n        apiService(endpoint, \"POST\", { \n          txtArticlenumber: this.IName,\n          txtDescription: this.Description,\n          txtType: this.Type,\n          txtVersion: this.Version,\n          curCost: this.Cost,\n          txtGtinEan: this.GtinEan,\n          txtOutline: this.Outline,\n          txtLink: this.Link,\n          deviceModels: this.DeviceModels,\n          })\n          .then(data => {\n            if (data){\n              this.items.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.IName = null;\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    // async updateItem() {\n    //   var selectedRows = this.$refs['item-table'].selectedRows;\n    //   for (var i = 0; i < selectedRows.length; i++) {\n    //     let endpoint = `/api/item/${selectedRows[i].id}/`;\n    //     try {\n    //       this.items[selectedRows[i].originalIndex].txtArticlenumber = this.NewIName\n    //       await apiService(endpoint, \"PUT\", { \n    //         txtArticlenumber: this.IName,\n    //         txtDescription: this.Description,\n    //         txtType: this.Type,\n    //         txtVersion: this.Version,\n    //         curCost: this.Cost,\n    //         txtGtinEan: this.GtinEan,\n    //         txtOutline: this.Outline,\n    //         txtLink: this.Link,\n    //         deviceModels: this.DeviceModels,\n    //         })\n    //       this.hideEditItem();\n    //     }\n    //     catch (err) {\n    //       console.log(err)\n    //     }\n    //   }\n    // },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Item?\", {\n          title: \"Please Confirm\",\n          size: \"sm\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => {\n          if (value) {\n            this.deleteItem();\n          }\n        })\n    },\n    async deleteItem() {\n      var selectedRows = this.$refs['item-table'].selectedRows;\n      for (var i = 0; i < selectedRows.length; i++) {\n        let endpoint = `/api/item/${selectedRows[i].id}/`;\n        try {\n          this.$delete(this.items, selectedRows[i].originalIndex)\n          await apiService(endpoint, \"DELETE\")\n        }\n        catch (err) {\n          console.log(err)\n        }\n      }\n    },\n    // editItem() {\n    //   var selectedRows = this.$refs['item-table'].selectedRows;\n    //   if (selectedRows.length == 1) {\n    //     this.NewIName = selectedRows[0].txtManufacturerName\n    //     this.$root.$emit('bv::toggle::collapse', 'collapse-u');\n    //   } else {\n    //     this.$bvModal.show(\"modal-2\");\n    //   }\n    // },\n    // hideEditItem() {\n    //   this.NewIName = '';\n    //   this.$root.$emit('bv::toggle::collapse', 'collapse-u')\n    // },\n    emptyInput() {\n      this.IName = '',\n      this.Description = '',\n      this.Type = '',\n      this.Verison = '',\n      this.Cost = '',\n      this.GtinEan = '',\n      this.Outline = '',\n      this.Link = '',\n      this.deviceModels = [],\n\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n  },\n  created() {\n    this.getItems()\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"]}]}