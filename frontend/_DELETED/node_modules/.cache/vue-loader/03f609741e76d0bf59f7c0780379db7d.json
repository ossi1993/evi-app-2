{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\App.vue","mtime":1600452037300},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from \"vuex\";\nimport { apiService } from \"@/common/api.service.js\";\n\nexport default {\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapGetters([\"getThemeMode\"]),\n    themeName() {\n      return this.getThemeMode.dark ? \"dark-theme\" : \" \";\n    },\n    rtl() {\n      return this.getThemeMode.rtl ? \"rtl\" : \" \";\n    },\n    getCookie() {\n      const c_name = 'csrftoken'\n      var c_value = document.cookie,\n        c_start = c_value.indexOf(\" \" + c_name + \"=\");\n      if (c_start == -1) c_start = c_value.indexOf(c_name + \"=\");\n      if (c_start == -1) {\n        c_value = null;\n      } else {\n        c_start = c_value.indexOf(\"=\", c_start) + 1;\n        var c_end = c_value.indexOf(\";\", c_start);\n        if (c_end == -1) {\n            c_end = c_value.length;\n        }\n        c_value = unescape(c_value.substring(c_start, c_end));\n      }\n      // return c_value;\n      if (!c_value) {\n        this.$router.push(\"/app/sessions/signIn\");\n      }\n    }\n  },\n  metaInfo() {\n    return {\n      // if no subcomponents specify a metaInfo.title, this title will be used\n      title: \"EVI\",\n      // all titles will be injected into this template\n      titleTemplate: \"%s | EVI\",\n      bodyAttrs: {\n        class: [this.themeName, \"text-left\"]\n      },\n      htmlAttrs: {\n        dir: this.rtl\n      }\n    };\n  }\n  \n};\n",null]}