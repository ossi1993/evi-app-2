{"remainingRequest":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\src\\views\\app\\apps\\editInvoice.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\src\\views\\app\\apps\\editInvoice.vue","mtime":1575914052000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nextcloud\\STORAGE\\KoopProjekteSTO\\030_DEVELOPMENT\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from \"vuex\";\nimport invoice from \"./invoice\";\n\nexport default {\n  components: {\n    invoice\n  },\n\n  data() {\n    return {\n      orderNumber: 0,\n      subTotal: 0,\n      invoice_subtotal: 0,\n      invoice_total: 0,\n      invoice_tax: 0,\n      newInvoice: {\n        billFrom: \"\",\n        billTo: \"\",\n        status: \"\",\n        billFromAddress: \"\",\n        billToAdress: \"\",\n        status: \"\",\n        invoiceId: \"\",\n        date: new Date()\n      },\n\n      name: \"\",\n      fields: [\"index\", \"itemName\", \"unitPrice\", \"unit\", \"cost\", \"action\"],\n      items: [\n        {\n          itemName: \"\",\n          unitPrice: \"\",\n          unit: \"\",\n          cost: 0\n        }\n      ]\n    };\n  },\n  computed: {\n    ...mapGetters([\"getEditInvoice\"])\n  },\n  methods: {\n    // vuex\n    ...mapActions([\"addInvoice\", \"editInvoice\", \"updateInvoice\"]),\n\n    updateInvoiceData() {\n      this.updateInvoice();\n      this.$router.push(\"/app/apps/invoice\");\n    },\n    saveInvoice() {\n      this.addInvoice(this.newInvoice);\n\n      this.$router.push(\"/app/apps/printInvoice\");\n    },\n\n    backInvoice() {\n      this.$router.push(\"/app/apps/invoice\");\n    },\n    addNewRow() {\n      this.items.push({\n        itemName: \"\",\n        unitPrice: \"\",\n        unit: \"\",\n        cost: 0\n      });\n    },\n    invoiceTotal() {\n      var subtotal, total;\n      subtotal = this.items.reduce(function(sum, item) {\n        var cost = parseFloat(item.cost);\n        if (!isNaN(cost)) {\n          return sum + cost;\n        }\n      }, 0);\n\n      this.subTotal = subtotal.toFixed(2);\n      // tax\n      total = subtotal * (this.invoice_tax / 100) + subtotal;\n      total = parseFloat(total);\n\n      console.log(total);\n      if (!isNaN(total)) {\n        this.invoice_total = total.toFixed(2);\n      } else {\n        this.invoice_total = \"0.00\";\n      }\n    },\n    deleteRow(index, item) {\n      console.log(\"Removing\", item, index);\n      this.items.splice(index, 1);\n      // this.calculateTotal();\n    },\n    calculateLineTotal(item) {\n      var total = parseInt(item.unitPrice) * parseInt(item.unit);\n      if (!isNaN(total)) {\n        item.cost = total.toFixed(2);\n      }\n\n      // this.calculateTotal();\n      this.invoiceTotal();\n    },\n\n    //global save\n    removeRow(id) {\n      this.rows.splice(this.rows.indexOf(id), 1);\n    }\n  }\n};\n",{"version":3,"sources":["editInvoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"editInvoice.vue","sourceRoot":"src/views/app/apps","sourcesContent":["<template>\n  <div class=\"main-content\">\n    <b-row>\n      <b-col md=\"12\">\n        <b-card>\n          <b-form>\n            <div class=\"d-flex mb-5\">\n              <span class=\"m-auto\"></span>\n              <b-button @click=\"backInvoice\" variant=\"outline-secondary mr-3\">\n                Cancel\n              </b-button>\n              <b-button @click=\"updateInvoiceData\" variant=\"primary\">\n                Update\n              </b-button>\n              <template slot=\"table-row\" slot-scope=\"props\">\n                <span v-if=\"props.column.field == 'button'\">\n                  <a @click=\"editInvoiceData(props.row)\">\n                    <i class=\"i-Eraser-2 text-25 text-success mr-2\"></i>\n                    {{ props.row.button }}</a\n                  >\n                  <a @click=\"removeInvoice(props.row.invoiceId)\">\n                    <i class=\"i-Close-Window text-25 text-danger\"></i>\n                    {{ props.row.button }}</a\n                  >\n                </span>\n              </template>\n            </div>\n\n            <b-row class=\"justify-content-between\">\n              <b-col lg=\"8\" md=\"6\">\n                <h4 class=\"font-weight-bold\">Order Info</h4>\n                <b-form-group class=\"col-sm-4 mb-3 pl-0\" label=\"Order Number\">\n                  <b-form-input\n                    placeholder=\"Enter Order Number\"\n                    v-model=\"getEditInvoice.invoiceId\"\n                  >\n                  </b-form-input>\n                </b-form-group>\n                <h2>{{ items.name }}</h2>\n              </b-col>\n              <b-col md=\"6\" lg=\"4\" class=\"text-right\">\n                <label class=\"d-block text-12 text-muted\">Order Status</label>\n\n                <div class=\"col-md-6 offset-md-6 pr-0 mb-30\">\n                  <label class=\"radio radio-reverse radio-danger\">\n                    <input type=\"radio\" name=\"orderStatus\" value=\"Pending\" />\n                    <span>Pending</span>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <label class=\"radio radio-reverse radio-warning\">\n                    <input type=\"radio\" name=\"orderStatus\" value=\"Processing\" />\n                    <span>Processing</span>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <label class=\"radio radio-reverse radio-success\">\n                    <input\n                      type=\"radio\"\n                      name=\"orderStatus\"\n                      value=\"Delivered\"\n                      v-model=\"newInvoice.status\"\n                    />\n                    <span>Delivered</span>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                </div>\n\n                <b-form-group class=\"mb-3\" label=\"Order Date\">\n                  <!-- <v-date-picker v-model=\"newInvoice.date\" /> -->\n                  <b-form-input\n                    v-model=\"newInvoice.date\"\n                    class=\"input\"\n                    type=\"date\"\n                  ></b-form-input>\n                </b-form-group>\n              </b-col>\n            </b-row>\n\n            <div class=\"mt-3 mb-30 border-top\"></div>\n\n            <b-row class=\"mb-5\">\n              <b-col md=\"6\">\n                <h5 class=\"font-weight-bold\">Bill From</h5>\n\n                <b-form-group class=\"col-md-10 mb-3 pl-0\">\n                  <b-form-input\n                    placeholder=\"Bill From\"\n                    type=\"text\"\n                    v-model=\"getEditInvoice.billFrom\"\n                    required\n                  >\n                  </b-form-input>\n                </b-form-group>\n                <b-form-group class=\"col-md-10 mb-3 pl-0\">\n                  <b-form-textarea\n                    placeholder=\"Bill Form Address\"\n                    v-model=\"getEditInvoice.billFromAdress\"\n                  >\n                  </b-form-textarea>\n                </b-form-group>\n              </b-col>\n              <b-col md=\"6\" class=\"text-right\">\n                <h5 class=\"font-weight-bold\">Bill To</h5>\n\n                <b-form-group class=\"col-md-10 offset-md-2 mb-3 pr-0\">\n                  <b-form-input\n                    placeholder=\"Bill to\"\n                    v-model=\"getEditInvoice.billTo\"\n                  >\n                  </b-form-input>\n                </b-form-group>\n                <b-form-group class=\"col-md-10 offset-md-2 mb-3 pr-0\">\n                  <b-form-textarea\n                    placeholder=\"Bill To Address\"\n                    v-model=\"getEditInvoice.billToAdress\"\n                  >\n                  </b-form-textarea>\n                </b-form-group>\n              </b-col>\n            </b-row>\n            <!-- multiple-row -->\n            <b-row>\n              <b-col md=\"12\" class=\"table-responsive\">\n                <b-table hover :items=\"items\" :fields=\"fields\">\n                  <template slot=\"index\" slot-scope=\"data\">\n                    <p class=\"font-weight-bold\">{{ data.index + 1 }}</p>\n                    <!-- {{data}}-->\n                  </template>\n                  <template slot=\"itemName\">\n                    <input\n                      class=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Item Name\"\n                    />\n                  </template>\n                  <template slot=\"unitPrice\" slot-scope=\"data\">\n                    <input\n                      v-model=\"data.item.unitPrice\"\n                      @change=\"calculateLineTotal(data.item)\"\n                      class=\"form-control\"\n                      type=\"number\"\n                      placeholder=\"Unit Price\"\n                    />\n                  </template>\n                  <template slot=\"unit\" slot-scope=\"data\">\n                    <input\n                      v-model=\"data.item.unit\"\n                      @change=\"calculateLineTotal(data.item)\"\n                      class=\"form-control\"\n                      type=\"number\"\n                      placeholder=\"Unit\"\n                    />\n                  </template>\n                  <template slot=\"cost\" slot-scope=\"data\">\n                    <input\n                      v-model=\"data.item.cost\"\n                      class=\"form-control\"\n                      readonly\n                    />\n                  </template>\n                  <template slot=\"action\" slot-scope=\"data\">\n                    <b-button\n                      @click=\"deleteRow(data.index, data.item)\"\n                      variant=\"outline-danger\"\n                      >Delete</b-button\n                    >\n                  </template>\n                </b-table>\n                <b-button\n                  @click=\"addNewRow\"\n                  variant=\"primary\"\n                  class=\"float-right mb-30\"\n                >\n                  Add Item\n                </b-button>\n              </b-col>\n\n              <b-col md=\"12\">\n                <div class=\"invoice-summary invoice-summary-input float-right\">\n                  <p>\n                    Sub total: <span>{{ subTotal }}</span>\n                  </p>\n                  <p class=\"d-flex align-items-center\">\n                    Vat(%):\n                    <span>\n                      <input\n                        @change=\"invoiceTotal(invoice_tax)\"\n                        v-model=\"invoice_tax\"\n                        class=\"form-control small-input \"\n                        type=\"text\"\n                      />\n                    </span>\n                  </p>\n                  <h5 class=\"font-weight-bold d-flex align-items-center\">\n                    Grand Total:\n                    <span>\n                      {{ invoice_total }}\n                    </span>\n                  </h5>\n                </div>\n              </b-col>\n            </b-row>\n          </b-form>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport invoice from \"./invoice\";\n\nexport default {\n  components: {\n    invoice\n  },\n\n  data() {\n    return {\n      orderNumber: 0,\n      subTotal: 0,\n      invoice_subtotal: 0,\n      invoice_total: 0,\n      invoice_tax: 0,\n      newInvoice: {\n        billFrom: \"\",\n        billTo: \"\",\n        status: \"\",\n        billFromAddress: \"\",\n        billToAdress: \"\",\n        status: \"\",\n        invoiceId: \"\",\n        date: new Date()\n      },\n\n      name: \"\",\n      fields: [\"index\", \"itemName\", \"unitPrice\", \"unit\", \"cost\", \"action\"],\n      items: [\n        {\n          itemName: \"\",\n          unitPrice: \"\",\n          unit: \"\",\n          cost: 0\n        }\n      ]\n    };\n  },\n  computed: {\n    ...mapGetters([\"getEditInvoice\"])\n  },\n  methods: {\n    // vuex\n    ...mapActions([\"addInvoice\", \"editInvoice\", \"updateInvoice\"]),\n\n    updateInvoiceData() {\n      this.updateInvoice();\n      this.$router.push(\"/app/apps/invoice\");\n    },\n    saveInvoice() {\n      this.addInvoice(this.newInvoice);\n\n      this.$router.push(\"/app/apps/printInvoice\");\n    },\n\n    backInvoice() {\n      this.$router.push(\"/app/apps/invoice\");\n    },\n    addNewRow() {\n      this.items.push({\n        itemName: \"\",\n        unitPrice: \"\",\n        unit: \"\",\n        cost: 0\n      });\n    },\n    invoiceTotal() {\n      var subtotal, total;\n      subtotal = this.items.reduce(function(sum, item) {\n        var cost = parseFloat(item.cost);\n        if (!isNaN(cost)) {\n          return sum + cost;\n        }\n      }, 0);\n\n      this.subTotal = subtotal.toFixed(2);\n      // tax\n      total = subtotal * (this.invoice_tax / 100) + subtotal;\n      total = parseFloat(total);\n\n      console.log(total);\n      if (!isNaN(total)) {\n        this.invoice_total = total.toFixed(2);\n      } else {\n        this.invoice_total = \"0.00\";\n      }\n    },\n    deleteRow(index, item) {\n      console.log(\"Removing\", item, index);\n      this.items.splice(index, 1);\n      // this.calculateTotal();\n    },\n    calculateLineTotal(item) {\n      var total = parseInt(item.unitPrice) * parseInt(item.unit);\n      if (!isNaN(total)) {\n        item.cost = total.toFixed(2);\n      }\n\n      // this.calculateTotal();\n      this.invoiceTotal();\n    },\n\n    //global save\n    removeRow(id) {\n      this.rows.splice(this.rows.indexOf(id), 1);\n    }\n  }\n};\n</script>"]}]}