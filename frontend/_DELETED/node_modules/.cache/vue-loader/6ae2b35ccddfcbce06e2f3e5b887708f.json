{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\results.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\results.vue","mtime":1601470124085},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ni:focus,\ninput:focus,\nselect:focus,\ntextarea:focus,\nbutton:focus {\n    outline: none;\n}\n#new-result-section {\n  cursor: pointer;\n  outline: none;\n}\n\n",{"version":3,"sources":["results.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"results.vue","sourceRoot":"src/views/app/inspection","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Results'\" :folder=\"'Inspection'\" />\n    <b-row>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-File-Clipboard-File--Text\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Results</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.results.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n\n    <!-- NEW RESULT OR UPDATE RESULT -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" @click=\"show = !show; updateStatus = false\" id=\"new-result-section\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Result</h5>\n            </b-row>\n            <div class=\"mt-3\" v-show=\"show\">\n              <b-row class=\"ml-3 mr-3\">\n                <b-col md=\"4\" class=\"mt-3\">\n                  <b-form-input id=\"input-1\" v-model=\"ReleasedBy\" type=\"text\" placeholder=\"Released by\" ></b-form-input>\n                </b-col>\n                <b-col md=\"4\" class=\"mt-3\">\n                  <v-select  id=\"select-1\" v-model=\"ReleaseStatus\" :options=\"optionReleaseStatus\" placeholder=\"Choose Release Status\" \n                  :reduce=\"ReleaseStatus => ReleaseStatus.code\"></v-select>\n                </b-col>\n                <b-col md=\"4\" class=\"mt-3\">\n                    <b-form-datepicker  id=\"date-1\" v-model=\"ReleaseDate\" placeholder=\"Release Date\" ></b-form-datepicker >\n                </b-col>\n              </b-row>\n              <b-row class=\"ml-3 mr-3\">\n                <b-col md=\"3\" class=\"mt-3\">\n                  <v-select  id=\"select-2\" v-model=\"Sample\" :options=\"samples\" placeholder=\"Choose Sample\" \n                  :get-option-label='label => label.idOrderItem.idItem.txtDescription + \" - \" + label.idOrderItem.datOrder' \n                  :reduce=\"Sample => Sample.id\"></v-select>\n                </b-col>\n                <b-col md=\"3\" class=\"mt-3\">\n                  <v-select  id=\"select-3\" v-model=\"Model\" :options=\"models\" label=\"txtModelName\" placeholder=\"Choose Model\" \n                  :reduce=\"Model => Model.id\"></v-select>\n                </b-col>\n                <b-col md=\"3\" class=\"mt-3\">\n                  <v-select  id=\"select-4\" v-model=\"Inspection\" :options=\"inspections\" label=\"txtInspectionNumber\" placeholder=\"Choose Inspection\" \n                  :reduce=\"Inspection => Inspection.id\"></v-select>\n                </b-col>\n                <b-col md=\"3\" class=\"mt-3\">\n                  <v-select  id=\"select-5\" v-model=\"Supplier\" :options=\"suppliers\" label=\"txtSupplierName\" placeholder=\"Choose Supplier\" \n                  :reduce=\"Supplier => Supplier.id\"></v-select>\n                </b-col>\n              </b-row>\n              <b-row class=\"ml-3 mr-3\">\n                <b-col md=\"4\" class=\"mt-3\">\n                  <v-select  id=\"select-6\" v-model=\"Reference\" :options=\"optionReference\" placeholder=\"Choose Reference Status\" \n                  :reduce=\"Reference => Reference.code\"></v-select>\n                </b-col>\n                <b-col md=\"8\" class=\"mt-3\">\n                  <b-form-input id=\"input-3\" v-model=\"Link\" type=\"text\" placeholder=\"Link\" ></b-form-input>\n                </b-col>\n              </b-row>\n\n              <b-row class=\"ml-3 mr-3 mt-3\">\n                <b-col md=\"12\">\n                  <b-form-textarea id=\"area-1\" v-model=\"Comment\" placeholder=\"Enter something...\" rows=\"3\" max-rows=\"6\"></b-form-textarea>\n                </b-col>\n              </b-row>\n              \n              <!-- NEW RESULT / UPDATE RESULT BUTTONS -->\n              <b-row class=\"ml-3 mt-5 mr-3\">\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-info\">Cancel</b-button>\n                </b-col>\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"addResult\" block variant=\"success\" :disabled=\"disabled\">Add Result</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"updateResult\" block variant=\"warning\" :disabled=\"disabled\">Update Result</b-button>\n                </b-col>\n              </b-row>\n              <b-row class=\"ml-3 mt-3 mr-3\">\n                <b-col md=\"12\">\n                  <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                    <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                  </b-alert>\n                </b-col>\n              </b-row>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID INSPECTION -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <h5 class=\"card-title p-3 pb-0 mb-3\">Results</h5>\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridResult\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                :excelStyles=\"excelStyles\"\n                @cellValueChanged=\"updateResultGrid\"\n                @gridReady=\"onGridReady\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :getContextMenuItems=\"getContextMenu\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"excelExportResult\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Inspection\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID INSPECTION VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      excelStyles: null,\n      frameworkComponents: null,\n      modules: AllModules,\n      domLayout: null,\n      paginationPageSize: 0,\n      params: null,\n      eGui: null,\n\n      // VUE VARIABLES\n      results: [],\n      samples: [],\n      models: [],\n      inspections: [],\n      suppliers: [],\n\n      ReleasedBy: null,\n      ReleaseDate: null,\n      ReleaseStatus: null,\n      Reference: false,\n      Link: null,\n      Comment: null,\n      Sample: null,\n      Model: null,\n      Inspection: null,\n      Supplier: null,\n      show: false,\n      date: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      optionReference: [\n        { code: true, label: 'Yes' },\n        { code: false, label: 'No' },\n      ],\n      optionReleaseStatus: [\n        { code: 'Approved', label: 'Approved' },\n        { code: 'Not Approved', label: 'Not Approved' },\n        { code: 'Cancelled', label: 'Cancelled' },\n      ]\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Released by\", field: \"txtReleasedBy\", filter: 'agTextColumnFilter', },\n      {headerName: \"Release Date\", field: \"datReleaseDate\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Release Status\", field: \"txtReleaseStatus\", filter: 'agTextColumnFilter', \n      cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Approved', 'Not Approved', 'Cancelled']}},\n      // {headerName: \"Reference\", field: \"blnReference\", filter: 'agTextColumnFilter', \n      // cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Yes', 'No'], formatValue: ['YES', 'NO']}},\n      {headerName: \"Reference\", field: \"blnReference\", filter: 'agTextColumnFilter', valueGetter: blnValueGetter, editable: false, },\n      {headerName: \"Model\", field: \"idModel.txtModelName\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Supplier\", field: \"idSupplier.txtSupplierName\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Sample\", field: \"idSample.idOrderItem.idItem.txtDescription\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Inspection\", field: \"idInspection.txtInspectionNumber\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Link\", field: \"txtLink\", filter: 'agTextColumnFilter', editable: false, },\n      {headerName: \"Memo\", field: \"txtComment\", filter: 'agTextColumnFilter', editable: false, },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('result_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('result_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function() {\n      return !this.ReleasedBy ? true : !this.ReleaseDate ? true : !this.ReleaseStatus ? true : !this.Sample ? true : !this.Model ? true : !this.Inspection ? true : !this.Supplier ? true : false;\n    },\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('result_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('result_columnStats', null);\n    },\n    excelExportResult() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onGridReady(params) { \n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridOptions.paginationSetPageSize(Number(value));\n    },\n    addResult() {\n      let endpoint = `/api/result/`;\n      apiService(endpoint, \"POST\", { \n        txtReleasedBy: this.ReleasedBy,\n        datReleaseDate: this.ReleaseDate,\n        txtReleaseStatus: this.ReleaseStatus,\n        blnReference: this.Reference,\n        txtLink: this.Link,\n        txtComment: this.Comment,\n        idSample: this.Sample,\n        idModel: this.Model,\n        idInspection: this.Inspection,\n        idSupplier: this.Supplier,\n        })\n        .then(response => {\n          if (response != 'ERROR') {\n            this.getResults();\n            this.emptyInput()\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    editResultMenu(params) {\n      let sel = params.node.data;\n      this.ReleasedBy = sel.txtReleasedBy;\n      this.ReleaseDate = sel.datReleaseDate;\n      this.ReleaseStatus = sel.txtReleaseStatus;\n      this.Reference = sel.blnReference;\n      this.Link = sel.txtLink;\n      this.Comment = sel.txtComment;\n      this.Sample = sel.idSample;\n      this.Model = sel.idModel;\n      this.Inspection = sel.idInspection;\n      this.Supplier = sel.idSupplier;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateResult() {\n      let endpoint = `/api/result/${this.updateId}/`;\n      await apiService(endpoint, \"PATCH\", { \n        txtReleasedBy: this.ReleasedBy,\n        datReleaseDate: this.ReleaseDate,\n        txtReleaseStatus: this.ReleaseStatus,\n        blnReference: this.Reference,\n        txtLink: this.Link,\n        txtComment: this.Comment,\n        idSample: this.Sample,\n        idModel: this.Model,\n        idInspection: this.Inspection,\n        idSupplier: this.Supplier,\n        })\n        .then(response => {\n          if (response != 'ERROR'){\n            this.emptyInput();\n            this.getResults();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    async updateResultGrid(event) {     \n      let endpoint = `/api/result/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtReleasedBy: event.node.data.txtReleasedBy,\n          datReleaseDate: event.node.data.datReleaseDate,\n          txtReleaseStatus: event.node.data.txtReleaseStatus,\n          blnReference: event.node.data.blnReference,\n          txtLink: event.node.data.txtLink,\n          txtComment: event.node.data.txtComment,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Result?\", {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => { if (value) { this.deleteResult(params); } })\n        .catch(err => console.log(err));\n    },\n    async deleteResult(params) {\n      let endpoint = `/api/result/${params.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\")\n        this.getResults();\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    emptyInput() {\n      this.ReleasedBy = '',\n      this.ReleaseDate = '',\n      this.ReleaseStatus = '',\n      this.Reference = '',\n      this.Link = '',\n      this.Comment = '',\n      this.Sample = '',\n      this.Model = '',\n      this.Inspection = '',\n      this.Supplier = '',\n      this.show = false;\n    },\n    getResults() {\n      this.results = [];\n      let endpoint = `/api/result-list/`;\n      apiService(endpoint)\n        .then(data => {\n          this.results.push(...data.results);\n          this.rowData = this.results\n        })\n        .catch(err => console.log(err));\n    },\n    getSamples() {\n      this.samples = [];\n      let endpoint = `/api/sample-list/`;\n      apiService(endpoint)\n        .then(data => {this.samples.push(...data.results);})\n        .catch(err => console.log(err));\n    },\n    getModels() {\n      this.models = [];\n      let endpoint = `/api/model/`;\n      apiService(endpoint)\n        .then(data => {this.models.push(...data.results);})\n        .catch(err => console.log(err));\n    },\n    getInspections() {\n      this.inspections = [];\n      let endpoint = `/api/inspection/`;\n      apiService(endpoint)\n        .then(data => {this.inspections.push(...data.results);})\n        .catch(err => console.log(err));\n    },\n    getSuppliers() {\n      this.suppliers = [];\n      let endpoint = `/api/supplier/`;\n      apiService(endpoint)\n        .then(data => {this.suppliers.push(...data.results);})\n        .catch(err => console.log(err));\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Result',\n          action: () => this.editResultMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Result',\n          action: () => this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getDateToday();\n    this.getResults();\n    this.getSamples();\n    this.getModels();\n    this.getInspections();\n    this.getSuppliers();\n  },\n};\n\nwindow.blnValueGetter = function(params) {\n  return !params.data.blnReference ? 'No' : 'Yes'\n}\n\n</script>\n\n<style>\n\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  #new-result-section {\n    cursor: pointer;\n    outline: none;\n  }\n  \n</style>\n"]}]}