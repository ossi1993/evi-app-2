{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\templates.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\templates.vue","mtime":1598278465139},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\n\nexport default {\n  metaInfo: {    \n    title: \"Template\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsAtt: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [\n        ClientSideRowModelModule,\n        SetFilterModule,\n        RichSelectModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n        MasterDetailModule,\n      ],\n      templates: [],\n      attributes: [],\n      typeAttributes: [],\n      selAtt: [],\n      show: false,\n      visible: false,\n      TempName: '',\n      Type: '',\n      IType: null,\n      date: null,\n      next: null,\n      error: false,\n      optionsItemTypes: [\n        { value: 'Glass', text: 'Glass' },\n        { value: 'Case', text: 'Case' },\n        { value: 'Frame', text: 'Frame' },\n      ],\n      optionsType: [\n        { value: 'MF', text: 'Mess & Funktionsprüfung' },\n        { value: 'CH', text: 'Chemische Prüfung' },\n        { value: 'PH', text: 'Physikalische Prüfung' },\n        { value: 'CA', text: 'Case Prüfung' },\n        { value: 'FR', text: 'Frame Prüfung' },\n        { value: 'QS', text: 'Qualitätssicherungsprüfung' },\n      ],\n      optionsAttributes: [],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Template Name\", field: \"txtInspectionTemplateName\", filter: 'agTextColumnFilter', cellRenderer: 'agGroupCellRenderer', checkboxSelection: true,},\n      {headerName: \"Template Type\", field: \"txtInspectionTemplateType\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', \n        cellEditorParams: { cellHeight: 50, values: ['MF', 'CH', 'PH', 'CA', 'FR', 'QS']}\n      },\n    ],\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: 20,\n        columnDefs: [\n          {headerName: \"Item Type\", field: \"txtItemType\",},\n          {headerName: \"Attribute Key\", field: \"txtKeyAttribute\",},\n          {headerName: \"Attribute Name\", field: \"txtNameAttribute\",},\n          {headerName: \"Default Value\", field: \"txtValueDefault\",},\n          {headerName: \"Value Type\", field: \"txtValueType\",},\n          {headerName: \"Measure Unit\", field: \"txtMeasureUnit\",},\n        ],\n        defaultColDef: { \n          flex: 1,\n          editable: true,\n          resizable: true,\n          },\n      },\n      getDetailRowData: params => {\n        params.successCallback(params.data.idInspectionTemplateAttribute);\n      },\n    }\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    onChange(event) {\n      this.optionsAttributes = [];\n      this.typeAttributes = [];\n      let endpoint = `/api/inspection-template-attribute/`;\n      apiService(endpoint)\n        .then(data => {\n          this.typeAttributes.push(...data.results);\n          this.typeAttributes.forEach(el => el.txtItemType == event ? this.optionsAttributes.push(el) : null)\n        })\n    },\n\n    autoSizeAll(skipHeader) {\n      var allColumnIds = [];\n      this.gridColumnApi.getAllColumns().forEach(function(column) {\n        allColumnIds.push(column.colId);\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    },\n    async cellValueChanged(event) {     \n      let endpoint = `/api/inspection-template/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtInspectionTemplateName: event.node.data.txtInspectionTemplateName,\n          txtInspectionTemplateType: event.node.data.txtInspectionTemplateType,\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    getTemplates() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n            this.rowData = this.templates\n          })\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-attribute/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            // this.optionsAttributes = this.attributes\n          })\n      }\n    },\n    addTemplate() {\n      if (this.TempName) {\n        let endpoint = `/api/inspection-template/`;\n        apiService(endpoint, \"POST\", { \n          txtInspectionTemplateName: this.TempName,\n          txtInspectionTemplateType: this.Type,\n          idInspectionTemplateAttribute: this.selAtt,\n          })\n          .then(data => {\n            if (data){\n              this.templates.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.emptyInput();\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Template?\", {\n          title: \"Please Confirm\",\n          size: \"sm\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => {\n          if (value) {\n            this.deleteTemplate();\n          }\n        })\n    },\n    async deleteTemplate() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      let endpoint = `/api/inspection-template/${selectedRows[0].id}/`;\n      try {\n        var index = this.items.map(function(e) { return e.id; }).indexOf(selectedRows[0].id);\n        this.$delete(this.templates, index)\n        await apiService(endpoint, \"DELETE\")\n        this.show = this.show ? false : true\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    createInspection() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      localStorage.setItem('ITempID', selectedRows[0].id)\n      this.$router.push('inspection')\n    },\n    deleteTempId() {\n      localStorage.removeItem('ITempID')\n    },\n    emptyInput() {\n      this.TempName = '',\n      this.Type = null,\n      this.IType = null,\n      this.selAtt = null,\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getDateToday();\n    this.deleteTempId();\n  },\n};\n",{"version":3,"sources":["templates.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"templates.vue","sourceRoot":"src/views/app/inspection","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Templates'\" :folder=\"'Inspection'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-File\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Templates</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.templates.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" v-b-toggle.collapse-e></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Template</h5>\n            </b-row>\n            <b-collapse id=\"collapse-e\" class=\"mt-3\">\n              <b-form>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"4\">\n                    <b-form-input id=\"input-1\" v-model=\"TempName\" type=\"text\" required placeholder=\"Template Name\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-select id=\"select-1\" v-model=\"Type\" :options=\"optionsType\" required ></b-form-select>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-select id=\"select-2\" v-model=\"IType\" :options=\"optionsItemTypes\" @change=\"onChange($event)\" required ></b-form-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\" v-if=\"IType\">\n                  <b-col md=\"12\">\n                    <b-form-checkbox-group  id=\"select-3\" v-model=\"selAtt\" :options=\"optionsAttributes\" multiple\n                      value-field=\"id\" text-field=\"txtNameAttribute\"></b-form-checkbox-group>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"6\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-primary\">Delete Input</b-button>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-button @click=\"addTemplate\" block variant=\"primary\">Add Template</b-button>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </b-collapse>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridItems\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @cellValueChanged=\"cellValueChanged\"\n                @row-selected=\"onRowSelected\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :pagination=\"true\"\n                :paginationPageSize=\"10\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-collapse v-model=\"show\" class=\"ml-1 mr-3\">\n      <b-button @click=\"createInspection\" variant=\"primary\" class=\"mr-4\">Create New Inspection</b-button>\n      <b-button @click=\"openModal\" variant=\"outline-primary\">Delete Template</b-button>\n    </b-collapse>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\n\nexport default {\n  metaInfo: {    \n    title: \"Template\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsAtt: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [\n        ClientSideRowModelModule,\n        SetFilterModule,\n        RichSelectModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n        MasterDetailModule,\n      ],\n      templates: [],\n      attributes: [],\n      typeAttributes: [],\n      selAtt: [],\n      show: false,\n      visible: false,\n      TempName: '',\n      Type: '',\n      IType: null,\n      date: null,\n      next: null,\n      error: false,\n      optionsItemTypes: [\n        { value: 'Glass', text: 'Glass' },\n        { value: 'Case', text: 'Case' },\n        { value: 'Frame', text: 'Frame' },\n      ],\n      optionsType: [\n        { value: 'MF', text: 'Mess & Funktionsprüfung' },\n        { value: 'CH', text: 'Chemische Prüfung' },\n        { value: 'PH', text: 'Physikalische Prüfung' },\n        { value: 'CA', text: 'Case Prüfung' },\n        { value: 'FR', text: 'Frame Prüfung' },\n        { value: 'QS', text: 'Qualitätssicherungsprüfung' },\n      ],\n      optionsAttributes: [],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Template Name\", field: \"txtInspectionTemplateName\", filter: 'agTextColumnFilter', cellRenderer: 'agGroupCellRenderer', checkboxSelection: true,},\n      {headerName: \"Template Type\", field: \"txtInspectionTemplateType\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', \n        cellEditorParams: { cellHeight: 50, values: ['MF', 'CH', 'PH', 'CA', 'FR', 'QS']}\n      },\n    ],\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: 20,\n        columnDefs: [\n          {headerName: \"Item Type\", field: \"txtItemType\",},\n          {headerName: \"Attribute Key\", field: \"txtKeyAttribute\",},\n          {headerName: \"Attribute Name\", field: \"txtNameAttribute\",},\n          {headerName: \"Default Value\", field: \"txtValueDefault\",},\n          {headerName: \"Value Type\", field: \"txtValueType\",},\n          {headerName: \"Measure Unit\", field: \"txtMeasureUnit\",},\n        ],\n        defaultColDef: { \n          flex: 1,\n          editable: true,\n          resizable: true,\n          },\n      },\n      getDetailRowData: params => {\n        params.successCallback(params.data.idInspectionTemplateAttribute);\n      },\n    }\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    onChange(event) {\n      this.optionsAttributes = [];\n      this.typeAttributes = [];\n      let endpoint = `/api/inspection-template-attribute/`;\n      apiService(endpoint)\n        .then(data => {\n          this.typeAttributes.push(...data.results);\n          this.typeAttributes.forEach(el => el.txtItemType == event ? this.optionsAttributes.push(el) : null)\n        })\n    },\n\n    autoSizeAll(skipHeader) {\n      var allColumnIds = [];\n      this.gridColumnApi.getAllColumns().forEach(function(column) {\n        allColumnIds.push(column.colId);\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    },\n    async cellValueChanged(event) {     \n      let endpoint = `/api/inspection-template/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtInspectionTemplateName: event.node.data.txtInspectionTemplateName,\n          txtInspectionTemplateType: event.node.data.txtInspectionTemplateType,\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    getTemplates() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n            this.rowData = this.templates\n          })\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-attribute/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            // this.optionsAttributes = this.attributes\n          })\n      }\n    },\n    addTemplate() {\n      if (this.TempName) {\n        let endpoint = `/api/inspection-template/`;\n        apiService(endpoint, \"POST\", { \n          txtInspectionTemplateName: this.TempName,\n          txtInspectionTemplateType: this.Type,\n          idInspectionTemplateAttribute: this.selAtt,\n          })\n          .then(data => {\n            if (data){\n              this.templates.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.emptyInput();\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Template?\", {\n          title: \"Please Confirm\",\n          size: \"sm\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => {\n          if (value) {\n            this.deleteTemplate();\n          }\n        })\n    },\n    async deleteTemplate() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      let endpoint = `/api/inspection-template/${selectedRows[0].id}/`;\n      try {\n        var index = this.items.map(function(e) { return e.id; }).indexOf(selectedRows[0].id);\n        this.$delete(this.templates, index)\n        await apiService(endpoint, \"DELETE\")\n        this.show = this.show ? false : true\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    createInspection() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      localStorage.setItem('ITempID', selectedRows[0].id)\n      this.$router.push('inspection')\n    },\n    deleteTempId() {\n      localStorage.removeItem('ITempID')\n    },\n    emptyInput() {\n      this.TempName = '',\n      this.Type = null,\n      this.IType = null,\n      this.selAtt = null,\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getDateToday();\n    this.deleteTempId();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"]}]}