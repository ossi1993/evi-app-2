{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection.vue","mtime":1598013742506},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport $ from 'jquery';\n\nexport default {\n  metaInfo: {    \n    title: \"New Inspection\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      inspectionName: null,\n      templates: [],\n      attributes: [],\n      testAtt: [],\n      error: false,\n    };\n  },\n  mounted() {\n    // this.inspectionName = 'Mess & Funktionsprüfung'\n    // this.inspectionName = this.testAtt.txtInspectionTemplateName\n  },\n  methods: {\n    createPDF() {\n      var pdf = new jsPDF('p', 'pt', 'A4');\n      var div = document.getElementById('inspection')\n\n      html2canvas(div).then(function(canvas) {\n        var imgData = canvas.toDataURL('image/png');              \n        var doc = new jsPDF('p', 'mm');\n        doc.addHTML(imgData, 'PNG', 10, 10);\n        doc.save(this.inspectionName + '.pdf');\n      })\n\n      // pdf.fromHTML(this.$refs.inspection, 15, 15,)\n      // pdf.save(this.inspectionName + '.pdf');\n\n\n      // pdf.html(document.getElementById('inspection'), {\n      //   callback: function (doc) {\n      //     doc.save()\n      //   },\n      // });\n\n\n    },\n    getTemplates() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n            this.rowData = this.templates\n          })\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            this.optionsAttributes = this.attributes\n            // console.log(Object.values(this.attributes)[0])\n            this.testAtt = this.attributes[0]\n            this.inspectionName = this.testAtt.txtInspectionTemplateName\n          })\n      }\n    },\n    addTemplate() {\n      if (this.TempName) {\n        let endpoint = `/api/inspection-template/`;\n        apiService(endpoint, \"POST\", { \n          txtInspectionTemplateName: this.TempName,\n          txtInspectionTemplateType: this.Type,\n          idInspectionTemplateAttribute: this.selAtt,\n          })\n          .then(data => {\n            if (data){\n              this.templates.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.TempName = null;\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    emptyInput() {\n      this.TempName = '',\n      this.Type = [],\n      this.optionsAttributes = [],\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n  },\n};\n",{"version":3,"sources":["inspection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"inspection.vue","sourceRoot":"src/views/app/inspection","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=this.inspectionName :folder=\"'Inspection'\" />\n\n\n    <!-- <b-row class=\"ml-3 mr-3 mt-3\" v-for=\"attribute in testAtt.idInspectionTemplateAttribute\" :key=\"attribute.id\">\n      <b-input-group>\n        <template v-slot:prepend>\n          <b-input-group-text >{{ attribute.txtNameAttribute }}</b-input-group-text>\n        </template>\n        <b-form-input></b-form-input>\n      </b-input-group>\n    </b-row> -->\n\n    <div class=\"row\" id=\"inspection\">\n      <div class=\"col-md-12\">\n        <div class=\"card\">\n          <div class=\"card-body p-0\">\n            <h5 class=\"card-title p-3 pb-0 mb-0\">{{ this.inspectionName }}</h5>\n            <b-row class=\"mr-3 p-3 pt-0\">\n              <b-col md=\"2\" class=\"mt-3\" v-for=\"attribute in testAtt.idInspectionTemplateAttribute\" :key=\"attribute.id\">\n                <b-input-group>\n                  <template v-slot:prepend>\n                    <b-input-group-text >{{ attribute.txtNameAttribute }}</b-input-group-text>\n                  </template>\n                  <b-form-input></b-form-input>\n                </b-input-group>\n              </b-col>\n            </b-row>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <b-button class=\"ml-2 mr-3 mt-5\" variant=\"primary\">Save Inspection</b-button>\n    <b-button @click=\"createPDF\" class=\"ml-2 mr-3 mt-5\" variant=\"outline-primary\">PDF</b-button>\n\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport $ from 'jquery';\n\nexport default {\n  metaInfo: {    \n    title: \"New Inspection\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      inspectionName: null,\n      templates: [],\n      attributes: [],\n      testAtt: [],\n      error: false,\n    };\n  },\n  mounted() {\n    // this.inspectionName = 'Mess & Funktionsprüfung'\n    // this.inspectionName = this.testAtt.txtInspectionTemplateName\n  },\n  methods: {\n    createPDF() {\n      var pdf = new jsPDF('p', 'pt', 'A4');\n      var div = document.getElementById('inspection')\n\n      html2canvas(div).then(function(canvas) {\n        var imgData = canvas.toDataURL('image/png');              \n        var doc = new jsPDF('p', 'mm');\n        doc.addHTML(imgData, 'PNG', 10, 10);\n        doc.save(this.inspectionName + '.pdf');\n      })\n\n      // pdf.fromHTML(this.$refs.inspection, 15, 15,)\n      // pdf.save(this.inspectionName + '.pdf');\n\n\n      // pdf.html(document.getElementById('inspection'), {\n      //   callback: function (doc) {\n      //     doc.save()\n      //   },\n      // });\n\n\n    },\n    getTemplates() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n            this.rowData = this.templates\n          })\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            this.optionsAttributes = this.attributes\n            // console.log(Object.values(this.attributes)[0])\n            this.testAtt = this.attributes[0]\n            this.inspectionName = this.testAtt.txtInspectionTemplateName\n          })\n      }\n    },\n    addTemplate() {\n      if (this.TempName) {\n        let endpoint = `/api/inspection-template/`;\n        apiService(endpoint, \"POST\", { \n          txtInspectionTemplateName: this.TempName,\n          txtInspectionTemplateType: this.Type,\n          idInspectionTemplateAttribute: this.selAtt,\n          })\n          .then(data => {\n            if (data){\n              this.templates.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.TempName = null;\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    emptyInput() {\n      this.TempName = '',\n      this.Type = [],\n      this.optionsAttributes = [],\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"]}]}