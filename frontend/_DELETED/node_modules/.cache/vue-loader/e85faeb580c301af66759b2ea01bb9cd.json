{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-list.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\item\\item-list.vue","mtime":1601482502699},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ni:focus,\ninput:focus,\nselect:focus,\ntextarea:focus,\nbutton:focus {\n    outline: none;\n}\n#new-item-section {\n  cursor: pointer;\n  outline: none;\n}\n.input-group-append, .input-group-prepend, .dropdown-toggle {\n  width: auto!important;\n}\n.input-group-text {\n  font-weight: 800!important;\n}\n.divider {\n  border: solid 1px rgba(141, 141, 141, 0.404);\n  overflow: hidden;\n}\n.multiselect__tag {\n  background-color: #003473;\n}\n.multiselect__tag-icon::after {\n  color: #fff;\n}\n.headline {\n  background-color: #0034736b;\n}\n",{"version":3,"sources":["item-list.vue"],"names":[],"mappingspBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"item-list.vue","sourceRoot":"src/views/app/item","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'List'\" :folder=\"'Item'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Eci-Icon\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Items</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.items.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\" id=\"card-item\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" id=\"new-item-section\" @click=\"show = !show; updateStatus = false\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Item</h5>\n            </b-row>\n            <div class=\"mt-3\" v-show=\"show\">\n              <b-form>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"4\">\n                    <b-form-input id=\"input-1\" v-model=\"ArtNum\" type=\"text\" required placeholder=\"Article Number\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-input id=\"input-2\" v-model=\"Description\" type=\"text\" required placeholder=\"Description\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-input id=\"input-3\" v-model=\"Version\" type=\"text\" required placeholder=\"Version\" ></b-form-input>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"3\">\n                    <b-form-input id=\"input-4\" v-model=\"Cost\" type=\"number\" step=\"0.01\" placeholder=\"Cost\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"3\">\n                    <b-form-input id=\"input-5\" v-model=\"GtinEan\" type=\"text\" placeholder=\"GTIN / EAN\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"3\">\n                    <v-select  id=\"select-1\" v-model=\"Type\" :options=\"optionsType\" required placeholder=\"Choose Item Type\" :reduce=\"Type => Type.code\"></v-select>\n                  </b-col>\n                  <b-col md=\"3\">\n                    <v-select  id=\"select-2\" v-model=\"ItemGroup\" :options=\"optionsItemGroup\" required placeholder=\"Choose Item Group\" :reduce=\"ItemGroup => ItemGroup.code\"></v-select>\n                  </b-col>\n                </b-row>\n                <!-- <b-row class=\"ml-3 mr-3 mt-4\">\n                    <b-form-file class=\"ml-3 mr-3\" multiselect v-model=\"Link\"\n                        label-cols-sm=\"sm\" placeholder=\"Choose a file or drop it here...\" drop-placeholder=\"Drop file here...\"\n                    ></b-form-file>\n                </b-row> -->\n                <b-row class=\"ml-3 mr-3 mt-3\">\n                  <b-col md=\"12\">\n                    <b-form-textarea id=\"area-1\" v-model=\"Comment\" placeholder=\"Enter something...\" rows=\"3\" max-rows=\"6\"></b-form-textarea>\n                  </b-col>\n                </b-row>\n                <!-- SELECT MODELS -->\n                <b-row class=\"divider ml-4 mr-4 mt-4 mb-4\"></b-row>\n                <b-row class=\"ml-3 mr-3 mt-4\">\n                  <b-col md=\"12\">\n                    <multiselect\n                        v-model=\"selectedModels\" placeholder=\"Choose Models\" label=\"txtModelName\" \n                        track-by=\"id\" :options=\"optionsModels\" :multiple=\"true\" :taggable=\"true\" :close-on-select=\"false\"\n                        :searchable=\"true\" open-direction=\"bottom\">\n                    </multiselect>\n                  </b-col>\n                </b-row>\n                <!-- SELECT TEMPLATE ATTRIBUTES -->\n                <div>\n                  <b-row class=\"ml-3 mr-3 mt-3\">\n                    <b-col md=\"12\">\n                      <multiselect\n                        v-model=\"selectedAttributes\" placeholder=\"Choose Attributes\" label=\"txtNameAttribute\" \n                        track-by=\"id\" :options=\"optionAttributes\" :multiple=\"true\" :taggable=\"true\" :close-on-select=\"false\"\n                        :searchable=\"true\" open-direction=\"bottom\">\n                      </multiselect>\n                      <h5 class=\"mt-4\" v-show=\"selectedAttributes != null\">Item Attributes</h5>\n                    </b-col>\n                  </b-row>\n                  <b-row class=\"ml-3 mr-3 mt-3\" v-for=\"att in selectedAttributes\" :key=\"att.id\">\n                    <b-input-group \n                        class=\"ml-3 mr-3\" \n                        :prepend=\"att.txtKeyAttribute + ' - ' + att.txtNameAttribute\" \n                        :append=\"att.txtParameter\">\n                      <b-form-input v-model=\"att.txtValueDefault\" type=\"text\"></b-form-input>\n                    </b-input-group>\n                  </b-row>\n                </div>\n                \n                <!-- NEW ITEM / UPDATE ITEM BUTTONS -->\n                <b-row class=\"ml-3 mr-3 mt-5\">\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-else-if=\"updateStatus\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-info\">Cancel</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-if=\"!updateStatus\">\n                    <b-button @click=\"addItem\" block variant=\"success\" :disabled=\"disabled\">Add Item</b-button>\n                  </b-col>\n                  <b-col md=\"6\" v-else-if=\"updateStatus\">\n                    <b-button @click=\"updateItem\" block variant=\"warning\" :disabled=\"disabled\">Update Item</b-button>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <h5 class=\"card-title p-3 pb-0 mb-3\">Items</h5>\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridItems\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @grid-ready=\"onGridReady\"\n                @cellValueChanged=\"updateItemGrid\"\n                @row-selected=\"onRowSelectedItem\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :domLayout=\"domLayout\"\n                :getContextMenuItems=\"getContextMenu\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- AG-GRID ATTRIBUTES -->\n    <div class=\"row\" v-if=\"selectedItem\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <h5 class=\"card-title p-3 pb-0 mb-3\">Attributes</h5>\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridAttributes\"\n                @cellValueChanged=\"updateAttributeGrid\"\n                @grid-ready=\"onGridReady1\"\n                :defaultColDef=\"defaultColDef1\"\n                :columnDefs=\"columnDefs1\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData1\"\n                :gridOptions=\"gridOptions1\"\n                :suppressRowClickSelection=\"true\"\n                :pagination=\"true\"\n                :paginationPageSize=\"50\"\n                :getContextMenuItems=\"getContextMenu1\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Item\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      gridColumnApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: AllModules,\n\n      // AG-GRID ATTRIBUTES VARIABLES\n      gridOptions1: null,\n      gridApi1: null,\n      gridColumnApi1: null,\n      defaultColDef1: null,\n      columnDefs1: null,\n      rowData1: null,\n      defaultColDef1: null,\n      paginationPageSize1: 0,\n      \n      // VUE VARIABLES\n      items: [],\n      attributes: [],\n      tempAttributes: [],\n      models: [],\n      show: false,\n      selectedModels: null,\n      selectedAttributes: null,\n      attValue: null,\n\n      ArtNum: null,\n      Description: null,\n      Type: null,\n      Version: null,\n      Cost: null,\n      GtinEan: null,\n      ItemGroup:null,\n      Link: null,\n      Comment: null,\n      date: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      selectedItem: false,\n      optionsType: [\n        { code: 'Glass', label: 'Glass' },\n        { code: 'Case', label: 'Case' },\n        { code: 'Frame Standard', label: 'Frame Standard' },\n        { code: 'Frame Eco', label: 'Frame Eco' },\n        { code: 'Combi', label: 'Combi' },\n      ],\n      optionsItemGroup: [\n        { code: '2D', label: '2D' },\n        { code: '3D', label: '3D' },\n        { code: 'FC', label: 'Full Cover' },\n      ],\n      optionsModels: [],\n      optionAttributes: [],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.gridOptions1 = {};\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.columnDefs = [\n      {headerName: \"Article Number\", field: \"txtArticlenumber\", filter: 'agTextColumnFilter', cellRenderer: 'agGroupCellRenderer', checkboxSelection: true,},\n      {headerName: \"Item Description\", field: \"txtDescription\", filter: 'agTextColumnFilter', width: 300,},\n      {headerName: \"Type\", field: \"txtType\", filter: 'agTextColumnFilter', editable: true, cellEditor: 'agRichSelectCellEditor', \n      cellEditorParams: { cellHeight: 50, values: ['Glass', 'Case', 'Frame Standard', 'Frame Eco', 'Combi']}, },\n      {headerName: \"Version\", field: \"txtVersion\", filter: 'agTextColumnFilter',},\n      {headerName: \"Cost\", field: \"curCost\", filter: 'agTextColumnFilter', hide: true,},\n      {headerName: \"GTIN / EAN\", field: \"txtGtinEan\", filter: 'agTextColumnFilter',},\n      {headerName: \"Item Group\", field: \"txtItemGroup\", filter: 'agTextColumnFilter',},\n      {headerName: \"Link\", field: \"txtLink\", filter: 'agTextColumnFilter', editable: false,},\n      {headerName: \"Memo\", field: \"txtComment\", filter: 'agTextColumnFilter', },\n    ],\n    this.columnDefs1 = [\n      {headerName: \"Key Attribute\", field: \"txtKeyAttribute\", filter: 'agTextColumnFilter', },\n      {headerName: \"Name Attribute\", field: \"txtNameAttribute\", filter: 'agTextColumnFilter', },\n      {headerName: \"Value Attribute\", field: \"txtValueAttribute\", filter: 'agTextColumnFilter', },\n      {headerName: \"Value Type\", field: \"txtValueType\", filter: 'agTextColumnFilter', },\n      {headerName: \"Parameter\", field: \"txtParameter\", filter: 'agTextColumnFilter', },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.defaultColDef1 = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        rowSelection: 'single',\n        suppressRowClickSelection: true,\n        enableRangeSelection: true,\n        pagination: true,\n        paginationAutoPageSize: true,\n        columnDefs: [\n          { field: 'txtModelName', headerName: 'Model Name' },\n          { field: 'txtModelStatus', headerName: 'Model Status' },\n          { field: 'txtComment', headerName: 'Memo' },\n          ],\n        defaultColDef: { flex: 1, resizable: true, },\n      },\n      getDetailRowData: (params) => {\n        params.successCallback(params.data.idModel);\n      },\n    }\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n    this.paginationPageSize1 = 10;\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('itemList_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('itemList_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function () {\n      return !this.ArtNum ? true : !this.Description ? true : !this.Type ? true : !this.Version ? true : !this.ItemGroup ? true : !this.selectedModels ? true : false; \n    },\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('itemList_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('itemList_columnStats', null);\n    },\n    getModelIds() {\n      let el = this.selectedModels.map(e => e.id);\n    },\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    onRowSelectedItem(event) {\n      this.selectedItem = this.selectedItem ? false : true\n      if(event.node.selected == true) {\n        this.getAttributes(event.data.id);\n        window.localStorage.setItem('selItem', event.node.data.id)\n      } else {\n        this.attributes = [];\n      }\n    },\n    onGridReady(params) { \n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi\n    },\n    onGridReady1(params) {\n      this.gridApi1 = params.api;\n      this.gridColumnApi1 = params.columnApi\n    },\n    addItem() {\n      if (this.ArtNum) {\n        let models = this.selectedModels.map(e => e.id)\n        let endpoint = `/api/item/`;\n        apiService(endpoint, \"POST\", { \n          txtArticlenumber: this.ArtNum,\n          txtDescription: this.Description,\n          txtType: this.Type,\n          txtVersion: this.Version,\n          curCost: this.Cost,\n          txtGtinEan: this.GtinEan,\n          txtItemGroup: this.ItemGroup,\n          txtLink: this.Link,\n          txtComment: this.Comment,\n          idModel: models,\n          })\n          .then(response => {\n            if (response != 'ERROR'){\n              for (let i = 0; i < this.selectedAttributes.length; i++) {\n                const el = this.selectedAttributes[i];\n                let endpointAttributes = `/api/item-attribute/`;\n                apiService(endpointAttributes, \"POST\", { \n                  txtKeyAttribute: el.txtKeyAttribute, \n                  txtNameAttribute: el.txtNameAttribute, \n                  txtValueAttribute: el.txtValueDefault, \n                  txtValueType: el.txtValueType, \n                  txtParameter: el.txtParameter,\n                  idItem: response.id,\n                })\n              };\n              this.getItems();\n              this.emptyInput()\n            } else {\n              this.error = true;\n            }\n          })\n          .catch(err => console.log(err));\n        if (this.error) {\n          this.error = false;\n        }\n      }\n    },\n    editItemMenu(params) {\n      let sel = params.node.data;\n      let models = sel.idModel;\n      this.selectedModels = models;\n      this.ArtNum = sel.txtArticlenumber;\n      this.Description = sel.txtDescription;\n      this.Type = sel.txtType;\n      this.Version = sel.txtVersion;\n      this.Cost = sel.curCost;\n      this.GtinEan = sel.txtGtinEan;\n      this.ItemGroup = sel.txtItemGroup;\n      this.Link = sel.Link;\n      this.Comment = sel.Comment;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateItemGrid(event) {     \n      let endpoint = `/api/item/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtArticlenumber: event.node.data.txtArticlenumber,\n          txtDescription: event.node.data.txtDescription,\n          txtType: event.node.data.txtType,\n          txtVersion: event.node.data.txtVersion,\n          curCost: event.node.data.curCost,\n          txtGtinEan: event.node.data.txtGtinEan,\n          txtItemGroup: event.node.data.txtItemGroup,\n          txtLink: event.node.data.txtLink,\n          txtComment: event.node.data.txtComment,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    async updateAttributeGrid(event) {     \n      let endpoint = `/api/item-attribute/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtKeyAttribute: event.node.data.txtKeyAttribute,\n          txtNameAttribute: event.node.data.txtNameAttribute,\n          txtValueAttribute: event.node.data.txtValueAttribute,\n          txtValueType: event.node.data.txtValueType,\n          txtParameter: event.node.data.txtParameter,\n        })\n        .catch(err => console.log(err));\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    async updateItem() {     \n      let models = this.selectedModels.map(e => e.id);\n      let endpoint = `/api/item/${this.updateId}/`;\n      await apiService(endpoint, \"PATCH\", { \n        txtArticlenumber: this.ArtNum,\n        txtDescription: this.Description,\n        txtType: this.Type,\n        txtVersion: this.Version,\n        curCost: this.Cost,\n        txtGtinEan: this.GtinEan,\n        txtItemGroup: this.ItemGroup,\n        txtLink: this.Link,\n        txtComment: this.Comment,\n        idModel: models,})\n        .then(response => {\n          if (response != 'ERROR'){\n            for (let i = 0; i < this.selectedAttributes.length; i++) {\n              const el = this.selectedAttributes[i];\n              let endpointAttributes = `/api/item-attribute/`;\n              apiService(endpointAttributes, \"POST\", { \n                txtKeyAttribute: el.txtKeyAttribute, \n                txtNameAttribute: el.txtNameAttribute, \n                txtValueAttribute: el.txtValueDefault, \n                txtValueType: el.txtValueType, \n                txtParameter: el.txtParameter,\n                idItem: response.id,\n              })\n            };\n            this.selectedItem = this.selectedItem ? false : true\n            this.attributes = [];\n            this.emptyInput();\n            this.getItems();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Item? => \" + params.node.data.txtArticlenumber, {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true })\n        .then(value => { if (value) { this.deleteItem(params); }})\n        .catch(err => console.log(err));\n    },\n    openModal1(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Do you really want to delete the Attribute? => \" + params.node.data.txtNameAttribute, {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true })\n        .then(value => { if (value) { this.deleteAttribute(params); }})\n        .catch(err => console.log(err));\n    },\n    async deleteItem(params) {\n      let endpoint = `/api/item/${params.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\")\n        this.getItems();\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    async deleteAttribute(params) {\n      let endpoint = `/api/item-attribute/${params.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\")\n        let id = window.localStorage.getItem('selItem');\n        this.getAttributes(id);\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    emptyInput() {\n      this.ArtNum = '';\n      this.Description = '';\n      this.Type = [];\n      this.Version = '';\n      this.Cost = '';\n      this.GtinEan = '';\n      this.ItemGroup = [];\n      this.Link = '';\n      this.Comment = '';\n      this.selectedModels = [];\n      this.selectedAttributes = [];\n      this.show = false;\n    },\n    getItems() {\n      if (!this.error) {\n        this.items = [];\n        let endpoint = `/api/item-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.items.push(...data.results);\n            this.rowData = this.items\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getAttributes(id) {\n      if (!this.error) {\n        this.attributes = [];\n        let endpoint = `/api/item-attribute/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            let el = this.attributes.filter(e => e.idItem == id)\n            this.rowData1 = el\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getTemplateAttributes() {\n      if (!this.error) {\n        this.tempAttributes = [];\n        let endpoint = `/api/item-template-attribute/`;\n        apiService(endpoint)\n          .then(data => {\n            this.tempAttributes.push(...data.results);\n            this.optionAttributes = this.tempAttributes\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getModels() {\n      if (!this.error) {\n        this.models = [];\n        let endpoint = `/api/model/`;\n        apiService(endpoint)\n          .then(data => {\n            this.models.push(...data.results);\n            this.optionsModels = this.models\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Item',\n          action: () => this.editItemMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Item',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n    getContextMenu1(params) {\n      var result = [\n        {\n          name: 'Delete Attribute',\n          action: () => this.openModal1(params)\n        },\n        'separator',\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getItems();\n    this.getModels();\n    this.getDateToday();\n    this.getTemplateAttributes();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  #new-item-section {\n    cursor: pointer;\n    outline: none;\n  }\n  .input-group-append, .input-group-prepend, .dropdown-toggle {\n    width: auto!important;\n  }\n  .input-group-text {\n    font-weight: 800!important;\n  }\n  .divider {\n    border: solid 1px rgba(141, 141, 141, 0.404);\n    overflow: hidden;\n  }\n  .multiselect__tag {\n    background-color: #003473;\n  }\n  .multiselect__tag-icon::after {\n    color: #fff;\n  }\n  .headline {\n    background-color: #0034736b;\n  }\n</style>\n"]}]}