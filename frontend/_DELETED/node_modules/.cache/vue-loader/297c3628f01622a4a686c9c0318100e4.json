{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\sessions\\signIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\sessions\\signIn.vue","mtime":1599458172126},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from \"vuex\";\nimport { apiService } from \"@/common/api.service.js\";\n\nexport default {\n  metaInfo: {\n    title: \"SignIn\"\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      userId: \"\",\n      message: '',\n      bgImage: require(\"@/assets/images/photo-wide-4.jpg\"),\n      logo: require(\"@/assets/evi_logo_sq.png\"),\n      signInImage: require(\"@/assets/images/photo-long-3.jpg\")\n    };\n  },\n  mounted() {\n    // document.cookie = \"csrftoken=;\";\n    // this.deleteCookie('csrftoken', '', -1);\n  },\n  computed: {\n    validation() {\n      return this.userId.length > 4 && this.userId.length < 13;\n    },\n    ...mapGetters([\"loggedInUser\", \"loading\", \"error\"])\n  },\n\n  methods: {\n    ...mapActions([\"loginDjango\"]),\n\n    formSubmit() {\n      this.loginDjango({ username: this.username, password: this.password });\n    },\n\n    makeToast(variant = null, msg) {\n      this.$bvToast.toast(msg, {\n        title: ` ${'variant' || \"default\"}`,\n        variant: variant,\n        solid: true\n      });\n    },\n    deleteCookie(csrftoken, value, days) {\n      var d = new Date;\n      d.setTime(d.getTime() + 24*60*60*1000*days);\n      document.cookie = csrftoken + \"=\" + value  + \";path=/;expires=\" + d.toGMTString();\n    }\n  },\n  watch: {\n    loggedInUser(val) {\n      if (val && val.uid && val.uid.length > 0) {\n        this.makeToast(\"success\", \"Successfully Logged In\");\n\n        setTimeout(() => {\n          this.$router.push(\"/\");\n        }, 500);\n      }\n    },\n    error(val) {\n      if (val != null) {\n        this.makeToast(\"warning\", val.message);\n      }\n    }\n  },\n\n};\n",{"version":3,"sources":["signIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"signIn.vue","sourceRoot":"src/views/app/sessions","sourcesContent":["<template>\n  <div\n    class=\"auth-layout-wrap\"\n    :style=\"{ backgroundImage: 'url(' + bgImage + ')' }\"\n  >\n    <div class=\"auth-content\">\n      <div class=\"card o-hidden\">\n        <div class=\"col-12\">\n          <div class=\"p-4\">\n            <div class=\"auth-logo text-center\">\n              <img :src=\"logo\" />\n            </div>\n            <h1 class=\"mb-3 text-center text-20\">Sign In</h1>\n            <b-form @submit.prevent=\"formSubmit\">\n              <b-form-group label=\"Username\" class=\"text-12\">\n                <b-form-input class=\"form-control-rounded\" type=\"text\" v-model=\"username\" required></b-form-input>\n              </b-form-group>\n              <b-form-group label=\"Password\" class=\"text-12\">\n                <b-form-input class=\"form-control-rounded\" type=\"password\" v-model=\"password\"></b-form-input>\n              </b-form-group>\n              <b-button type=\"submit\" tag=\"button\" class=\"btn-rounded btn-block mt-5 mb-3\" variant=\"primary mt-2\" :disabled=\"loading\">SignIn</b-button>\n              <div v-once class=\"typo__p\" v-if=\"loading\">\n                <div class=\"spinner sm spinner-primary mt-3\"></div>\n              </div>\n              <!-- <b-button to=\"signUp\" block variant=\"outline-primary mt-2\" class=\"btn-rounded\">Create an account</b-button> -->\n            </b-form>\n            <!-- <div class=\"mt-3 text-center\">\n              <router-link to=\"forgot\" tag=\"a\" class=\"text-muted\">\n                <u>Forgot Password?</u>\n              </router-link>\n            </div> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport { apiService } from \"@/common/api.service.js\";\n\nexport default {\n  metaInfo: {\n    title: \"SignIn\"\n  },\n  data() {\n    return {\n      username: '',\n      password: '',\n      userId: \"\",\n      message: '',\n      bgImage: require(\"@/assets/images/photo-wide-4.jpg\"),\n      logo: require(\"@/assets/evi_logo_sq.png\"),\n      signInImage: require(\"@/assets/images/photo-long-3.jpg\")\n    };\n  },\n  mounted() {\n    // document.cookie = \"csrftoken=;\";\n    // this.deleteCookie('csrftoken', '', -1);\n  },\n  computed: {\n    validation() {\n      return this.userId.length > 4 && this.userId.length < 13;\n    },\n    ...mapGetters([\"loggedInUser\", \"loading\", \"error\"])\n  },\n\n  methods: {\n    ...mapActions([\"loginDjango\"]),\n\n    formSubmit() {\n      this.loginDjango({ username: this.username, password: this.password });\n    },\n\n    makeToast(variant = null, msg) {\n      this.$bvToast.toast(msg, {\n        title: ` ${'variant' || \"default\"}`,\n        variant: variant,\n        solid: true\n      });\n    },\n    deleteCookie(csrftoken, value, days) {\n      var d = new Date;\n      d.setTime(d.getTime() + 24*60*60*1000*days);\n      document.cookie = csrftoken + \"=\" + value  + \";path=/;expires=\" + d.toGMTString();\n    }\n  },\n  watch: {\n    loggedInUser(val) {\n      if (val && val.uid && val.uid.length > 0) {\n        this.makeToast(\"success\", \"Successfully Logged In\");\n\n        setTimeout(() => {\n          this.$router.push(\"/\");\n        }, 500);\n      }\n    },\n    error(val) {\n      if (val != null) {\n        this.makeToast(\"warning\", val.message);\n      }\n    }\n  },\n\n};\n</script>\n\n<style>\n.spinner.sm {\n  height: 2em;\n  width: 2em;\n}\n</style>\n"]}]}