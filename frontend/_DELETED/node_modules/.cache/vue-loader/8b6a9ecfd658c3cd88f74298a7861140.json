{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\source\\src\\views\\app\\form\\tagInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\source\\src\\views\\app\\form\\tagInput.vue","mtime":1566994838000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\source\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  metaInfo: {\n    // if no subcomponents specify a metaInfo.title, this title will be used\n    title: \"Tag Input\"\n  },\n  data() {\n    return {\n      tag: \"\",\n      tags: [\n        {\n          text: \"Javascript\"\n        },\n        {\n          text: \"Typescript\"\n        },\n        {\n          text: \"add\"\n        }\n      ],\n      //   auto complete\n      autocompleteTag: \"\",\n      autocompleteTags: [\n        {\n          text: \"Bangladesh\"\n        }\n      ],\n\n      autocompleteItems: [\n        {\n          text: \"Spain\"\n        },\n        {\n          text: \"France\"\n        },\n        {\n          text: \"USA\"\n        },\n        {\n          text: \"Germany\"\n        },\n        {\n          text: \"China\"\n        }\n      ]\n    };\n  },\n  computed: {\n    filteredItems() {\n      return this.autocompleteItems.filter(i => {\n        return i.text.toLowerCase().indexOf(this.tag.toLowerCase()) !== -1;\n      });\n    }\n  }\n};\n",{"version":3,"sources":["tagInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tagInput.vue","sourceRoot":"src/views/app/form","sourcesContent":["<template>\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Tag Input'\" :folder=\"'Forms'\" />\n\n    <b-row>\n      <b-col md=\"12\">\n        <b-card title=\"Tag Inputs\">\n          <vue-tags-input\n            v-model=\"tag\"\n            :tags=\"tags\"\n            class=\"tag-custom text-15\"\n            @tags-changed=\"newTags => (tags = newTags)\"\n            placeholder=\"+ add\"\n          />\n        </b-card>\n      </b-col>\n      <b-col md=\"12\" class=\"mt-4\">\n        <b-card title=\"Autocomplete\">\n          <vue-tags-input\n            v-model=\"autocompleteTag\"\n            :tags=\"autocompleteTags\"\n            class=\"tag-custom text-15\"\n            :autocomplete-items=\"filteredItems\"\n            @tags-changed=\"newTags => (autocompleteTags = newTags)\"\n            placeholder=\"Type Country Name\"\n          />\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n<script>\nexport default {\n  metaInfo: {\n    // if no subcomponents specify a metaInfo.title, this title will be used\n    title: \"Tag Input\"\n  },\n  data() {\n    return {\n      tag: \"\",\n      tags: [\n        {\n          text: \"Javascript\"\n        },\n        {\n          text: \"Typescript\"\n        },\n        {\n          text: \"add\"\n        }\n      ],\n      //   auto complete\n      autocompleteTag: \"\",\n      autocompleteTags: [\n        {\n          text: \"Bangladesh\"\n        }\n      ],\n\n      autocompleteItems: [\n        {\n          text: \"Spain\"\n        },\n        {\n          text: \"France\"\n        },\n        {\n          text: \"USA\"\n        },\n        {\n          text: \"Germany\"\n        },\n        {\n          text: \"China\"\n        }\n      ]\n    };\n  },\n  computed: {\n    filteredItems() {\n      return this.autocompleteItems.filter(i => {\n        return i.text.toLowerCase().indexOf(this.tag.toLowerCase()) !== -1;\n      });\n    }\n  }\n};\n</script>\n<style>\n</style>\n"]}]}