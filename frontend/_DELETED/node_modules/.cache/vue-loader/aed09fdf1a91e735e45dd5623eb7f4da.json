{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\inspection\\inspection.vue","mtime":1598023379850},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\n// import html2canvas from 'html2canvas';\n// import jsPDF from 'jspdf';\nimport html2canvas from 'jspdf/dist/html2canvas.js';\nimport jsPDF from 'jspdf/dist/jspdf.debug.js';\nimport $ from 'jquery';\nimport VueHtml2pdf from 'vue-html2pdf'\n\nexport default {\n  metaInfo: {    \n    title: \"New Inspection\"\n  },\n  components: {\n    AgGridVue, VueHtml2pdf\n  },\n  data() {\n    return {\n      inspectionName: null,\n      templates: [],\n      attributes: [],\n      testAtt: [],\n      model: [],\n      modelData: [],\n      selected: null,\n      text: null,\n      error: false,\n    };\n  },\n  mounted() {\n    // this.inspectionName = 'Mess & Funktionsprüfung'\n    // this.inspectionName = this.testAtt.txtInspectionTemplateName\n  },\n  methods: {\n    createPDF() {\n\n      this.$refs.html2Pdf.generatePdf()\n\n      var pdf = new jsPDF('p', 'pt', 'A4');\n      var div = document.getElementById('inspection')\n\n      // var specialElementHandlers = {\n      //   '#editor': function(element, renderer) {\n      //     return true;\n      //   }\n      // };\n\n      // pdf.fromHTML($('#inspection').html(), 15, 15, {\n      //   'width': 170,\n      //   'elementHandlers': specialElementHandlers\n      // });\n      // pdf.output(\"dataurlnewwindow\");\n\n      // pdf.save('inspection.pdf');\n\n      // pdf.addHTML(div, function() {\n      //   pdf.save('test.pdf')\n      // })\n\n\n    },\n    getTemplates() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n          })\n      }\n    },\n    getModel() {\n      if (!this.error) {\n        let endpoint = `/api/model-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.model.push(...data.results);\n            this.modelData = this.model[0]\n            console.log(this.modelData)\n          })\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            this.optionsAttributes = this.attributes\n            // console.log(Object.values(this.attributes)[0])\n            this.testAtt = this.attributes[0]\n            this.inspectionName = this.testAtt.txtInspectionTemplateName\n          })\n      }\n    },\n    addTemplate() {\n      if (this.TempName) {\n        let endpoint = `/api/inspection-template/`;\n        apiService(endpoint, \"POST\", { \n          txtInspectionTemplateName: this.TempName,\n          txtInspectionTemplateType: this.Type,\n          idInspectionTemplateAttribute: this.selAtt,\n          })\n          .then(data => {\n            if (data){\n              this.templates.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.TempName = null;\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    emptyInput() {\n      this.TempName = '',\n      this.Type = [],\n      this.optionsAttributes = [],\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getModel();\n  },\n};\n",{"version":3,"sources":["inspection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"inspection.vue","sourceRoot":"src/views/app/inspection","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <VueHtml2pdf\n      :show-layout=\"false\"\n      :enable-download=\"true\"\n      :preview-modal=\"true\"\n      :paginate-elements-by-height=\"1400\"\n      filename='Mess & Funktionsprüfung'\n      :pdf-quality=\"2\"\n      :manual-pagination=\"false\"\n      pdf-format=\"a4\"\n      pdf-orientation=\"portrait\"\n      pdf-content-width=\"800px\"\n      @progress=\"onProgress($event)\"\n      @hasStartedGeneration=\"hasStartedGeneration()\"\n      @hasGenerated=\"hasGenerated($event)\"\n      ref=\"html2Pdf\">\n    <section slot=\"pdf-content\" class=\"p-4\">\n      <breadcumb :page=this.inspectionName :folder=\"'Inspection'\" />\n      <div class=\"row\" id=\"inspection\">\n        <div class=\"col-md-12\">\n          <div class=\"card\">\n            <div class=\"card-body p-0\">\n              <h5 class=\"card-title p-3 pb-0 mb-0\">{{ this.inspectionName }}</h5>\n              <b-row class=\"mr-3 p-3 pt-0\">\n                <b-col md=\"2\" class=\"mt-3\" v-for=\"attribute in testAtt.idInspectionTemplateAttribute\" :key=\"attribute.id\">\n                  <b-input-group>\n                    <template v-slot:prepend>\n                      <b-input-group-text style=\"font-weight: 800;\">{{ attribute.txtNameAttribute }}</b-input-group-text>\n                    </template>\n                    <b-form-input></b-form-input>\n                  </b-input-group>\n                </b-col>\n              </b-row>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n      \n    </VueHtml2pdf>\n\n\n\n\n      <breadcumb :page=this.inspectionName :folder=\"'Inspection'\" />\n\n      <!-- DEVICE MODEL -->\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"card\">\n            <div class=\"card-body p-0\">\n              <h5 class=\"card-title p-3 pb-0 mb-0\">Device Model</h5>\n              <b-row class=\"mr-3 p-3 pt-0\">\n                <b-col md=\"12\" class=\"mt-3\">\n                  <b-form-select v-model=\"selected\">\n                    <b-form-select-option :value=\"null\">iPhone 11</b-form-select-option>\n                  </b-form-select>\n                </b-col>\n              </b-row>\n\n              <b-row class=\"mr-3 p-3 pt-0\">\n                <b-col md=\"4\">\n                  <div>\n                    <b-input-group>\n                      <template v-slot:prepend>\n                        <b-input-group-text readonly style=\"font-weight: 800;\">Manufacturer</b-input-group-text>\n                      </template>\n                      <template v-slot:append>\n                        <b-input-group-text readonly>{{ modelData.idDevice.idManufacturer.txtManufacturerName }}</b-input-group-text>\n                      </template>\n                    </b-input-group>\n                  </div>\n                </b-col>\n\n                <b-col md=\"4\">\n                  <b-input-group>\n                    <template v-slot:prepend>\n                      <b-input-group-text readonly style=\"font-weight: 800;\">Device Model</b-input-group-text>\n                    </template>\n                    <template v-slot:append variant=\"info\">\n                      <b-input-group-text variant=\"info\" readonly>{{ modelData.idDevice.idSupplier.txtSupplierName }}</b-input-group-text>\n                    </template>\n                  </b-input-group>\n                </b-col>\n\n                <b-col md=\"4\">\n                  <b-input-group>\n                    <template v-slot:prepend>\n                      <b-input-group-text readonly style=\"font-weight: 800;\">Supplier</b-input-group-text>\n                    </template>\n                    <template v-slot:append variant=\"info\">\n                      <b-input-group-text variant=\"info\" readonly>{{ modelData.idDevice.txtDeviceName }} {{ modelData.txtModelName }}</b-input-group-text>\n                    </template>\n                  </b-input-group>\n                </b-col>\n                  \n              </b-row>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- INSPECTION PARAMETER -->\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"card\">\n            <div class=\"card-body p-0\">\n              <h5 class=\"card-title p-3 pb-0 mb-0\">Inspection Parameter</h5>\n              <b-row class=\"mr-3 p-3 pt-0\">\n                <b-col md=\"2\" class=\"mt-3\" v-for=\"attribute in testAtt.idInspectionTemplateAttribute\" :key=\"attribute.id\">\n                  <b-input-group>\n                    <template v-slot:prepend>\n                      <b-input-group-text style=\"font-weight: 800;\">{{ attribute.txtNameAttribute }}</b-input-group-text>\n                    </template>\n                    <b-form-input></b-form-input>\n                  </b-input-group>\n                </b-col>\n              </b-row>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- COMMENT -->\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"card\">\n            <div class=\"card-body p-0\">\n              <h5 class=\"card-title p-3 pb-0 mb-0\">Release & Notes</h5>\n              <b-row class=\"mr-3 p-3 pt-0\">\n                <b-col md=\"12\" class=\"mt-3\">\n                  <b-form-textarea v-model=\"text\" placeholder=\"Enter something...\" rows=\"3\" max-rows=\"6\"></b-form-textarea>\n                </b-col>\n              </b-row>\n\n              <b-row class=\"mr-3 p-3 pt-0\">\n                <b-col md=\"4\">\n                  <div>\n                    <b-input-group>\n                      <template v-slot:prepend>\n                        <b-input-group-text readonly style=\"font-weight: 800;\">Test Date</b-input-group-text>\n                      </template>\n                      <template v-slot:append>\n                        <b-input-group-text readonly>2020-08-21</b-input-group-text>\n                      </template>\n                    </b-input-group>\n                  </div>\n                </b-col>\n\n                <b-col md=\"4\">\n                  <b-input-group>\n                    <template v-slot:prepend>\n                      <b-input-group-text readonly style=\"font-weight: 800;\">Auditor</b-input-group-text>\n                    </template>\n                    <template v-slot:append variant=\"info\">\n                      <b-input-group-text variant=\"info\" readonly>AH</b-input-group-text>\n                    </template>\n                  </b-input-group>\n                </b-col>\n\n                <b-col md=\"4\">\n                  <b-input-group>\n                    <template v-slot:prepend>\n                      <b-input-group-text readonly style=\"font-weight: 800;\">Release</b-input-group-text>\n                    </template>\n                    <template v-slot:append variant=\"info\">\n                      <b-dropdown  text=\"\" variant=\"info\">\n                        <b-dropdown-item value=\"YES\">YES</b-dropdown-item>\n                        <b-dropdown-item value=\"NO\">NO</b-dropdown-item>\n                        <b-dropdown-item value=\"CONDITIONALLY\">CONDITIONALLY</b-dropdown-item>\n                      </b-dropdown>\n                    </template>\n                  </b-input-group>\n                </b-col>\n                  \n              </b-row>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    <b-button class=\"ml-2 mr-3 mt-3\" variant=\"primary\">Save Inspection</b-button>\n    <b-button @click=\"createPDF\" class=\"ml-2 mr-3 mt-3\" variant=\"outline-primary\">PDF</b-button>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\n\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\n// import html2canvas from 'html2canvas';\n// import jsPDF from 'jspdf';\nimport html2canvas from 'jspdf/dist/html2canvas.js';\nimport jsPDF from 'jspdf/dist/jspdf.debug.js';\nimport $ from 'jquery';\nimport VueHtml2pdf from 'vue-html2pdf'\n\nexport default {\n  metaInfo: {    \n    title: \"New Inspection\"\n  },\n  components: {\n    AgGridVue, VueHtml2pdf\n  },\n  data() {\n    return {\n      inspectionName: null,\n      templates: [],\n      attributes: [],\n      testAtt: [],\n      model: [],\n      modelData: [],\n      selected: null,\n      text: null,\n      error: false,\n    };\n  },\n  mounted() {\n    // this.inspectionName = 'Mess & Funktionsprüfung'\n    // this.inspectionName = this.testAtt.txtInspectionTemplateName\n  },\n  methods: {\n    createPDF() {\n\n      this.$refs.html2Pdf.generatePdf()\n\n      var pdf = new jsPDF('p', 'pt', 'A4');\n      var div = document.getElementById('inspection')\n\n      // var specialElementHandlers = {\n      //   '#editor': function(element, renderer) {\n      //     return true;\n      //   }\n      // };\n\n      // pdf.fromHTML($('#inspection').html(), 15, 15, {\n      //   'width': 170,\n      //   'elementHandlers': specialElementHandlers\n      // });\n      // pdf.output(\"dataurlnewwindow\");\n\n      // pdf.save('inspection.pdf');\n\n      // pdf.addHTML(div, function() {\n      //   pdf.save('test.pdf')\n      // })\n\n\n    },\n    getTemplates() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.templates.push(...data.results);\n          })\n      }\n    },\n    getModel() {\n      if (!this.error) {\n        let endpoint = `/api/model-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.model.push(...data.results);\n            this.modelData = this.model[0]\n            console.log(this.modelData)\n          })\n      }\n    },\n    getAttributes() {\n      if (!this.error) {\n        let endpoint = `/api/inspection-template-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.attributes.push(...data.results);\n            this.optionsAttributes = this.attributes\n            // console.log(Object.values(this.attributes)[0])\n            this.testAtt = this.attributes[0]\n            this.inspectionName = this.testAtt.txtInspectionTemplateName\n          })\n      }\n    },\n    addTemplate() {\n      if (this.TempName) {\n        let endpoint = `/api/inspection-template/`;\n        apiService(endpoint, \"POST\", { \n          txtInspectionTemplateName: this.TempName,\n          txtInspectionTemplateType: this.Type,\n          idInspectionTemplateAttribute: this.selAtt,\n          })\n          .then(data => {\n            if (data){\n              this.templates.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.TempName = null;\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    emptyInput() {\n      this.TempName = '',\n      this.Type = [],\n      this.optionsAttributes = [],\n      this.$root.$emit('bv::toggle::collapse', 'collapse-o')\n    },\n  },\n  created() {\n    this.getTemplates();\n    this.getAttributes();\n    this.getModel();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n\n  .input-group-append, .input-group-prepend, .dropdown-toggle {\n    width: 50%!important;\n  }\n    .input-group-text {\n    width: 100%!important;\n  }\n\n</style>\n"]}]}