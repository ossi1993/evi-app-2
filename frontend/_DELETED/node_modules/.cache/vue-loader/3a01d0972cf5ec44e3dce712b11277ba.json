{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\apps\\todo-list.vue?vue&type=template&id=4b86f8b0&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\apps\\todo-list.vue","mtime":1575914052000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"main-content\" },\n    [\n      _c(\"breadcumb\", { attrs: { page: \"Todo List\", folder: \"App\" } }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"ul-todo-list-content\" }, [\n        _c(\n          \"div\",\n          {\n            staticClass: \"ul-todo-sidebar\",\n            class: { \"ul-todo-mobile-menu-open \": _vm.isOpenMobileMenu }\n          },\n          [\n            _c(\"div\", { staticClass: \"ul-todo-sidebar-overlay\" }),\n            _vm._v(\" \"),\n            _c(\n              \"b-card\",\n              { staticClass: \"h-100\", attrs: { \"body-class\": \"p-2\" } },\n              [\n                _c(\"i\", {\n                  staticClass: \"todo-sidebar-close i-Close pb-3 float-right\",\n                  on: {\n                    click: function($event) {\n                      _vm.isOpenMobileMenu = !_vm.isOpenMobileMenu\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"b-button\",\n                  {\n                    directives: [\n                      {\n                        name: \"b-modal\",\n                        rawName: \"v-b-modal.modal-1\",\n                        modifiers: { \"modal-1\": true }\n                      }\n                    ],\n                    attrs: { block: \"\", variant: \"primary mb-30\" }\n                  },\n                  [_vm._v(\"Add Task\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"b-modal\",\n                  {\n                    attrs: {\n                      id: \"modal-1\",\n                      centered: \"\",\n                      title: \"Add Task\",\n                      \"hide-footer\": \"\"\n                    }\n                  },\n                  [\n                    _c(\n                      \"b-form\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.todoFormSubmit(\"primary\")\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              id: \"input-group-1\",\n                              \"label-for\": \"input-1\"\n                            }\n                          },\n                          [\n                            _c(\"b-form-input\", {\n                              attrs: {\n                                id: \"input-1\",\n                                type: \"text\",\n                                placeholder: \"task name....\"\n                              },\n                              model: {\n                                value: _vm.todoForm.name,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.todoForm, \"name\", $$v)\n                                },\n                                expression: \"todoForm.name\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-form-group\",\n                          [\n                            _c(\"b-form-input\", {\n                              attrs: { id: \"input-1\", type: \"date\" },\n                              model: {\n                                value: _vm.todoForm.date,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.todoForm, \"date\", $$v)\n                                },\n                                expression: \"todoForm.date\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-form-group\",\n                          [\n                            _c(\"b-form-textarea\", {\n                              attrs: {\n                                id: \"textarea\",\n                                placeholder: \"Description...\",\n                                rows: \"3\"\n                              },\n                              model: {\n                                value: _vm.todoForm.description,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.todoForm, \"description\", $$v)\n                                },\n                                expression: \"todoForm.description\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-form-group\",\n                          [\n                            _c(\"vue-tags-input\", {\n                              staticClass: \"border text-15\",\n                              attrs: {\n                                \"autocomplete-items\": _vm.filteredItems,\n                                tags: _vm.todoForm.autocompleteTag,\n                                placeholder: \"Type Developer Category\"\n                              },\n                              on: {\n                                \"tags-changed\": function(newTags) {\n                                  return (_vm.todoForm.autocompleteTag = newTags)\n                                }\n                              },\n                              model: {\n                                value: _vm.tag,\n                                callback: function($$v) {\n                                  _vm.tag = $$v\n                                },\n                                expression: \"tag\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-button\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              variant: \"outline-primary\"\n                            }\n                          },\n                          [_vm._v(\"Submit\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-button\",\n                          {\n                            attrs: { type: \"reset\", variant: \"outline-danger\" }\n                          },\n                          [_vm._v(\"Reset\")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"b-list-group\",\n                  [\n                    _c(\n                      \"b-list-group-item\",\n                      { staticClass: \"border-0\", attrs: { href: \"#\" } },\n                      [\n                        _c(\"a\", { attrs: { href: \"\" } }, [\n                          _c(\"i\", {\n                            staticClass: \"icon-regular i-Find-User mr-2\"\n                          }),\n                          _vm._v(\"\\n              Find\\n            \")\n                        ])\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-list-group-item\",\n                      { staticClass: \"border-0\", attrs: { href: \"#\" } },\n                      [\n                        _c(\"a\", { attrs: { href: \"\" } }, [\n                          _c(\"i\", {\n                            staticClass: \"icon-regular i-Favorite-Window mr-2\"\n                          }),\n                          _vm._v(\"\\n              Favourite\\n            \")\n                        ])\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-list-group-item\",\n                      { staticClass: \"border-0\", attrs: { href: \"#\" } },\n                      [\n                        _c(\"a\", { attrs: { href: \"\" } }, [\n                          _c(\"i\", {\n                            staticClass: \"icon-regular i-Delete-File mr-2\"\n                          }),\n                          _vm._v(\"\\n              Deleted\\n            \")\n                        ])\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"p\",\n          { staticClass: \"ul-todo-content-right\" },\n          [\n            _c(\n              \"b-card\",\n              { staticClass: \"wrapper\" },\n              [\n                _c(\"i\", {\n                  staticClass:\n                    \"nav-icon i-Align-Justify-All text-25 ul-contact-mobile-icon mr-2\",\n                  on: {\n                    click: function($event) {\n                      _vm.isOpenMobileMenu = !_vm.isOpenMobileMenu\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"vue-good-table\", {\n                  attrs: {\n                    columns: _vm.columns,\n                    \"search-options\": {\n                      enabled: true,\n                      placeholder: \"Search this table\"\n                    },\n                    \"pagination-options\": {\n                      enabled: true,\n                      mode: \"records\"\n                    },\n                    styleClass: \"tableOne vgt-table\",\n                    rows: _vm.rows\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"table-row\",\n                      fn: function(props) {\n                        return [\n                          props.column.field == \"name\"\n                            ? _c(\"span\", [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"ul-todo-area d-flex\" },\n                                  [\n                                    _c(\"div\", [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass:\n                                            \"checkbox checkbox-primary\"\n                                        },\n                                        [\n                                          _c(\"input\", {\n                                            attrs: { type: \"checkbox\" }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"span\", {\n                                            staticClass: \"checkmark\"\n                                          })\n                                        ]\n                                      )\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", [_vm._v(_vm._s(props.row.name))])\n                                  ]\n                                )\n                              ])\n                            : props.column.field == _vm.profileAction\n                            ? _c(\"span\", [\n                                _c(\n                                  \"div\",\n                                  {\n                                    staticClass:\n                                      \"ul-todo-tags d-flex  justify-content-end align-items-center\"\n                                  },\n                                  _vm._l(props.row.tags, function(badge, key) {\n                                    return _c(\n                                      \"span\",\n                                      {\n                                        key: key,\n                                        staticClass:\n                                          \"d-flex align-items-center ml-2\"\n                                      },\n                                      [\n                                        _c(\n                                          \"b-badge\",\n                                          {\n                                            staticClass: \"badge mr-2\",\n                                            class: badge.badgeColor\n                                          },\n                                          [_vm._v(_vm._s(badge.text))]\n                                        ),\n                                        _vm._v(\" \"),\n                                        _c(\n                                          \"p\",\n                                          {\n                                            staticClass:\n                                              \"ul-widget4__img mt-2 mb-2 todo-img\"\n                                          },\n                                          [\n                                            _c(\"img\", {\n                                              staticClass: \"rounded-circle\",\n                                              attrs: { src: badge.img }\n                                            })\n                                          ]\n                                        )\n                                      ],\n                                      1\n                                    )\n                                  }),\n                                  0\n                                )\n                              ])\n                            : props.column.field == \"action\"\n                            ? _c(\n                                \"span\",\n                                [\n                                  _c(\n                                    \"b-dropdown\",\n                                    {\n                                      attrs: {\n                                        id: \"dropdown-left\",\n                                        variant: \"link\",\n                                        text: \"Left align\",\n                                        \"toggle-class\": \"text-decoration-none\",\n                                        size: \"sm\",\n                                        dropleft: \"\",\n                                        \"no-caret\": \"\"\n                                      },\n                                      scopedSlots: _vm._u(\n                                        [\n                                          {\n                                            key: \"button-content\",\n                                            fn: function() {\n                                              return [\n                                                _c(\"span\", {\n                                                  staticClass:\n                                                    \"_dot _r_block-dot bg-dark\"\n                                                }),\n                                                _vm._v(\" \"),\n                                                _c(\"span\", {\n                                                  staticClass:\n                                                    \"_dot _r_block-dot bg-dark\"\n                                                }),\n                                                _vm._v(\" \"),\n                                                _c(\"span\", {\n                                                  staticClass:\n                                                    \"_dot _r_block-dot bg-dark\"\n                                                })\n                                              ]\n                                            },\n                                            proxy: true\n                                          }\n                                        ],\n                                        null,\n                                        true\n                                      )\n                                    },\n                                    [\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"b-dropdown-item\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"b-modal\",\n                                              rawName:\n                                                \"v-b-modal.contact-list-table-modal-2\",\n                                              modifiers: {\n                                                \"contact-list-table-modal-2\": true\n                                              }\n                                            }\n                                          ],\n                                          staticClass: \"dropdown-item\",\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.editTodo(props.row)\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass:\n                                              \"nav-icon i-Pen-2 text-success font-weight-bold mr-2\"\n                                          }),\n                                          _vm._v(\"Edit\\n                \")\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"b-dropdown-item\", [\n                                        _c(\n                                          \"a\",\n                                          {\n                                            staticClass: \"dropdown-item\",\n                                            on: {\n                                              click: function($event) {\n                                                return _vm.deleteTodo(\n                                                  props.index\n                                                )\n                                              }\n                                            }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass:\n                                                \"nav-icon i-Close-Window text-danger font-weight-bold mr-2\"\n                                            }),\n                                            _vm._v(\"Delete\\n                  \")\n                                          ]\n                                        )\n                                      ])\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            : _vm._e()\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"edit-modal\" },\n          [\n            _c(\n              \"b-modal\",\n              {\n                ref: \"my-modal\",\n                attrs: {\n                  id: \"contact-list-table-modal-2\",\n                  centered: \"\",\n                  title: \"BootstrapVue\",\n                  \"hide-footer\": \"\"\n                }\n              },\n              [\n                _c(\n                  \"b-form\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.onUpdateTodoList($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"b-form-group\",\n                      {\n                        attrs: { id: \"input-group-1\", \"label-for\": \"input-1\" }\n                      },\n                      [\n                        _c(\"b-form-input\", {\n                          attrs: {\n                            id: \"input-1\",\n                            type: \"text\",\n                            placeholder: \"task name....\"\n                          },\n                          model: {\n                            value: _vm.editTodoList.name,\n                            callback: function($$v) {\n                              _vm.$set(_vm.editTodoList, \"name\", $$v)\n                            },\n                            expression: \"editTodoList.name\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"b-form-group\"),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-form-group\",\n                      [\n                        _c(\"b-form-textarea\", {\n                          attrs: {\n                            id: \"textarea\",\n                            placeholder: \"Description...\",\n                            rows: \"3\"\n                          },\n                          model: {\n                            value: _vm.editTodoList.description,\n                            callback: function($$v) {\n                              _vm.$set(_vm.editTodoList, \"description\", $$v)\n                            },\n                            expression: \"editTodoList.description\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-form-group\",\n                      [\n                        _c(\"b-form-input\", {\n                          attrs: { id: \"input-1\", type: \"date\" },\n                          model: {\n                            value: _vm.editTodoList.date,\n                            callback: function($$v) {\n                              _vm.$set(_vm.editTodoList, \"date\", $$v)\n                            },\n                            expression: \"editTodoList.date\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-form-group\",\n                      [\n                        _c(\"vue-tags-input\", {\n                          staticClass: \"border text-15\",\n                          attrs: {\n                            \"autocomplete-items\": _vm.filteredItems,\n                            tags: _vm.editTodoList.tags,\n                            placeholder: \"Type Developer Category\"\n                          },\n                          on: {\n                            \"tags-changed\": function(newTags) {\n                              return (_vm.editTodoList.tags = newTags)\n                            }\n                          },\n                          model: {\n                            value: _vm.editedTag,\n                            callback: function($$v) {\n                              _vm.editedTag = $$v\n                            },\n                            expression: \"editedTag\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-button\",\n                      { attrs: { type: \"submit\", variant: \"outline-primary\" } },\n                      [_vm._v(\"Submit\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-button\",\n                      { attrs: { type: \"reset\", variant: \"outline-danger\" } },\n                      [_vm._v(\"Reset\")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}