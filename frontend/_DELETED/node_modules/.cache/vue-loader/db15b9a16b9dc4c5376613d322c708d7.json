{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\src\\views\\app\\apps\\products.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\src\\views\\app\\apps\\products.vue","mtime":1575914052000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from \"vuex\";\nimport StarRating from 'vue-star-rating'\n\nexport default {\n  metaInfo: {\n    // if no subcomponents specify a metaInfo.title, this title will be used\n    title: \"List Table\"\n  },\n  components: {\n    StarRating\n  },\n  data() {\n    return {\n      rating: 4,\n      search:\"\",\n      isProduct:true,\n      filterBrand: \"\",\n      priceValue: 500,\n      selectedFilter: \"\",\n      selectPriceRange: \"\",\n      priceRange: 1,\n      value: 1,\n      items: \"\",\n      paginatedItems: \"\",\n      currentPage: 1,\n      perPage: 9,\n      // totalRows: '',\n      isFirst: false,\n      // button\n      isListView: true,\n      // isGridVIew:false,\n      selected: [], // Must be an array reference!\n      // options: [\n      //   { text: 'Orange', value: 'orange' },\n      //   { text: 'Apple', value: 'apple' },\n      //   { text: 'Pineapple', value: 'pineapple' },\n      //   { text: 'Grape', value: 'grape' }\n      // ],\n      featured: null,\n      featuredOptions: [\n        { value: null, text: \"Featured\" },\n        { value: \"a\", text: \"Highest Price\" },\n        { value: \"b\", text: \"Lowest Price\" }\n      ]\n      // brandsCount: this.$store.getters.brandsCount,\n      // brands: this.$store.state.brands\n    };\n  },\n  computed: {\n    ...mapGetters([\n      \"getItems\",\n      \"brandsCount\",\n      \"getBrandsItem\",\n      \"getFilterProducts\",\n      \"getCategoryItem\",\n      \"getAddToCarts\",\n      \"getAddToCarts\"\n    ]),\n    totalRows() {\n      return this.getFilterProducts.length;\n    },\n    filterItems() {\n      return this.getFilterProducts;\n    },\n    // searchProducts(){\n    //   return this.getFilterProducts.filter(item => item.title.toLowerCase().match(this.search.toLowerCase()))\n    // }\n    filterProducts()\n        {\n            // return this.getItems.filter((filterSearch) => {\n            //     return filterSearch.toLowerCase().match(this.search.toLowerCase());\n            // }); \n            \n            return this.getFilterProducts.filter(item => item.title.toLowerCase().match(this.search.toLowerCase()))\n        }\n  },\n  created: function() {\n    this.items = this.getItems;\n  },\n  methods: {\n    \n    ...mapActions([\n      \"addCart\",\n      \"addBrandToFilter\",\n      \"addCategoryItem\",\n      \"ascendingOrderCart\",\n      \"descendingOrderCart\"\n    ]),\n    setRating: function(rating){\n      this.rating= rating;\n      console.log(this.rating= rating);\n      \n    },\n    addCartPage(item){\n      this.addCart(item)\n      this.$bvToast.toast(`${ item.qty } item added to the cart successfully`, {\n          title: 'Click View Cart',\n          variant: 'primary',\n          solid: true,\n          autoHideDelay: 700\n        })\n      // this.$swal({\n        \n      //   toast: true,\n      //   position: \"top-end\",\n      //   showConfirmButton: false,\n      //   timer: 1000,\n      //   type: \"success\",\n      //   title: `${ item.qty } item added to the cart successfully`\n      // });\n\n      \n      // this.$router.push(\"/app/apps/checkout\");\n    },\n    viewProduct(){\n      // this.$router.push(\"product-detail\")\n      // console.log(this.getFilterProducts.filter(item => item.title.toLowerCase().match(this.search.toLowerCase())));\n      // console.log(this.search);\n      \n      \n    },\n    addBrandToFilterPage(checkedArray) {\n      checkedArray = this.$refs.checkFilter;\n      checkedArray = checkedArray\n        .filter(element => element.checked)\n        .map(element => element.value);\n      console.log(checkedArray);\n      this.addBrandToFilter(checkedArray);\n      this.paginatePerPage();\n    },\n    paginatePerPage() {\n      this.paginate(this.perPage, 0);\n    },\n    addCategoryItemPage(data) {\n      this.addCategoryItem(data);\n      this.paginatePerPage();\n    },\n    ascendingOrderCartPage() {\n      this.ascendingOrderCart();\n      this.paginatePerPage();\n    },\n    descendingOrderCartPage() {\n      this.descendingOrderCart();\n      this.paginatePerPage();\n    },\n  \n    redirectCheckout(){\n      this.$router.push(\"/app/apps/checkout\")\n    },\n    onRadioButtonChange(data) {\n      if (data == \"asc\") {\n        console.log(\"Working\", this.ascendingOrderCart());\n      }\n    },\n\n    viewCart() {\n      this.$router.push(\"./product-detail\");\n    },\n    // button\n    listView() {\n      this.isListView = true;\n    },\n    gridView() {\n      this.isListView = false;\n    },\n\n    // end-button\n    paginate(pageSize, pageNumber) {\n      let itemsToParse = this.filterProducts;\n      this.paginatedItems = itemsToParse.slice(\n        pageNumber * pageSize,\n        (pageNumber + 1) * pageSize\n      );\n    },\n    onPageChanged(page) {\n      this.paginate(this.perPage, page - 1);\n    }\n  },\n  mounted() {\n    this.paginate(this.perPage, 0);\n  }\n};\n",{"version":3,"sources":["products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"products.vue","sourceRoot":"src/views/app/apps","sourcesContent":["<template>\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Products'\" :folder=\"'Ecomerce'\" />\n    <b-row>\n      <b-col md=\"4\">\n        <button\n          @click=\"listView\"\n          class=\"btn btn-sm btn-rounded btn-outline-primary mb-3\"\n        >\n          <i class=\"i-Split-Four-Square-Window text-15\"></i>\n        </button>\n        <button\n          @click=\"gridView\"\n          class=\"btn btn-sm btn-rounded btn-outline-primary mb-3 ml-2\"\n        >\n          <i class=\"i-Align-Justify-All text-15\"></i>\n        </button>\n      </b-col>\n      <b-col md=\"6\" class=\"offset\">\n        <b-form-input v-model=\"search\" type=\"text\" placeholder=\"search....\"></b-form-input>\n        \n      </b-col>\n      <!-- <b-col md=\"3\">\n        <b-form-select\n          v-model=\"featured\"\n          :options=\"featuredOptions\"\n        ></b-form-select>\n      </b-col> -->\n    </b-row>\n    <b-row>\n      <b-col md=\"2\" class=\"mb-30\">\n        <b-card>\n          <b-form-group class>\n            <div class=\"text-center\">\n              <b-button block variant=\"primary mb-30\" @click=\"redirectCheckout\">\n                View Cart <b-badge variant=\"warning\" class=\"float-right pr-2 pl-2 text-11\">{{getAddToCarts.length}}</b-badge>\n              </b-button>\n            </div>\n            <label>\n              <h5 class=\"text-primary font-weight-600\">Price</h5>\n            </label>\n            <b-form-radio name=\"some-radios\" @change=\"ascendingOrderCartPage()\"\n              >Low to High</b-form-radio\n            >\n            <b-form-radio name=\"some-radios\" @change=\"descendingOrderCartPage()\"\n              >High to Low</b-form-radio\n            >\n          </b-form-group>\n          <b-form-group>\n            <label for=\"range-1\">\n              <h5 class=\"text-primary font-weight-600 mb-1 mt-3\">Category</h5>\n            </label>\n            <!-- <b-form-radio name=\"some-radios\" value=\"A\">Electronics</b-form-radio>\n            <b-form-radio name=\"some-radios\" value=\"B\">Mobile</b-form-radio>\n            <b-form-radio name=\"some-radios\" value=\"B\">Sports</b-form-radio>\n            <b-form-radio name=\"some-radios\" value=\"B\">Books</b-form-radio> -->\n            <b-form-radio\n              name=\"radio\"\n              :value=\"category\"\n              v-for=\"(category, index) in getCategoryItem\"\n              :key=\"index\"\n              @change=\"addCategoryItemPage(category)\"\n            >\n              {{ category }}\n            </b-form-radio>\n          </b-form-group>\n\n          <b-form-group>\n            <label for=\"range-1\">\n              <h5 class=\"text-primary font-weight-600 mb-1 mt-3\">Brand</h5>\n            </label>\n            <ul class=\"list-group\">\n              <li \n                v-for=\"(brand, index) in getBrandsItem\"\n                :key=\"index\"\n                class=\"list-group-item p-0 mb-2 border-0\"\n               \n              >\n                <div class=\"test d-flex\">\n                  <label class=\"checkbox checkbox-primary\">\n                    <input\n                      type=\"checkbox\"\n                      :value=\"brand\"\n                      ref=\"checkFilter\"\n                      @change=\"addBrandToFilterPage(brand)\"\n                    />\n\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  {{ brand }}({{ brandsCount[brand] }})\n                </div>\n              </li>\n            </ul>\n          </b-form-group>\n        </b-card>\n      </b-col>\n      <b-col md=\"10\">\n        <!-- <ul v-for=\"(product, key) in getAddToCarts\" :key=\"key\">\n            <li><span>{{ product }}</span></li>\n          </ul> -->\n        <section class=\"product-cart\">\n          <div\n            ref=\"rowView\"\n            class=\"row\"\n            :class=\"{ 'list-grid': isListView, 'list-horizontal': !isListView }\"\n          >\n            <!-- loop LIST Shop -->\n\n            <div\n              :class=\"{ 'col-md-4': isListView, 'col-md-12': !isListView }\"\n              class=\"list-item\"\n              :key=\"index\"\n              v-for=\"(item, index) in paginatedItems\"\n            >\n              <div\n                class=\"card o-hidden mb-4 d-flex\"\n                :class=\"{ 'flex-column': isListView, 'flex-row': !isListView }\"\n              >\n                <div class=\"list-thumb d-flex\">\n                  <img alt :src=\"item.img\" />\n                </div>\n                <div\n                  class=\"flex-grow-1\"\n                  :class=\"{ 'd-bock': isListView, 'pl-2 d-flex': !isListView }\"\n                >\n                  <div\n                    class=\"card-body align-self-center d-flex flex-column justify-content-between align-items-lg-center\"\n                    :class=\"{ 'flex-lg-row': !isListView }\"\n                  >\n                    <a class=\"w-40 w-sm-100\" href>\n                      <div class=\"item-title\">{{ item.title }}</div>\n                    </a>\n                    <p class=\"text-muted text-small w-15 w-sm-100 mb-2\">\n                      {{ item.brand }}\n                    </p>\n\n                    <!-- star  -->\n                    <star-rating \n                        v-model=\"item.rating\"\n                        :star-size=\"15\" \n                        :show-rating=\"false\"\n                        @rating-selected =\"setRating\"\n                        class=\"mb-3\"\n                    ></star-rating>\n\n\n                    <div class=\"m-0 text-muted text-small w-15 w-sm-100\">\n                      <h6>$ {{ item.productPrice }}</h6>\n                    </div>\n                    <p\n                      class=\"m-0 text-muted text-small w-15 w-sm-100 d-none d-lg-block item-badges\"\n                    >\n                      <span :class=\"item.badgeColor\" class=\"badge\">{{\n                        item.discount\n                      }}</span>\n                    </p>\n\n                    <div class=\"d-flex justify-content-between\">\n                      <b-button\n                        size=\"sm\"\n                        @click=\"addCartPage(item)\"\n                        variant=\"primary\"\n                        class=\"mr-2\"\n                        >Add Cart</b-button\n                      >\n                      <b-button\n                        size=\"sm\"\n                        class=\"ul-product\"\n                        @click=\"viewProduct\"\n                        variant=\"outline-primary\"\n                        >View Cart</b-button\n                      >\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- </transition-group>\n            -->\n          </div>\n        </section>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col md=\"12\" class=\"mt-4\">\n        <b-pagination\n          @change=\"onPageChanged\"\n          :total-rows=\"totalRows\"\n          :per-page=\"perPage\"\n          v-model=\"currentPage\"\n          class=\"my-0 gull-pagination align-items-center\"\n          align=\"center\"\n          first-text\n          last-text\n        >\n          <p class=\"list-arrow m-0\" slot=\"prev-text\">\n            <i class=\"i-Arrow-Left text-40\"></i>\n          </p>\n          <p class=\"list-arrow m-0\" slot=\"next-text\">\n            <i class=\"i-Arrow-Right text-40\"></i>\n          </p>\n        </b-pagination>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport StarRating from 'vue-star-rating'\n\nexport default {\n  metaInfo: {\n    // if no subcomponents specify a metaInfo.title, this title will be used\n    title: \"List Table\"\n  },\n  components: {\n    StarRating\n  },\n  data() {\n    return {\n      rating: 4,\n      search:\"\",\n      isProduct:true,\n      filterBrand: \"\",\n      priceValue: 500,\n      selectedFilter: \"\",\n      selectPriceRange: \"\",\n      priceRange: 1,\n      value: 1,\n      items: \"\",\n      paginatedItems: \"\",\n      currentPage: 1,\n      perPage: 9,\n      // totalRows: '',\n      isFirst: false,\n      // button\n      isListView: true,\n      // isGridVIew:false,\n      selected: [], // Must be an array reference!\n      // options: [\n      //   { text: 'Orange', value: 'orange' },\n      //   { text: 'Apple', value: 'apple' },\n      //   { text: 'Pineapple', value: 'pineapple' },\n      //   { text: 'Grape', value: 'grape' }\n      // ],\n      featured: null,\n      featuredOptions: [\n        { value: null, text: \"Featured\" },\n        { value: \"a\", text: \"Highest Price\" },\n        { value: \"b\", text: \"Lowest Price\" }\n      ]\n      // brandsCount: this.$store.getters.brandsCount,\n      // brands: this.$store.state.brands\n    };\n  },\n  computed: {\n    ...mapGetters([\n      \"getItems\",\n      \"brandsCount\",\n      \"getBrandsItem\",\n      \"getFilterProducts\",\n      \"getCategoryItem\",\n      \"getAddToCarts\",\n      \"getAddToCarts\"\n    ]),\n    totalRows() {\n      return this.getFilterProducts.length;\n    },\n    filterItems() {\n      return this.getFilterProducts;\n    },\n    // searchProducts(){\n    //   return this.getFilterProducts.filter(item => item.title.toLowerCase().match(this.search.toLowerCase()))\n    // }\n    filterProducts()\n        {\n            // return this.getItems.filter((filterSearch) => {\n            //     return filterSearch.toLowerCase().match(this.search.toLowerCase());\n            // }); \n            \n            return this.getFilterProducts.filter(item => item.title.toLowerCase().match(this.search.toLowerCase()))\n        }\n  },\n  created: function() {\n    this.items = this.getItems;\n  },\n  methods: {\n    \n    ...mapActions([\n      \"addCart\",\n      \"addBrandToFilter\",\n      \"addCategoryItem\",\n      \"ascendingOrderCart\",\n      \"descendingOrderCart\"\n    ]),\n    setRating: function(rating){\n      this.rating= rating;\n      console.log(this.rating= rating);\n      \n    },\n    addCartPage(item){\n      this.addCart(item)\n      this.$bvToast.toast(`${ item.qty } item added to the cart successfully`, {\n          title: 'Click View Cart',\n          variant: 'primary',\n          solid: true,\n          autoHideDelay: 700\n        })\n      // this.$swal({\n        \n      //   toast: true,\n      //   position: \"top-end\",\n      //   showConfirmButton: false,\n      //   timer: 1000,\n      //   type: \"success\",\n      //   title: `${ item.qty } item added to the cart successfully`\n      // });\n\n      \n      // this.$router.push(\"/app/apps/checkout\");\n    },\n    viewProduct(){\n      // this.$router.push(\"product-detail\")\n      // console.log(this.getFilterProducts.filter(item => item.title.toLowerCase().match(this.search.toLowerCase())));\n      // console.log(this.search);\n      \n      \n    },\n    addBrandToFilterPage(checkedArray) {\n      checkedArray = this.$refs.checkFilter;\n      checkedArray = checkedArray\n        .filter(element => element.checked)\n        .map(element => element.value);\n      console.log(checkedArray);\n      this.addBrandToFilter(checkedArray);\n      this.paginatePerPage();\n    },\n    paginatePerPage() {\n      this.paginate(this.perPage, 0);\n    },\n    addCategoryItemPage(data) {\n      this.addCategoryItem(data);\n      this.paginatePerPage();\n    },\n    ascendingOrderCartPage() {\n      this.ascendingOrderCart();\n      this.paginatePerPage();\n    },\n    descendingOrderCartPage() {\n      this.descendingOrderCart();\n      this.paginatePerPage();\n    },\n  \n    redirectCheckout(){\n      this.$router.push(\"/app/apps/checkout\")\n    },\n    onRadioButtonChange(data) {\n      if (data == \"asc\") {\n        console.log(\"Working\", this.ascendingOrderCart());\n      }\n    },\n\n    viewCart() {\n      this.$router.push(\"./product-detail\");\n    },\n    // button\n    listView() {\n      this.isListView = true;\n    },\n    gridView() {\n      this.isListView = false;\n    },\n\n    // end-button\n    paginate(pageSize, pageNumber) {\n      let itemsToParse = this.filterProducts;\n      this.paginatedItems = itemsToParse.slice(\n        pageNumber * pageSize,\n        (pageNumber + 1) * pageSize\n      );\n    },\n    onPageChanged(page) {\n      this.paginate(this.perPage, page - 1);\n    }\n  },\n  mounted() {\n    this.paginate(this.perPage, 0);\n  }\n};\n</script>\n"]}]}