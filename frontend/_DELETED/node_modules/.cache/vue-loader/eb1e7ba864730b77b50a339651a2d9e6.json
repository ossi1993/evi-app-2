{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue","mtime":1601458252771},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Topnav from \"./TopNav\";\nimport { isMobile } from \"mobile-device-detect\";\n\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  components: {\n    Topnav\n  },\n\n  data() {\n    return {\n      isDisplay: true,\n      isMenuOver: false,\n      isStyle: true,\n      selectedParentMenu: \"\",\n      isMobile,\n      show: false,\n    };\n  },\n  mounted() {\n    this.toggleSelectedParentMenu();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    document.addEventListener(\"click\", this.returnSelectedParentMenu);\n    this.handleWindowResize();\n  },\n\n  beforeDestroy() {\n    document.removeEventListener(\"click\", this.returnSelectedParentMenu);\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n  },\n  computed: {\n    ...mapGetters([\"getSideBarToggleProperties\"])\n  },\n\n  methods: {\n    ...mapActions([\n      \"changeSecondarySidebarProperties\",\n      \"changeSecondarySidebarPropertiesViaMenuItem\",\n      \"changeSecondarySidebarPropertiesViaOverlay\",\n      \"changeSidebarProperties\"\n    ]),\n\n    handleWindowResize() {\n      //  console.log('not working is Mobile');\n      if (window.innerWidth <= 1200) {\n        if (this.getSideBarToggleProperties.isSideNavOpen) {\n          this.changeSidebarProperties();\n        }\n        if (this.getSideBarToggleProperties.isSecondarySideNavOpen) {\n          this.changeSecondarySidebarProperties();\n        }\n      } else {\n        if (!this.getSideBarToggleProperties.isSideNavOpen) {\n          this.changeSidebarProperties();\n        }\n      }\n    },\n    toggleSelectedParentMenu() {\n      const currentParentUrl = this.$route.path\n        .split(\"/\")\n        .filter(x => x !== \"\")[1];\n\n      if (currentParentUrl !== undefined || currentParentUrl !== null) {\n        this.selectedParentMenu = currentParentUrl.toLowerCase();\n      } else {\n        this.selectedParentMenu = \"dashboards\";\n      }\n    },\n    toggleSubMenu(e) {\n      let childrens = this.$refs.sidebarChild.children;\n      let parent = e.target.dataset.item;\n      this.selectedParentMenu = parent;\n      this.changeSecondarySidebarPropertiesViaMenuItem(true);\n    },\n    toggleTriangle(e) {\n      let parent = e.target.dataset.item;\n      this.selectedParentMenu = parent;\n      this.changeSecondarySidebarPropertiesViaMenuItem(false);\n    },\n    toggleTriangleReset(e) {\n      this.toggleSelectedParentMenu();\n    },\n    removeOverlay() {\n      this.changeSecondarySidebarPropertiesViaOverlay();\n      if (window.innerWidth <= 1200) {\n        this.changeSidebarProperties();\n      }\n      this.toggleSelectedParentMenu();\n    },\n    returnSelectedParentMenu() {\n      if (!this.isMenuOver) {\n        this.toggleSelectedParentMenu();\n      }\n    },\n\n    toggleSidebarDropdwon(event) {\n      let dropdownMenus = this.$el.querySelectorAll(\".dropdown-sidemenu.open\");\n\n      event.currentTarget.classList.toggle(\"open\");\n\n      dropdownMenus.forEach(dropdown => {\n        dropdown.classList.remove(\"open\");\n      });\n    }\n  }\n};\n",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Sidebar.vue","sourceRoot":"src/containers/layouts/largeSidebar","sourcesContent":["<template>\n  <div\n    class=\"side-content-wrap\"\n    @mouseenter=\"isMenuOver = true\"\n    @mouseleave=\"isMenuOver = false\"\n    @touchstart=\"isMenuOver = true\"\n  >\n    <vue-perfect-scrollbar\n      :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n      :class=\"{ open: getSideBarToggleProperties.isSideNavOpen }\"\n      ref=\"myData\"\n      class=\"sidebar-left rtl-ps-none ps scroll\"\n    >\n      <div>\n        <ul class=\"navigation-left\">\n          <!-- DASHBOARD SECTION -->\n          <li @mouseenter=\"toggleTriangle\" @mouseleave=\"toggleSelectedParentMenu\" :class=\"{ active: selectedParentMenu == 'dashboard' }\" class=\"nav-item\" data-item=\"dashboard\">\n            <router-link tag=\"a\" class=\"nav-item-hold\" to=\"/app/dashboard\">\n              <i class=\"nav-icon i-Bar-Chart\"></i>\n              <span class=\"nav-text\">{{ $t('dashboard') }}</span>\n            </router-link>\n            <div class=\"triangle\"></div>\n          </li>\n          <!-- INSPECTION SECTION -->\n          <li @mouseenter=\"toggleSubMenu\" class=\"nav-item\" :class=\"{ active: selectedParentMenu == 'inspection' }\" data-item=\"inspection\">\n            <a class=\"nav-item-hold\" href=\"#\">\n              <i class=\"nav-icon i-File-Clipboard-File--Text\"></i>\n              <span class=\"nav-text\">Inspection</span>\n            </a>\n            <div class=\"triangle\"></div>\n          </li>\n          <!-- ITEM SECTION -->\n          <li @mouseenter=\"toggleSubMenu\" class=\"nav-item\" :class=\"{ active: selectedParentMenu == 'item' }\" data-item=\"item\">\n            <a class=\"nav-item-hold\" href=\"#\">\n              <i class=\"nav-icon i-Eci-Icon\"></i>\n              <span class=\"nav-text\">Item</span>\n            </a>\n            <div class=\"triangle\"></div>\n          </li>\n          <!-- DEVICE SECTION -->\n          <li @mouseenter=\"toggleSubMenu\" class=\"nav-item\" :class=\"{ active: selectedParentMenu == 'device' }\" data-item=\"device\">\n            <a class=\"nav-item-hold\" href=\"#\">\n              <i class=\"nav-icon i-Smartphone--Secure\"></i>\n              <span class=\"nav-text\">Device</span>\n            </a>\n            <div class=\"triangle\"></div>\n          </li>\n          <!-- ORDER SECTION -->\n          <li @mouseenter=\"toggleSubMenu\" class=\"nav-item\" :class=\"{ active: selectedParentMenu == 'order' }\" data-item=\"order\">\n            <a class=\"nav-item-hold\" href=\"#\">\n              <i class=\"nav-icon i-Full-Basket\"></i>\n              <span class=\"nav-text\">Order</span>\n            </a>\n            <div class=\"triangle\"></div>\n          </li>\n          <!-- SUPPLIER SECTION -->\n          <li @mouseenter=\"toggleTriangle\" @mouseleave=\"toggleSelectedParentMenu\" class=\"nav-item\" :class=\"{ active: selectedParentMenu == 'supplier' }\" data-item=\"supplier\">\n            <router-link tag=\"a\" class=\"nav-item-hold\" to=\"/app/supplier\">\n              <i class=\"nav-icon i-Box-Full\"></i>\n              <span class=\"nav-text\">Supplier</span>\n            </router-link>\n            <div class=\"triangle\"></div>\n          </li>\n          <!-- MANUFACTURER SECTION -->\n          <li @mouseenter=\"toggleTriangle\" @mouseleave=\"toggleSelectedParentMenu\" class=\"nav-item\" :class=\"{ active: selectedParentMenu == 'manufacturer' }\" data-item=\"manufacturer\">\n            <router-link tag=\"a\" class=\"nav-item-hold\" to=\"/app/manufacturer\">\n              <i class=\"nav-icon i-Factory\"></i>\n              <span class=\"nav-text\">Manufacturer</span>\n            </router-link>\n            <div class=\"triangle\"></div>\n          </li>\n        </ul>\n      </div>\n    </vue-perfect-scrollbar>\n\n    <vue-perfect-scrollbar\n      :class=\"{ open: getSideBarToggleProperties.isSecondarySideNavOpen }\"\n      :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n      class=\"sidebar-left-secondary ps rtl-ps-none\">\n\n      <div ref=\"sidebarChild\">\n\n        <ul class=\"childNav d-none\" data-parent=\"ui-kits\" :class=\"{ 'd-block': selectedParentMenu == 'inspection' }\">\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/inspection/inspection-list\">\n              <i class=\"nav-icon i-Belt-3\"></i>\n              <span class=\"item-name\">List Inspections</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/inspection/inspection-attributes\">\n              <i class=\"nav-icon i-Atom\"></i>\n              <span class=\"item-name\">Inspection Attributes</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/inspection/templates\">\n              <i class=\"nav-icon i-File\"></i>\n              <span class=\"item-name\">Templates</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/inspection/results\">\n              <i class=\"nav-icon i-Diploma-2\"></i>\n              <span class=\"item-name\">Results</span>\n            </router-link>\n          </li>\n          <!-- <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/inspection/sample\">\n              <i class=\"nav-icon i-Add\"></i>\n              <span class=\"item-name\">Sample</span>\n            </router-link>\n          </li> -->\n          <!-- <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/inspection/sample-attributes\">\n              <i class=\"nav-icon i-Atom\"></i>\n              <span class=\"item-name\">Sample Attributes</span>\n            </router-link>\n          </li> -->\n        </ul>\n\n        <ul class=\"childNav d-none\" data-parent=\"extrakits\" :class=\"{ 'd-block': selectedParentMenu == 'item' }\">\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/item/item-list\">\n              <i class=\"nav-icon i-Belt-3\"></i>\n              <span class=\"item-name\">List Items</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/item/item-template-attributes\">\n              <i class=\"nav-icon i-Atom\"></i>\n              <span class=\"item-name\">Template Attributes</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/item/standard-values\">\n              <i class=\"nav-icon i-Check\"></i>\n              <span class=\"item-name\">Standard Values</span>\n            </router-link>\n          </li>\n          <!-- <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/item/item-import\">\n              <i class=\"nav-icon i-Upload\"></i>\n              <span class=\"item-name\">Item Import</span>\n            </router-link>\n          </li> -->\n          <!-- <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/item/item-templates\">\n              <i class=\"nav-icon i-File\"></i>\n              <span class=\"item-name\">Templates</span>\n            </router-link>\n          </li> -->\n        </ul>\n\n        <ul class=\"childNav d-none\" data-parent=\"apps\" :class=\"{ 'd-block': selectedParentMenu == 'device' }\">\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/device/device-list\">\n              <i class=\"nav-icon i-Belt-3\"></i>\n              <span class=\"item-name\">List Devices</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/device/model-list\">\n              <i class=\"nav-icon i-Belt-3\"></i>\n              <span class=\"item-name\">List Models</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/device/device-template-attributes\">\n              <i class=\"nav-icon i-Atom\"></i>\n              <span class=\"item-name\">Template Attributes</span>\n            </router-link>\n          </li>\n          <!-- <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/device/device-templates\">\n              <i class=\"nav-icon i-File\"></i>\n              <span class=\"item-name\">Templates</span>\n            </router-link>\n          </li> -->\n        </ul>\n\n        <ul class=\"childNav d-none\" data-parent=\"apps\" :class=\"{ 'd-block': selectedParentMenu == 'order' }\">\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/order/order-list\">\n              <i class=\"nav-icon i-Shopping-Cart\"></i>\n              <span class=\"item-name\">List Orders</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/order/order-item-list\">\n              <i class=\"nav-icon i-Eci-Icon\"></i>\n              <span class=\"item-name\">List Order Items</span>\n            </router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link tag=\"a\" class to=\"/app/order/order-device-list\">\n              <i class=\"nav-icon i-Smartphone--Secure\"></i>\n              <span class=\"item-name\">List Order Devices</span>\n            </router-link>\n          </li>\n        </ul>\n\n      </div>\n    </vue-perfect-scrollbar>\n    <div\n      @click=\"removeOverlay()\"\n      class=\"sidebar-overlay\"\n      :class=\"{ open: getSideBarToggleProperties.isSecondarySideNavOpen }\"\n    ></div>\n  </div>\n  <!--=============== Left side End ================-->\n</template>\n\n<script>\nimport Topnav from \"./TopNav\";\nimport { isMobile } from \"mobile-device-detect\";\n\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  components: {\n    Topnav\n  },\n\n  data() {\n    return {\n      isDisplay: true,\n      isMenuOver: false,\n      isStyle: true,\n      selectedParentMenu: \"\",\n      isMobile,\n      show: false,\n    };\n  },\n  mounted() {\n    this.toggleSelectedParentMenu();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    document.addEventListener(\"click\", this.returnSelectedParentMenu);\n    this.handleWindowResize();\n  },\n\n  beforeDestroy() {\n    document.removeEventListener(\"click\", this.returnSelectedParentMenu);\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n  },\n  computed: {\n    ...mapGetters([\"getSideBarToggleProperties\"])\n  },\n\n  methods: {\n    ...mapActions([\n      \"changeSecondarySidebarProperties\",\n      \"changeSecondarySidebarPropertiesViaMenuItem\",\n      \"changeSecondarySidebarPropertiesViaOverlay\",\n      \"changeSidebarProperties\"\n    ]),\n\n    handleWindowResize() {\n      //  console.log('not working is Mobile');\n      if (window.innerWidth <= 1200) {\n        if (this.getSideBarToggleProperties.isSideNavOpen) {\n          this.changeSidebarProperties();\n        }\n        if (this.getSideBarToggleProperties.isSecondarySideNavOpen) {\n          this.changeSecondarySidebarProperties();\n        }\n      } else {\n        if (!this.getSideBarToggleProperties.isSideNavOpen) {\n          this.changeSidebarProperties();\n        }\n      }\n    },\n    toggleSelectedParentMenu() {\n      const currentParentUrl = this.$route.path\n        .split(\"/\")\n        .filter(x => x !== \"\")[1];\n\n      if (currentParentUrl !== undefined || currentParentUrl !== null) {\n        this.selectedParentMenu = currentParentUrl.toLowerCase();\n      } else {\n        this.selectedParentMenu = \"dashboards\";\n      }\n    },\n    toggleSubMenu(e) {\n      let childrens = this.$refs.sidebarChild.children;\n      let parent = e.target.dataset.item;\n      this.selectedParentMenu = parent;\n      this.changeSecondarySidebarPropertiesViaMenuItem(true);\n    },\n    toggleTriangle(e) {\n      let parent = e.target.dataset.item;\n      this.selectedParentMenu = parent;\n      this.changeSecondarySidebarPropertiesViaMenuItem(false);\n    },\n    toggleTriangleReset(e) {\n      this.toggleSelectedParentMenu();\n    },\n    removeOverlay() {\n      this.changeSecondarySidebarPropertiesViaOverlay();\n      if (window.innerWidth <= 1200) {\n        this.changeSidebarProperties();\n      }\n      this.toggleSelectedParentMenu();\n    },\n    returnSelectedParentMenu() {\n      if (!this.isMenuOver) {\n        this.toggleSelectedParentMenu();\n      }\n    },\n\n    toggleSidebarDropdwon(event) {\n      let dropdownMenus = this.$el.querySelectorAll(\".dropdown-sidemenu.open\");\n\n      event.currentTarget.classList.toggle(\"open\");\n\n      dropdownMenus.forEach(dropdown => {\n        dropdown.classList.remove(\"open\");\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"\" scoped>\n</style>\n"]}]}