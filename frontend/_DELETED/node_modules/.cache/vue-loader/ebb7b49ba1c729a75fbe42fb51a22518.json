{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\containers\\layouts\\largeSidebar\\TopNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\containers\\layouts\\largeSidebar\\TopNav.vue","mtime":1601278758787},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Util from \"@/utils\";\nimport Sidebar from \"./Sidebar\";\nimport searchComponent from \"../common/search\";\nimport { isMobile } from \"mobile-device-detect\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport { mixin as clickaway } from \"vue-clickaway\";\nimport { apiService } from \"@/common/api.service.js\";\n\nexport default {\n  mixins: [clickaway],\n  components: {\n    Sidebar,\n    searchComponent\n  },\n\n  data() {\n    return {\n      isDisplay: true,\n      username: null,\n      isStyle: true,\n      isSearchOpen: false,\n      isMouseOnMegaMenu: true,\n      isMegaMenuOpen: false\n    };\n  },\n  mounted() {\n    let name = JSON.parse(localStorage.userInfo)\n    this.username = name.toUpperCase()\n  },\n  computed: {\n    ...mapGetters([\"getSideBarToggleProperties\"])\n  },\n\n  methods: {\n    ...mapActions([\n      \"changeSecondarySidebarProperties\",\n\n      \"changeSidebarProperties\",\n      \"changeThemeMode\",\n      \"signOut\"\n    ]),\n\n    // megaMenuToggle() {\n    //   this.isMegaMenuOpen = false;\n\n    //   console.log(\"work\");\n    // },\n\n    handleFullScreen() {\n      Util.toggleFullScreen();\n    },\n    logoutUser() {\n      let endpoint = `/api/rest-auth/logout/`\n      apiService(endpoint)\n      this.logoutUserApp()\n    },\n\n    logoutUserApp() {\n      document.cookie = \"csrftoken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n      document.cookie = \"sessionId=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n      window.localStorage.removeItem('superuser')\n      window.localStorage.removeItem('username')\n      setTimeout(() => {\n        this.$router.push(\"/app/sessions/signIn\");\n        this.signOut();\n      }, 1000);\n    },\n\n    closeMegaMenu() {\n      this.isMegaMenuOpen = false;\n      // console.log(this.isMouseOnMegaMenu);\n      // if (!this.isMouseOnMegaMenu) {\n      //   this.isMegaMenuOpen = !this.isMegaMenuOpen;\n      // }\n    },\n    toggleMegaMenu() {\n      this.isMegaMenuOpen = !this.isMegaMenuOpen;\n    },\n\n    sideBarToggle(el) {\n      if (\n        this.getSideBarToggleProperties.isSideNavOpen &&\n        this.getSideBarToggleProperties.isSecondarySideNavOpen &&\n        isMobile\n      ) {\n        this.changeSidebarProperties();\n        this.changeSecondarySidebarProperties();\n      } else if (\n        this.getSideBarToggleProperties.isSideNavOpen &&\n        this.getSideBarToggleProperties.isSecondarySideNavOpen\n      ) {\n        this.changeSecondarySidebarProperties();\n      } else if (this.getSideBarToggleProperties.isSideNavOpen) {\n        this.changeSidebarProperties();\n      } else if (\n        !this.getSideBarToggleProperties.isSideNavOpen &&\n        !this.getSideBarToggleProperties.isSecondarySideNavOpen &&\n        !this.getSideBarToggleProperties.isActiveSecondarySideNav\n      ) {\n        this.changeSidebarProperties();\n      } else if (\n        !this.getSideBarToggleProperties.isSideNavOpen &&\n        !this.getSideBarToggleProperties.isSecondarySideNavOpen\n      ) {\n        // console.log(\"4\");\n\n        this.changeSidebarProperties();\n        this.changeSecondarySidebarProperties();\n        // console.log(\"4\");\n      }\n    }\n  }\n};\n",null]}