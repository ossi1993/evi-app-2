{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\src\\views\\app\\apps\\scrumboard\\editScrumBoard.vue?vue&type=template&id=20d6f4e4&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\src\\views\\app\\apps\\scrumboard\\editScrumBoard.vue","mtime":1575914052000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\frontend\\source\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"breadcumb\", { attrs: { page: \"Add Board\", folder: \"Apps\" } }),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"mb-30\" },\n        [\n          _c(\"b-card\", [\n            _c(\n              \"div\",\n              {\n                staticClass: \"d-flex justify-content-between align-items-center\"\n              },\n              [\n                _c(\n                  \"b-button\",\n                  {\n                    attrs: { variant: \"outline-primary\", size: \"sm\" },\n                    on: { click: _vm.back }\n                  },\n                  [_vm._v(\"Back\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"m-0 card-title\" }, [\n                  _vm._v(_vm._s(_vm.getEditBoardList.title))\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-button\",\n                  { attrs: { variant: \"outline-danger\", size: \"sm\" } },\n                  [_vm._v(\"Delete \")]\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"editScrumBoardContainer d-flex mb-30\" },\n        [\n          _vm._l(_vm.getEditBoardList.list, function(div, key) {\n            return _c(\n              \"div\",\n              { key: key, staticClass: \"col-md-3 ul-board-item\" },\n              [\n                _c(\n                  \"b-card\",\n                  {\n                    attrs: { title: div.title },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"footer\",\n                          fn: function() {\n                            return [\n                              _vm.selectedListId != key\n                                ? _c(\n                                    \"b-button\",\n                                    {\n                                      attrs: { block: \"\", variant: \"primary\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.toggleCard(key)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"Add Card\")]\n                                  )\n                                : _vm.selectedListId === key\n                                ? _c(\n                                    \"b-input-group\",\n                                    { staticClass: \"mt-3\" },\n                                    [\n                                      _c(\n                                        \"b-input-group-append\",\n                                        [\n                                          _c(\n                                            \"b-button\",\n                                            {\n                                              attrs: {\n                                                disabled:\n                                                  _vm.addBoard.cardList == \"\",\n                                                variant: \"primary\",\n                                                size: \"sm\"\n                                              },\n                                              on: {\n                                                click: function($event) {\n                                                  return _vm.addCard({\n                                                    list: div,\n                                                    cardListTitle:\n                                                      _vm.addBoard.cardList\n                                                  })\n                                                }\n                                              }\n                                            },\n                                            [_vm._v(\"Add\")]\n                                          )\n                                        ],\n                                        1\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"b-form-input\", {\n                                        staticClass: \"ul-scrumboard-form-input\",\n                                        attrs: { type: \"text\" },\n                                        on: {\n                                          keyup: function($event) {\n                                            if (\n                                              !$event.type.indexOf(\"key\") &&\n                                              _vm._k(\n                                                $event.keyCode,\n                                                \"enter\",\n                                                13,\n                                                $event.key,\n                                                \"Enter\"\n                                              )\n                                            ) {\n                                              return null\n                                            }\n                                            return _vm.addCard({\n                                              list: div,\n                                              cardListTitle:\n                                                _vm.addBoard.cardList\n                                            })\n                                          }\n                                        },\n                                        model: {\n                                          value: _vm.addBoard.cardList,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.addBoard,\n                                              \"cardList\",\n                                              $$v\n                                            )\n                                          },\n                                          expression: \"addBoard.cardList\"\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"b-input-group-append\",\n                                        [\n                                          _c(\n                                            \"b-button\",\n                                            {\n                                              attrs: {\n                                                variant: \"primary\",\n                                                size: \"sm\"\n                                              },\n                                              on: { click: _vm.toggleCard }\n                                            },\n                                            [_vm._v(\"X\")]\n                                          )\n                                        ],\n                                        1\n                                      )\n                                    ],\n                                    1\n                                  )\n                                : _vm._e()\n                            ]\n                          },\n                          proxy: true\n                        }\n                      ],\n                      null,\n                      true\n                    )\n                  },\n                  [\n                    _c(\n                      \"draggable\",\n                      _vm._b(\n                        {\n                          staticClass: \"list-group\",\n                          attrs: { group: \"people\" },\n                          on: {\n                            start: function($event) {\n                              _vm.drag = true\n                            },\n                            end: function($event) {\n                              _vm.drag = false\n                            }\n                          }\n                        },\n                        \"draggable\",\n                        _vm.dragOptions,\n                        false\n                      ),\n                      [\n                        _c(\n                          \"transition-group\",\n                          {\n                            attrs: {\n                              type: \"transition\",\n                              name: !_vm.drag ? \"flip-list\" : null\n                            }\n                          },\n                          _vm._l(div.cardList, function(list) {\n                            return _c(\n                              \"div\",\n                              { key: list.id },\n                              [\n                                _c(\n                                  \"b-card\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"b-modal\",\n                                        rawName: \"v-b-modal.modal-center\",\n                                        modifiers: { \"modal-center\": true }\n                                      }\n                                    ],\n                                    staticClass: \"mb-30 cursor-pointer\",\n                                    attrs: {\n                                      \"img-src\": list.coverImage,\n                                      \"img-top\": \"\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.editCardListPage(list)\n                                      }\n                                    },\n                                    scopedSlots: _vm._u(\n                                      [\n                                        {\n                                          key: \"footer\",\n                                          fn: function() {\n                                            return [\n                                              _c(\"small\", {\n                                                staticClass: \"text-muted\"\n                                              })\n                                            ]\n                                          },\n                                          proxy: true\n                                        }\n                                      ],\n                                      null,\n                                      true\n                                    )\n                                  },\n                                  [\n                                    _c(\"b-card-text\", [\n                                      _vm._v(_vm._s(list.title))\n                                    ])\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          }),\n                          0\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"b-modal\",\n            {\n              attrs: {\n                id: \"modal-center\",\n                size: \"lg\",\n                centered: \"\",\n                title: \"Draggable 1\",\n                \"hide-footer\": \"\"\n              }\n            },\n            [\n              _c(\n                \"b-form\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      staticClass: \"mb-4\",\n                      attrs: { id: \"input-group-1\", \"label-for\": \"input-1\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"input-1\",\n                          type: \"text\",\n                          required: \"\",\n                          placeholder: \"title\"\n                        },\n                        model: {\n                          value: _vm.getEditCardList.title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.getEditCardList, \"title\", $$v)\n                          },\n                          expression: \"getEditCardList.title\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { staticClass: \"mb-4\" },\n                    [\n                      _c(\"b-form-textarea\", {\n                        attrs: {\n                          id: \"textarea\",\n                          rows: \"5\",\n                          placeholder: \"Description\"\n                        },\n                        model: {\n                          value: _vm.getEditCardList.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.getEditCardList, \"description\", $$v)\n                          },\n                          expression: \"getEditCardList.description\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { staticClass: \"mb-4\" },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"input-1\",\n                          type: \"text\",\n                          placeholder: \"Write Comments....\"\n                        },\n                        on: {\n                          keyup: function($event) {\n                            if (\n                              !$event.type.indexOf(\"key\") &&\n                              _vm._k(\n                                $event.keyCode,\n                                \"enter\",\n                                13,\n                                $event.key,\n                                \"Enter\"\n                              )\n                            ) {\n                              return null\n                            }\n                            return _vm.addComment(_vm.addBoard.comment)\n                          }\n                        },\n                        model: {\n                          value: _vm.addBoard.comment,\n                          callback: function($$v) {\n                            _vm.$set(_vm.addBoard, \"comment\", $$v)\n                          },\n                          expression: \"addBoard.comment\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-list-group\",\n                    { staticClass: \"mb-4\" },\n                    _vm._l(_vm.getEditCardList.comments, function(comment) {\n                      return _c(\n                        \"div\",\n                        {\n                          key: comment.id,\n                          staticClass: \"d-flex w-100 align-items-baseline\"\n                        },\n                        [\n                          _c(\"p\", { staticClass: \"ul-widget4__img todo-img\" }, [\n                            _c(\"img\", {\n                              staticClass: \"rounded-circle\",\n                              attrs: { src: comment.image }\n                            })\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-list-group-item\",\n                            { staticClass: \"mb-4 w-100\" },\n                            [_vm._v(_vm._s(comment.text))]\n                          )\n                        ],\n                        1\n                      )\n                    }),\n                    0\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { type: \"button\", variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.onSubmit(_vm.getEditCardList)\n                        }\n                      }\n                    },\n                    [_vm._v(\"Submit\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    { attrs: { type: \"reset\", variant: \"danger\" } },\n                    [_vm._v(\"Reset\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-col\",\n            { attrs: { md: \"3\" } },\n            [\n              _c(\"b-card\", { staticClass: \"cursor-pointer\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"card-title mb-0\" },\n                  [\n                    _vm.isShow\n                      ? _c(\n                          \"b-button\",\n                          {\n                            staticClass:\n                              \"ul-scrum-btn d-flex align-items-center border-0\",\n                            attrs: { tag: \"div\" },\n                            on: {\n                              click: function($event) {\n                                _vm.isShow = !_vm.isShow\n                              }\n                            }\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"i-Add text-20 mr-2\" }),\n                            _vm._v(\" \"),\n                            _c(\"p\", { staticClass: \"m-0 text-muted\" }, [\n                              _vm._v(\"Add Project List\")\n                            ])\n                          ]\n                        )\n                      : _c(\n                          \"b-input-group\",\n                          { staticClass: \"mt-3\" },\n                          [\n                            _c(\n                              \"b-input-group-append\",\n                              [\n                                _c(\n                                  \"b-button\",\n                                  {\n                                    attrs: {\n                                      disabled: _vm.addBoard.title == \"\",\n                                      variant: \"primary\",\n                                      size: \"sm\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.addList(_vm.addBoard.title)\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"Add\")]\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"b-form-input\", {\n                              staticClass: \"ul-scrumboard-form-input\",\n                              attrs: { type: \"text\" },\n                              on: {\n                                keyup: function($event) {\n                                  if (\n                                    !$event.type.indexOf(\"key\") &&\n                                    _vm._k(\n                                      $event.keyCode,\n                                      \"enter\",\n                                      13,\n                                      $event.key,\n                                      \"Enter\"\n                                    )\n                                  ) {\n                                    return null\n                                  }\n                                  return _vm.addList(_vm.addBoard.title)\n                                }\n                              },\n                              model: {\n                                value: _vm.addBoard.title,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.addBoard, \"title\", $$v)\n                                },\n                                expression: \"addBoard.title\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-input-group-append\",\n                              [\n                                _c(\n                                  \"b-button\",\n                                  {\n                                    attrs: { variant: \"primary\", size: \"sm\" },\n                                    on: {\n                                      click: function($event) {\n                                        _vm.isShow = !_vm.isShow\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"X\")]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                  ],\n                  1\n                )\n              ])\n            ],\n            1\n          )\n        ],\n        2\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}