{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\sessions\\signUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\sessions\\signUp.vue","mtime":1597906595118},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { required, sameAs, minLength } from \"vuelidate/lib/validators\";\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  metaInfo: {\n    // if no subcomponents specify a metaInfo.title, this title will be used\n    title: \"SignUp\"\n  },\n\n  data() {\n    return {\n      fName: \"\",\n      email: \"\",\n      bgImage: require(\"@/assets/images/photo-wide-4.jpg\"),\n      logo: require(\"@/assets/evi_logo_sq.png\"),\n      signInImage: require(\"@/assets/images/photo-long-3.jpg\"),\n      password: \"\",\n      repeatPassword: \"\",\n      submitStatus: null\n    };\n  },\n\n  validations: {\n    fName: {\n      required,\n      minLength: minLength(4)\n    },\n\n    password: {\n      required,\n      minLength: minLength(5)\n    },\n    repeatPassword: {\n      sameAsPassword: sameAs(\"password\")\n    }\n\n    // add input\n    // peopleAdd: {\n    //   required,\n    //   minLength: minLength(3),\n    //   $each: {\n    //     multipleName: {\n    //       required,\n    //       minLength: minLength(5)\n    //     }\n    //   }\n    // },\n    // validationsGroup:['peopleAdd.multipleName']\n  },\n\n  computed: {\n    ...mapGetters([\"loggedInUser\", \"loading\", \"error\"])\n  },\n\n  methods: {\n    ...mapActions([\"signUserUp\"]),\n    //   validate form\n    submit() {\n      console.log(\"submit!\");\n\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        this.submitStatus = \"ERROR\";\n      } else {\n        this.signUserUp({ email: this.email, password: this.password });\n        this.submitStatus = \"PENDING\";\n        setTimeout(() => {\n          this.submitStatus = \"OK\";\n        }, 1000);\n      }\n    },\n    makeToast(variant = null) {\n      this.$bvToast.toast(\"Please fill the form correctly.\", {\n        title: `Variant ${variant || \"default\"}`,\n        variant: variant,\n        solid: true\n      });\n    },\n    makeToastTwo(variant = null) {\n      this.$bvToast.toast(\"Successfully Created Account\", {\n        title: `Variant ${variant || \"default\"}`,\n        variant: variant,\n        solid: true\n      });\n    },\n\n    inputSubmit() {\n      console.log(\"submitted\");\n    }\n  }\n};\n",null]}