{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\model-list.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\model-list.vue","mtime":1601470065380},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ni:focus,\ninput:focus,\nselect:focus,\ntextarea:focus,\nbutton:focus {\n    outline: none;\n}\n#new-model-section {\n  cursor: pointer;\n  outline: none;\n}\n",{"version":3,"sources":["model-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"model-list.vue","sourceRoot":"src/views/app/device","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Model List'\" :folder=\"'Device'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Tag\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Models</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.models.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\">\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\" id=\"new-model-section\" @click=\"show = !show; updateStatus = false\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\"></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Model</h5>\n            </b-row>\n            <div class=\"mt-3\" v-show=\"show\">\n              <b-row class=\"ml-3 mt-3 mr-3\">\n                <b-col md=\"6\">\n                  <b-form-input id=\"input-1\" v-model=\"MName\" type=\"text\" required placeholder=\"Model Name\" ></b-form-input>\n                </b-col>\n                <b-col md=\"6\">\n                  <v-select  id=\"select-1\" v-model=\"MStatus\" :options=\"optionStatuses\" required placeholder=\"Choose Status\" \n                   label=\"text\" :reduce=\"Status => Status.value\"></v-select>\n                </b-col>\n              </b-row>\n              <b-row class=\"ml-3 mt-3 mr-3\">\n                <b-col md=\"6\">\n                  <v-select  id=\"select-2\" v-model=\"Manufacturer\" :options=\"optionManufacturer\" required placeholder=\"Choose Manufacturer\" \n                   label=\"txtManufacturerName\" :reduce=\"Manufacturer => Manufacturer.id\"></v-select>\n                </b-col>\n                <b-col md=\"6\">\n                  <v-select  id=\"select-3\" v-model=\"Supplier\" :options=\"optionSupplier\" required placeholder=\"Choose Supplier\" \n                   label=\"txtSupplierName\" :reduce=\"Supplier => Supplier.id\"></v-select>\n                </b-col>\n              </b-row>\n              <!-- NEW MODEL / UPDATE MODEL BUTTONS -->\n              <b-row class=\"ml-3 mt-5 mr-3\">\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-danger\">Delete Input</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-info\">Cancel</b-button>\n                </b-col>\n                <b-col md=\"6\" v-if=\"!updateStatus\">\n                  <b-button @click=\"addModel\" block variant=\"success\" :disabled=\"disabled\">Add Model</b-button>\n                </b-col>\n                <b-col md=\"6\" v-else-if=\"updateStatus\">\n                  <b-button @click=\"updateModel\" block variant=\"warning\" :disabled=\"disabled\">Update Model</b-button>\n                </b-col>\n              </b-row>\n              <b-row class=\"ml-3 mt-3 mr-3\">\n                <b-col md=\"12\">\n                  <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                    <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                  </b-alert>\n                </b-col>\n              </b-row>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridModel\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @cellValueChanged=\"updateModelGrid\"\n                :pagination=\"true\"\n                :paginationPageSize=\"paginationPageSize\"\n                :getContextMenuItems=\"getContextMenu\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n            <div class=\"ml-3 mr-3 mt-2 mb-2 text-right\">\n                Page Size:\n                <select @change=\"onPageSizeChanged\" id=\"page-size\">\n                    <option value=\"10\" selected=\"\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"200\">200</option>\n                </select>\n                <b-button @click=\"onBtExport\" class=\"ml-3\" size=\"sm\" variant=\"outline-success\">Export Excel</b-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-row class=\"ml-1 mr-3 mb-4\">\n      <b-button class=\"mr-3\" @click=\"saveState\" variant=\"primary\">Save Grid State</b-button>\n      <b-button @click=\"restoreState\" variant=\"outline-light\">Reset Grid State</b-button>\n    </b-row>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\n\nexport default {\n  metaInfo: {    \n    title: \"Model\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      // AG-GRID VARIABLES\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      rowData: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      domLayout: null,\n      modules: AllModules,\n\n      // VUE VARIABLES\n      suppliers: [],\n      manufacturers: [],\n      models: [],\n      show: false,\n      MName: null,\n      MStatus: null,\n      Manufacturer: null,\n      Supplier: null,\n      Comment: null,\n      date: null,\n      next: null,\n      error: false,\n      updateStatus: false,\n      updateId: null,\n      optionSupplier: [],\n      optionManufacturer: [],\n      optionStatuses: [\n        { value: 'Active', text: 'Active' },\n        { value: 'Inactive', text: 'Inactive' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      { headerName: \"Model Name\", field: \"txtModelName\", filter: 'agTextColumnFilter', },\n      { headerName: \"Model Status\", field: \"txtModelStatus\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Active', 'Inactive']},},\n      { headerName: \"Manufacturer\", field: \"idManufacturer.txtManufacturerName\", filter: 'agTextColumnFilter', editable: false },\n      { headerName: \"Supplier\", field: \"idSupplier.txtSupplierName\", filter: 'agTextColumnFilter', editable: false },\n      { headerName: \"Memo\", field: \"txtComment\", filter: 'agTextColumnFilter', editable: false },\n    ],\n    this.defaultColDef = { flex: 1, editable: true, resizable: true, sortable: true, filter: true, floatingFilter: true, };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n    this.paginationPageSize = 10;\n  },\n  mounted() {\n    if (JSON.parse(localStorage.getItem('model_columnStats')) != null) {\n       this.gridOptions.columnApi.setColumnState(JSON.parse(localStorage.getItem('model_columnStats')));\n    } else {\n      this.gridApi = this.gridOptions.api;\n      this.gridColumnApi = this.gridOptions.columnApi;\n    }\n  },\n  computed: {\n    disabled: function () {\n      return !this.MName ? true : !this.MStatus ? true : !this.Manufacturer ? true : !this.Supplier ? true : false; \n    },\n  },\n  methods: {\n    saveState() {\n      localStorage.setItem('model_columnStats', JSON.stringify(this.gridOptions.columnApi.getColumnState()));\n    },\n    restoreState() {\n      localStorage.setItem('model_columnStats', null);\n    },\n    onBtExport() {\n      this.gridApi.exportDataAsExcel({});\n    },\n    onPageSizeChanged(newPageSize) {\n      var value = document.getElementById('page-size').value;\n      this.gridApi.paginationSetPageSize(Number(value));\n    },\n    addModel() {\n      let endpoint = `/api/model/`;\n      apiService(endpoint, \"POST\", { txtModelName: this.MName, txtModelStatus: this.MStatus, idManufacturer: this.Manufacturer, idSupplier: this.Supplier, })\n      .then(response => {\n        if (response != 'ERROR') {\n          this.getModels();\n        } else {\n          this.error = true;\n        }\n      })\n      .catch(err => console.log(err));\n      this.emptyInput();\n      if (this.error) {\n        this.error = false;\n      }\n    },\n    editModelMenu(params) {\n      let sel = params.node.data;\n      this.MName = sel.txtModelName;\n      this.MStatus = sel.txtModelStatus;\n      this.Manufacturer = sel.idManufacturer;\n      this.Supplier = sel.idSupplier;\n      this.Comment = sel.Comment;\n      this.updateStatus = true;\n      this.updateId = sel.id;\n      this.show = true;\n      document.documentElement.scrollTop = 0;\n    },\n    async updateModel() {\n      if(typeof this.Manufacturer == \"object\") { this.Manufacturer = this.Manufacturer.id } else { this.Manufacturer = this.Manufacturer }\n      if(typeof this.Supplier == \"object\") { this.Supplier = this.Supplier.id } else { this.Supplier = this.Supplier }\n      let endpoint = `/api/model/${this.updateId}/`;\n      await apiService(endpoint, \"PUT\", { \n        txtModelName: this.MName,\n        txtModelStatus: this.MStatus,\n        txtComment: this.Comment,\n        idManufacturer: this.Manufacturer,\n        idSupplier: this.Supplier })\n        .then(response => {\n          if (response != 'ERROR'){\n            this.emptyInput();\n            this.getModels();\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    async updateModelGrid(event) {     \n      let endpoint = `/api/model/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtModelName: event.node.data.txtModelName,\n          txtModelStatus: event.node.data.txtModelStatus,\n          txtComment: event.node.data.txtComment,\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Model? => \" + params.node.data.txtModelName, {\n          title: \"Please Confirm\",\n          size: \"m\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => {\n          if (value) {\n            this.deleteModel(params);\n          }\n        })\n        .catch(err => console.log(err));\n    },\n    async deleteModel() {\n      let endpoint = `/api/model/${params.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\")\n        this.getModels();\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    emptyInput() {\n      this.MName = '';\n      this.MStatus = [];\n      this.Manufacturer = [];\n      this.Supplier = [];\n      this.Comment = '';\n      this.show = false;\n    },\n    getManufacturer() {\n      if (!this.error) {\n        this.manufacturers = [];\n        let endpoint = `/api/manufacturer/`;\n        apiService(endpoint)\n          .then(data => {\n            this.manufacturers.push(...data.results);\n            this.optionManufacturer = this.manufacturers\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getSupplier() {\n      if (!this.error) {\n        this.suppliers = [];\n        let endpoint = `/api/supplier/`;\n        apiService(endpoint)\n          .then(data => {\n            this.suppliers.push(...data.results);\n            this.optionSupplier = this.suppliers\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getModels() {\n      if (!this.error) {\n        this.models = [];\n        let endpoint = `/api/model-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.models.push(...data.results);\n            this.rowData = this.models\n          })\n          .catch(err => console.log(err));\n      }\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n    getContextMenu(params) {\n      var result = [\n        {\n          name: 'Edit Model',\n          action: () => this.editModelMenu(params)\n        },\n        'separator',\n        {\n          name: 'Delete Model',\n          action: () =>  this.openModal(params)\n        },\n        'export'\n      ];\n      return result;\n    },\n  },\n  created() {\n    this.getManufacturer();\n    this.getSupplier();\n    this.getModels();\n    this.getDateToday();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n  #new-model-section {\n    cursor: pointer;\n    outline: none;\n  }\n</style>\n"]}]}