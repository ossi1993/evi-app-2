{"version":3,"sources":["../../src/ts/utils/object.ts"],"names":[],"mappings":"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","file":"object.js","sourcesContent":["import { missing, exists, values } from './generic';\nimport { forEach } from './array';\n\nexport function iterateObject<T>(object: { [p: string]: T; } | T[] | undefined, callback: (key: string, value: T) => void) {\n    if (object == null) { return; }\n\n    if (Array.isArray(object)) {\n        forEach(object, (value, index) => callback(`${index}`, value));\n    } else {\n        forEach(Object.keys(object), key => callback(key, object[key]));\n    }\n}\n\nexport function cloneObject<T>(object: T): T {\n    const copy = {} as T;\n    const keys = Object.keys(object);\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const value = (object as any)[key];\n        (copy as any)[key] = value;\n    }\n\n    return copy;\n}\n\nexport function deepCloneObject<T>(object: T): T {\n    return JSON.parse(JSON.stringify(object));\n}\n\nexport function getProperty<T, K extends keyof T>(object: T, key: K): any {\n    return object[key];\n}\n\nexport function setProperty<T, K extends keyof T>(object: T, key: K, value: any): void {\n    object[key] = value;\n}\n\n/**\n * Will copy the specified properties from `source` into the equivalent properties on `target`, ignoring properties with\n * a value of `undefined`.\n */\nexport function copyPropertiesIfPresent<S, T extends S, K extends keyof S>(source: S, target: T, ...properties: K[]) {\n    forEach(properties, p => copyPropertyIfPresent(source, target, p));\n}\n\n/**\n * Will copy the specified property from `source` into the equivalent property on `target`, unless the property has a\n * value of `undefined`. If a transformation is provided, it will be applied to the value before being set on `target`.\n */\nexport function copyPropertyIfPresent<S, T extends S, K extends keyof S>(source: S, target: T, property: K, transform?: (value: S[K]) => any) {\n    const value = getProperty(source, property);\n\n    if (value !== undefined) {\n        setProperty(target, property, transform ? transform(value) : value);\n    }\n}\n\nexport function getAllKeysInObjects(objects: any[]): string[] {\n    const allValues: any = {};\n\n    objects.filter(obj => obj != null).forEach(obj => {\n        forEach(Object.keys(obj), key => allValues[key] = null);\n    });\n\n    return Object.keys(allValues);\n}\n\nexport function mergeDeep(dest: any, source: any, copyUndefined = true): void {\n    if (!exists(source)) { return; }\n\n    iterateObject(source, (key: string, newValue: any) => {\n        const oldValue: any = dest[key];\n\n        if (oldValue === newValue) { return; }\n\n        if (typeof oldValue === 'object' && typeof newValue === 'object' && !Array.isArray(oldValue)) {\n            mergeDeep(oldValue, newValue);\n        } else if (copyUndefined || newValue !== undefined) {\n            dest[key] = newValue;\n        }\n    });\n}\n\nexport function assign<T, U>(target: T, source: U): T & U;\nexport function assign<T, U, V>(target: T, source1: U, source2: V): T & U & V;\nexport function assign<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\nexport function assign(object: any, ...sources: any[]): any {\n    forEach(sources, source => iterateObject(source, (key: string, value: any) => object[key] = value));\n\n    return object;\n}\n\nexport function missingOrEmptyObject(value: any): boolean {\n    return missing(value) || Object.keys(value).length === 0;\n}\n\nexport function get(source: any, expression: string, defaultValue: any): any {\n    if (source == null) { return defaultValue; }\n\n    const keys = expression.split('.');\n    let objectToRead = source;\n\n    while (keys.length > 1) {\n        objectToRead = objectToRead[keys.shift()];\n\n        if (objectToRead == null) {\n            return defaultValue;\n        }\n    }\n\n    const value = objectToRead[keys[0]];\n\n    return value != null ? value : defaultValue;\n}\n\nexport function set(target: any, expression: string, value: any) {\n    if (target == null) { return; }\n\n    const keys = expression.split('.');\n    let objectToUpdate = target;\n\n    while (keys.length > 1) {\n        objectToUpdate = objectToUpdate[keys.shift()];\n\n        if (objectToUpdate == null) {\n            return;\n        }\n    }\n\n    objectToUpdate[keys[0]] = value;\n}\n\nexport function deepFreeze(object: any): any {\n    Object.freeze(object);\n\n    forEach(values(object), v => {\n        if (v != null && (typeof v === 'object' || typeof v === 'function')) {\n            deepFreeze(v);\n        }\n    });\n\n    return object;\n}\n\nexport function getValueUsingField(data: any, field: string, fieldContainsDots: boolean): any {\n    if (!field || !data) { return; }\n\n    // if no '.', then it's not a deep value\n    if (!fieldContainsDots) {\n        return data[field];\n    }\n\n    // otherwise it is a deep value, so need to dig for it\n    const fields = field.split('.');\n    let currentObject = data;\n\n    for (let i = 0; i < fields.length; i++) {\n        currentObject = currentObject[fields[i]];\n\n        if (missing(currentObject)) {\n            return null;\n        }\n    }\n\n    return currentObject;\n}\n"]}