{"version":3,"sources":["../../src/ts/headerRendering/headerRowComp.ts"],"names":[],"mappings":"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","file":"headerRowComp.js","sourcesContent":["import { Component } from '../widgets/component';\nimport { Autowired, PostConstruct, PreDestroy } from '../context/context';\nimport { GridOptionsWrapper } from '../gridOptionsWrapper';\nimport { ColumnGroupChild } from '../entities/columnGroupChild';\nimport { ColumnGroup } from '../entities/columnGroup';\nimport { ColumnController } from '../columnController/columnController';\nimport { Column } from '../entities/column';\nimport { DropTarget } from '../dragAndDrop/dragAndDropService';\nimport { Events } from '../events';\nimport { HeaderWrapperComp } from './header/headerWrapperComp';\nimport { HeaderGroupWrapperComp } from './headerGroup/headerGroupWrapperComp';\nimport { Constants } from '../constants';\nimport { FloatingFilterWrapper } from '../filter/floating/floatingFilterWrapper';\nimport { isBrowserSafari } from '../utils/browser';\nimport { missing } from '../utils/generic';\nimport { removeFromArray } from '../utils/array';\nimport { setDomChildOrder } from '../utils/dom';\nimport { FocusController } from '../focusController';\nimport { AbstractHeaderWrapper } from './header/abstractHeaderWrapper';\n\nexport enum HeaderRowType {\n    COLUMN_GROUP, COLUMN, FLOATING_FILTER\n}\n\nexport class HeaderRowComp extends Component {\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('columnController') private columnController: ColumnController;\n    @Autowired('focusController') private focusController: FocusController;\n\n    private readonly dept: number;\n    private readonly pinned: string;\n\n    private readonly dropTarget: DropTarget;\n    private readonly type: HeaderRowType;\n    private rowIndex: number;\n\n    private headerComps: { [key: string]: AbstractHeaderWrapper } = {};\n\n    constructor(dept: number, type: HeaderRowType, pinned: string, dropTarget: DropTarget) {\n        super(/* html */`<div class=\"ag-header-row\" role=\"row\" />`);\n        this.dept = dept;\n        this.type = type;\n        this.pinned = pinned;\n        this.dropTarget = dropTarget;\n\n        const niceClassName = HeaderRowType[type].toLowerCase().replace(/_/g, '-');\n        this.addCssClass(`ag-header-row-${niceClassName}`);\n\n        if (isBrowserSafari()) {\n            // fix for a Safari rendering bug that caused the header to flicker above chart panels\n            // as you move the mouse over the header\n            this.getGui().style.transform = 'translateZ(0)';\n        }\n    }\n\n    public forEachHeaderElement(callback: (comp: Component) => void): void {\n        Object.keys(this.headerComps).forEach(key => {\n            callback(this.headerComps[key]);\n        });\n    }\n\n    public setRowIndex(idx: number) {\n        this.rowIndex = idx;\n        this.getGui().setAttribute('aria-rowindex', (idx + 1).toString());\n    }\n\n    public getRowIndex(): number {\n        return this.rowIndex;\n    }\n\n    public getType(): HeaderRowType {\n        return this.type;\n    }\n\n    @PreDestroy\n    private destroyAllChildComponents(): void {\n        const idsOfAllChildren = Object.keys(this.headerComps);\n        this.destroyChildComponents(idsOfAllChildren);\n    }\n\n    private destroyChildComponents(idsToDestroy: string[], keepFocused?: boolean): void {\n        idsToDestroy.forEach(id => {\n            const childHeaderWrapper: AbstractHeaderWrapper = this.headerComps[id];\n\n            if (\n                keepFocused &&\n                !childHeaderWrapper.getColumn().isMoving() &&\n                this.focusController.isHeaderWrapperFocused(childHeaderWrapper)\n            ) {\n                return;\n            }\n\n            this.getGui().removeChild(childHeaderWrapper.getGui());\n            this.destroyBean(childHeaderWrapper);\n            delete this.headerComps[id];\n        });\n    }\n\n    private onRowHeightChanged(): void {\n        let headerRowCount = this.columnController.getHeaderRowCount();\n        const sizes: number[] = [];\n\n        let numberOfFloating = 0;\n        let groupHeight: number;\n        let headerHeight: number;\n\n        if (this.columnController.isPivotMode()) {\n            groupHeight = this.gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = this.gridOptionsWrapper.getPivotHeaderHeight();\n        } else {\n            if (this.columnController.hasFloatingFilters()) {\n                headerRowCount++;\n                numberOfFloating = 1;\n            }\n\n            groupHeight = this.gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = this.gridOptionsWrapper.getHeaderHeight();\n        }\n\n        const numberOfNonGroups = 1 + numberOfFloating;\n        const numberOfGroups = headerRowCount - numberOfNonGroups;\n\n        for (let i = 0; i < numberOfGroups; i++) { sizes.push(groupHeight); }\n\n        sizes.push(headerHeight);\n\n        for (let i = 0; i < numberOfFloating; i++) { sizes.push(this.gridOptionsWrapper.getFloatingFiltersHeight()); }\n\n        let rowHeight = 0;\n\n        for (let i = 0; i < this.dept; i++) { rowHeight += sizes[i]; }\n\n        this.getGui().style.top = rowHeight + 'px';\n        this.getGui().style.height = sizes[this.dept] + 'px';\n    }\n\n    //noinspection JSUnusedLocalSymbols\n    @PostConstruct\n    private init(): void {\n        this.onRowHeightChanged();\n        this.onVirtualColumnsChanged();\n        this.setWidth();\n\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.onRowHeightChanged.bind(this));\n\n        this.addManagedListener(this.eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n    }\n\n    private onColumnResized(): void {\n        this.setWidth();\n    }\n\n    private setWidth(): void {\n        const width = this.getWidthForRow();\n        this.getGui().style.width = width + 'px';\n    }\n\n    private getWidthForRow(): number {\n        const printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n        if (printLayout) {\n            const centerRow = missing(this.pinned);\n\n            if (centerRow) {\n                return this.columnController.getContainerWidth(Constants.PINNED_RIGHT)\n                    + this.columnController.getContainerWidth(Constants.PINNED_LEFT)\n                    + this.columnController.getContainerWidth(null);\n            }\n\n            return 0;\n        }\n\n        // if not printing, just return the width as normal\n        return this.columnController.getContainerWidth(this.pinned);\n    }\n\n    private onGridColumnsChanged(): void {\n        this.removeAndDestroyAllChildComponents();\n    }\n\n    private removeAndDestroyAllChildComponents(): void {\n        const idsOfAllChildren = Object.keys(this.headerComps);\n        this.destroyChildComponents(idsOfAllChildren);\n    }\n\n    private onDisplayedColumnsChanged(): void {\n        this.onVirtualColumnsChanged();\n        this.setWidth();\n    }\n\n    private getItemsAtDepth(): ColumnGroupChild[] {\n        const printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n        if (printLayout) {\n            // for print layout, we add all columns into the center\n            const centerContainer = missing(this.pinned);\n            if (centerContainer) {\n                let result: ColumnGroupChild[] = [];\n                [Constants.PINNED_LEFT, null, Constants.PINNED_RIGHT].forEach(pinned => {\n                    const items = this.columnController.getVirtualHeaderGroupRow(\n                        pinned,\n                        this.type == HeaderRowType.FLOATING_FILTER ?\n                            this.dept - 1 :\n                            this.dept\n                    );\n                    result = result.concat(items);\n                });\n                return result;\n            }\n            return [];\n        }\n\n        // when in normal layout, we add the columns for that container only\n        return this.columnController.getVirtualHeaderGroupRow(\n            this.pinned,\n            this.type == HeaderRowType.FLOATING_FILTER ?\n                this.dept - 1 :\n                this.dept\n        );\n    }\n\n    private onVirtualColumnsChanged(): void {\n        const currentChildIds = Object.keys(this.headerComps);\n        const correctChildIds: string[] = [];\n        const itemsAtDepth = this.getItemsAtDepth();\n\n        itemsAtDepth.forEach((child: ColumnGroupChild) => {\n            // skip groups that have no displayed children. this can happen when the group is broken,\n            // and this section happens to have nothing to display for the open / closed state.\n            // (a broken group is one that is split, ie columns in the group have a non-group column\n            // in between them)\n            if (child.isEmptyGroup()) {\n                return;\n            }\n\n            const idOfChild = child.getUniqueId();\n            const eParentContainer = this.getGui();\n\n            // if we already have this cell rendered, do nothing\n            const colAlreadyInDom = currentChildIds.indexOf(idOfChild) >= 0;\n            let headerComp: AbstractHeaderWrapper;\n            let eHeaderCompGui: HTMLElement;\n            if (colAlreadyInDom) {\n                removeFromArray(currentChildIds, idOfChild);\n            } else {\n                headerComp = this.createHeaderComp(child);\n                this.headerComps[idOfChild] = headerComp;\n                eHeaderCompGui = headerComp.getGui();\n                eParentContainer.appendChild(eHeaderCompGui);\n            }\n\n            correctChildIds.push(idOfChild);\n        });\n\n        // at this point, anything left in currentChildIds is an element that is no longer in the viewport\n        this.destroyChildComponents(currentChildIds, true);\n\n        const ensureDomOrder = this.gridOptionsWrapper.isEnsureDomOrder();\n        if (ensureDomOrder) {\n            const correctChildOrder = correctChildIds.map(id => this.headerComps[id].getGui());\n            setDomChildOrder(this.getGui(), correctChildOrder);\n        }\n    }\n\n    private createHeaderComp(columnGroupChild: ColumnGroupChild): AbstractHeaderWrapper {\n        let result: AbstractHeaderWrapper;\n\n        switch (this.type) {\n            case HeaderRowType.COLUMN:\n                result = new HeaderWrapperComp(columnGroupChild as Column, this.dropTarget, this.pinned);\n                break;\n            case HeaderRowType.COLUMN_GROUP:\n                result = new HeaderGroupWrapperComp(columnGroupChild as ColumnGroup, this.dropTarget, this.pinned);\n                break;\n            case HeaderRowType.FLOATING_FILTER:\n                result = new FloatingFilterWrapper(columnGroupChild as Column, this.pinned);\n                break;\n        }\n\n        this.createBean(result);\n        result.setParentComponent(this);\n\n        return result;\n    }\n\n    public getHeaderComps(): { [key: string]: AbstractHeaderWrapper }  {\n        return this.headerComps;\n    }\n}\n"]}