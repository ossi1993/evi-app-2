{"version":3,"sources":["../../src/ts/widgets/agRadioButton.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,2CAA0C;AAC1C,0CAAsC;AAGtC;IAAmC,iCAAU;IAA7C;QAAA,qEAmCC;QAlCa,eAAS,GAAG,iBAAiB,CAAC;QAC9B,eAAS,GAAG,OAAO,CAAC;;IAiClC,CAAC;IA/Ba,kCAAU,GAApB;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IAC/B,CAAC;IAEM,8BAAM,GAAb;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAES,yCAAiB,GAA3B;QACI,iBAAM,iBAAiB,WAAE,CAAC;QAE1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,EAAE,kBAAM,CAAC,sBAAsB,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACxG,CAAC;IAED;;;;;OAKG;IACK,gCAAQ,GAAhB,UAAiB,KAA2B;QACxC,IAAI,KAAK,CAAC,QAAQ;YACd,KAAK,CAAC,IAAI;YACV,IAAI,CAAC,MAAM,CAAC,IAAI;YAChB,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI;YAC/B,KAAK,CAAC,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAC9B;IACL,CAAC;IACL,oBAAC;AAAD,CAnCA,AAmCC,CAnCkC,uBAAU,GAmC5C;AAnCY,sCAAa","file":"agRadioButton.js","sourcesContent":["import { AgCheckbox } from './agCheckbox';\nimport { Events } from '../eventKeys';\nimport { CheckboxChangedEvent } from '../events';\n\nexport class AgRadioButton extends AgCheckbox {\n    protected className = 'ag-radio-button';\n    protected inputType = 'radio';\n\n    protected isSelected(): boolean {\n        return this.eInput.checked;\n    }\n\n    public toggle(): void {\n        const nextValue = this.getNextValue();\n        this.setValue(nextValue);\n    }\n\n    protected addInputListeners() {\n        super.addInputListeners();\n\n        this.addManagedListener(this.eventService, Events.EVENT_CHECKBOX_CHANGED, this.onChange.bind(this));\n    }\n\n    /**\n     * This ensures that if another radio button in the same named group is selected, we deselect this radio button.\n     * By default the browser does this for you, but we are managing classes ourselves in order to ensure input\n     * elements are styled correctly in IE11, and the DOM 'changed' event is only fired when a button is selected,\n     * not deselected, so we need to use our own event.\n     */\n    private onChange(event: CheckboxChangedEvent) {\n        if (event.selected &&\n            event.name &&\n            this.eInput.name &&\n            this.eInput.name === event.name &&\n            event.id &&\n            this.eInput.id !== event.id) {\n            this.setValue(false, true);\n        }\n    }\n}\n"]}