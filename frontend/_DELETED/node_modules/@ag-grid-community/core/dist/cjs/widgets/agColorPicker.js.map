{"version":3,"sources":["../../src/ts/widgets/agColorPicker.ts"],"names":[],"mappings":"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","file":"agColorPicker.js","sourcesContent":["import { AgColorPanel } from \"./agColorPanel\";\nimport { AgDialog } from \"./agDialog\";\nimport { IAgLabel } from \"./agAbstractLabel\";\nimport { AgPickerField } from \"./agPickerField\";\nimport { AgAbstractField } from \"./agAbstractField\";\nimport { _ } from \"../utils\";\n\ninterface ColorPickerConfig extends IAgLabel {\n    color: string;\n}\n\nexport class AgColorPicker extends AgPickerField<HTMLElement, string> {\n\n    protected displayTag = 'div';\n    protected className = 'ag-color-picker';\n    protected pickerIcon = 'colorPicker';\n\n    constructor(config?: ColorPickerConfig) {\n        super();\n        this.setTemplate(this.TEMPLATE.replace(/%displayField%/g, this.displayTag));\n\n        if (config && config.color) {\n            this.value = config.color;\n        }\n    }\n\n    protected postConstruct() {\n        super.postConstruct();\n\n        if (this.value) {\n            this.setValue(this.value);\n        }\n    }\n\n    protected showPicker() {\n        const eGuiRect = this.getGui().getBoundingClientRect();\n        const colorDialog = new AgDialog({\n            closable: false,\n            modal: true,\n            hideTitleBar: true,\n            minWidth: 190,\n            width: 190,\n            height: 250,\n            x: eGuiRect.right - 190,\n            y: eGuiRect.top - 250\n        });\n        this.createBean(colorDialog);\n\n        _.addCssClass(colorDialog.getGui(), 'ag-color-dialog');\n\n        const colorPanel = new AgColorPanel({\n            picker: this\n        });\n        this.createBean(colorPanel);\n\n        colorPanel.addDestroyFunc(() => {\n            if (colorDialog.isAlive()) {\n                this.destroyBean(colorDialog);\n            }\n        });\n\n        colorDialog.setParentComponent(this);\n        colorDialog.setBodyComponent(colorPanel);\n        colorPanel.setValue(this.getValue());\n\n        colorDialog.addDestroyFunc(() => {\n            const wasDestroying = this.isDestroyingPicker;\n\n            // here we check if the picker was already being\n            // destroyed to avoid a stackoverflow\n            if (!wasDestroying) {\n                this.isDestroyingPicker = true;\n                if (colorPanel.isAlive()) {\n                    this.destroyBean(colorPanel);\n                }\n            } else {\n                this.isDestroyingPicker = false;\n            }\n\n            if (this.isAlive()) {\n                this.getFocusableElement().focus();\n            }\n        });\n\n        return colorDialog;\n    }\n\n    public setValue(color: string): this {\n        if (this.value === color) { return this; }\n\n        this.value = color;\n        this.eDisplayField.style.backgroundColor = color;\n        this.dispatchEvent({ type: AgAbstractField.EVENT_CHANGED });\n\n        return this;\n    }\n\n    public getValue(): string {\n        return this.value;\n    }\n}\n"]}